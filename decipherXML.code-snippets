{
  "AutoBrand_Snippet": {
    "prefix": "auto.brand",
    "body": [
      "<exec when=\"init\">",
      "def clean_txt(txt) :",
      "  if txt == None :",
      "    return 'None'",
      "  else :",
      "    return txt.strip().replace(' ', '').upper()",
      "",
      "",
      "def auto_from_oe(auto_qid, *base_qid) :",
      "  for each in auto_qid.rows :",
      "    each.val = False",
      "",
      "  for qid in base_qid :",
      "    for eachRow in qid.rows :",
      "      if eachRow.val == None or eachRow.val == '' :",
      "        continue",
      "",
      "      ans = clean_txt(eachRow.unsafe_val)",
      "      for txt in auto_qid.rows :",
      "        if txt.displayed :",
      "          chk_list = [clean_txt(t) for t in txt.text.split('/')]",
      "          if ans in chk_list :",
      "            txt.val = True",
      "</exec>",
      "",
      "<suspend/>",
      "",
      "<checkbox ",
      "label=\"T${1:[QID1]}\"",
      "where=\"execute,survey,notdp\">",
      "  <title><div class=\"q-name\">T${1:[QID1]}</div> (HIDDEN) ${1:[QID1]} Open answer check<br />",
      "  - 정확하게 입력한 경우만 체크오타리스트 적용 필요하면 확인 필요<br />",
      "  - 오타 리스트 필요하면 '/'로 구분해서 워딩 수정<br />",
      "  - 각 워딩에 띄어쓰기는 무시함</title>",
      "  <exec>",
      "auto_from_oe(T${1:[QID1]}, ${2:[QID2]})",
      "  </exec>",
      "</checkbox>",
      "",
      "<suspend/>"
    ],
    "description": "AutoBrandFromOE/AutoBrand"
  },

  "BrandModelListWithOpen_Snippet": {
    "prefix": "bm.list.oe",
    "body": [
      "<define label=\"brand_list\">",
      "  <row label=\"b1\" value=\"1\">기아</row>",
      "  <row label=\"b2\" value=\"2\">현대</row>",
      "  <row label=\"b3\" value=\"3\">제네시스</row>",
      "  <row label=\"b4\" value=\"4\">KG모빌리티(쌍용)</row>",
      "  <row label=\"b5\" value=\"5\">르노코리아</row>",
      "  <row label=\"b6\" value=\"6\">쉐보레</row>",
      "  <row label=\"b7\" value=\"7\">메르세데스 벤츠</row>",
      "  <row label=\"b8\" value=\"8\">아우디</row>",
      "  <row label=\"b9\" value=\"9\">BMW</row>",
      "  <row label=\"b10\" value=\"10\">볼보</row>",
      "  <row label=\"b11\" value=\"11\">테슬라</row>",
      "  <row label=\"b12\" value=\"12\">폴스타</row>",
      "  <row label=\"b13\" value=\"13\">렉서스</row>",
      "  <row label=\"b14\" value=\"14\">포르쉐</row>",
      "  <row label=\"b15\" value=\"15\">닛산</row>",
      "  <row label=\"b16\" value=\"16\">토요타</row>",
      "  <row label=\"b17\" value=\"17\">혼다</row>",
      "  <row label=\"b18\" value=\"18\">인피니티</row>",
      "  <row label=\"b19\" value=\"19\">폭스바겐</row>",
      "  <row label=\"b20\" value=\"20\">랜드로버</row>",
      "  <row label=\"b21\" value=\"21\">링컨</row>",
      "  <row label=\"b22\" value=\"22\">미니</row>",
      "  <row label=\"b23\" value=\"23\">시트로엥</row>",
      "  <row label=\"b24\" value=\"24\">재규어</row>",
      "  <row label=\"b25\" value=\"25\">지프</row>",
      "  <row label=\"b26\" value=\"26\">캐딜락</row>",
      "  <row label=\"b27\" value=\"27\">크라이슬러</row>",
      "  <row label=\"b28\" value=\"28\">포드</row>",
      "  <row label=\"b29\" value=\"29\">푸조</row>",
      "  <row label=\"b30\" value=\"30\">피아트</row>",
      "  <row label=\"b31\" value=\"31\">마세라티</row>",
      "  <row label=\"b32\" value=\"32\">람보르기니</row>",
      "  <row label=\"b33\" value=\"33\">벤틀리</row>",
      "  <row label=\"b34\" value=\"34\">롤스로이스</row>",
      "  <row label=\"b35\" value=\"35\">GMC</row>",
      "  <row label=\"b98\" value=\"98\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "</define>",
      "",
      "<define label=\"model_list\">",
      "  <row label=\"m101\" value=\"101\">EV6</row>",
      "  <row label=\"m102\" value=\"102\">K3</row>",
      "  <row label=\"m103\" value=\"103\">K5</row>",
      "  <row label=\"m104\" value=\"104\">K7</row>",
      "  <row label=\"m105\" value=\"105\">K8</row>",
      "  <row label=\"m106\" value=\"106\">K9</row>",
      "  <row label=\"m107\" value=\"107\">니로 EV</row>",
      "  <row label=\"m108\" value=\"108\">니로 플러그인 하이브리드</row>",
      "  <row label=\"m109\" value=\"109\">니로 하이브리드</row>",
      "  <row label=\"m110\" value=\"110\">레이</row>",
      "  <row label=\"m111\" value=\"111\">레이 EV</row>",
      "  <row label=\"m112\" value=\"112\">모닝</row>",
      "  <row label=\"m113\" value=\"113\">모하비</row>",
      "  <row label=\"m114\" value=\"114\">셀토스</row>",
      "  <row label=\"m115\" value=\"115\">스토닉</row>",
      "  <row label=\"m116\" value=\"116\">스팅어</row>",
      "  <row label=\"m117\" value=\"117\">스포티지</row>",
      "  <row label=\"m118\" value=\"118\">쏘렌토</row>",
      "  <row label=\"m119\" value=\"119\">쏘울</row>",
      "  <row label=\"m120\" value=\"120\">쏘울 EV</row>",
      "  <row label=\"m121\" value=\"121\">카니발</row>",
      "  <row label=\"m122\" value=\"122\">카렌스</row>",
      "  <row label=\"m123\" value=\"123\">프라이드</row>",
      "  <row label=\"m124\" value=\"124\">EV9</row>",
      "  <row label=\"m198\" value=\"198\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m201\" value=\"201\">i30</row>",
      "  <row label=\"m202\" value=\"202\">I40</row>",
      "  <row label=\"m203\" value=\"203\">I40 살룬</row>",
      "  <row label=\"m204\" value=\"204\">그랜드 스타렉스</row>",
      "  <row label=\"m205\" value=\"205\">그랜저</row>",
      "  <row label=\"m206\" value=\"206\">넥쏘</row>",
      "  <row label=\"m207\" value=\"207\">맥스크루즈</row>",
      "  <row label=\"m208\" value=\"208\">베뉴</row>",
      "  <row label=\"m209\" value=\"209\">베라크루즈</row>",
      "  <row label=\"m210\" value=\"210\">벨로스터</row>",
      "  <row label=\"m211\" value=\"211\">벨로스터N</row>",
      "  <row label=\"m212\" value=\"212\">스타리아</row>",
      "  <row label=\"m213\" value=\"213\">싼타페</row>",
      "  <row label=\"m214\" value=\"214\">쏘나타</row>",
      "  <row label=\"m215\" value=\"215\">아반떼</row>",
      "  <row label=\"m216\" value=\"216\">아슬란</row>",
      "  <row label=\"m217\" value=\"217\">아이오닉</row>",
      "  <row label=\"m218\" value=\"218\">아이오닉 일렉트릭</row>",
      "  <row label=\"m219\" value=\"219\">아이오닉5</row>",
      "  <row label=\"m220\" value=\"220\">아이오닉6</row>",
      "  <row label=\"m221\" value=\"221\">아이오닉7</row>",
      "  <row label=\"m222\" value=\"222\">액센트</row>",
      "  <row label=\"m223\" value=\"223\">에쿠스</row>",
      "  <row label=\"m224\" value=\"224\">제네시스</row>",
      "  <row label=\"m225\" value=\"225\">제네시스 쿠페</row>",
      "  <row label=\"m226\" value=\"226\">캐스퍼</row>",
      "  <row label=\"m227\" value=\"227\">코나</row>",
      "  <row label=\"m228\" value=\"228\">코나 하이브리드</row>",
      "  <row label=\"m229\" value=\"229\">코나 일렉트릭</row>",
      "  <row label=\"m230\" value=\"230\">투싼</row>",
      "  <row label=\"m231\" value=\"231\">팰리세이드</row>",
      "  <row label=\"m298\" value=\"298\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m301\" value=\"301\">EQ900</row>",
      "  <row label=\"m302\" value=\"302\">G70</row>",
      "  <row label=\"m303\" value=\"303\">G80</row>",
      "  <row label=\"m304\" value=\"304\">G80 Electric</row>",
      "  <row label=\"m305\" value=\"305\">G90</row>",
      "  <row label=\"m306\" value=\"306\">GV60</row>",
      "  <row label=\"m307\" value=\"307\">GV70</row>",
      "  <row label=\"m308\" value=\"308\">GV70 Electric</row>",
      "  <row label=\"m309\" value=\"309\">GV80</row>",
      "  <row label=\"m398\" value=\"398\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m401\" value=\"401\">렉스턴</row>",
      "  <row label=\"m402\" value=\"402\">렉스턴 스포츠</row>",
      "  <row label=\"m403\" value=\"403\">렉스턴 스포츠 칸</row>",
      "  <row label=\"m404\" value=\"404\">체어맨</row>",
      "  <row label=\"m405\" value=\"405\">코란도</row>",
      "  <row label=\"m406\" value=\"406\">코란도 C</row>",
      "  <row label=\"m407\" value=\"407\">코란도 e-motion EV</row>",
      "  <row label=\"m408\" value=\"408\">코란도 투리스모</row>",
      "  <row label=\"m409\" value=\"409\">토레스</row>",
      "  <row label=\"m410\" value=\"410\">티볼리</row>",
      "  <row label=\"m498\" value=\"498\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m501\" value=\"501\">QM3</row>",
      "  <row label=\"m502\" value=\"502\">QM5</row>",
      "  <row label=\"m503\" value=\"503\">QM6</row>",
      "  <row label=\"m504\" value=\"504\">SM3</row>",
      "  <row label=\"m505\" value=\"505\">SM3 EV</row>",
      "  <row label=\"m506\" value=\"506\">SM5</row>",
      "  <row label=\"m507\" value=\"507\">SM6</row>",
      "  <row label=\"m508\" value=\"508\">SM7</row>",
      "  <row label=\"m509\" value=\"509\">XM3</row>",
      "  <row label=\"m510\" value=\"510\">조에</row>",
      "  <row label=\"m511\" value=\"511\">캡처</row>",
      "  <row label=\"m512\" value=\"512\">클리오</row>",
      "  <row label=\"m513\" value=\"513\">트위지</row>",
      "  <row label=\"m598\" value=\"598\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m601\" value=\"601\">다마스</row>",
      "  <row label=\"m602\" value=\"602\">마티즈</row>",
      "  <row label=\"m603\" value=\"603\">말리부</row>",
      "  <row label=\"m604\" value=\"604\">볼트</row>",
      "  <row label=\"m605\" value=\"605\">볼트 EUV</row>",
      "  <row label=\"m606\" value=\"606\">볼트 EV</row>",
      "  <row label=\"m607\" value=\"607\">스파크</row>",
      "  <row label=\"m608\" value=\"608\">스파크 EV</row>",
      "  <row label=\"m609\" value=\"609\">아베오</row>",
      "  <row label=\"m610\" value=\"610\">알페온</row>",
      "  <row label=\"m611\" value=\"611\">올란도</row>",
      "  <row label=\"m612\" value=\"612\">이쿼녹스</row>",
      "  <row label=\"m613\" value=\"613\">임팔라</row>",
      "  <row label=\"m614\" value=\"614\">젠트라</row>",
      "  <row label=\"m615\" value=\"615\">카마로</row>",
      "  <row label=\"m616\" value=\"616\">캡티바</row>",
      "  <row label=\"m617\" value=\"617\">콜로라도</row>",
      "  <row label=\"m618\" value=\"618\">크루즈</row>",
      "  <row label=\"m619\" value=\"619\">타호</row>",
      "  <row label=\"m620\" value=\"620\">트래버스</row>",
      "  <row label=\"m621\" value=\"621\">트랙스</row>",
      "  <row label=\"m622\" value=\"622\">트레일블레이저</row>",
      "  <row label=\"m698\" value=\"698\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m701\" value=\"701\">A-AMG-Class</row>",
      "  <row label=\"m702\" value=\"702\">A-Class</row>",
      "  <row label=\"m703\" value=\"703\">B-Class</row>",
      "  <row label=\"m704\" value=\"704\">C-amg-class</row>",
      "  <row label=\"m705\" value=\"705\">C-class</row>",
      "  <row label=\"m706\" value=\"706\">CLA-AMG-Class</row>",
      "  <row label=\"m707\" value=\"707\">CLA-class</row>",
      "  <row label=\"m708\" value=\"708\">CLS-amg-class</row>",
      "  <row label=\"m709\" value=\"709\">CLS-class</row>",
      "  <row label=\"m710\" value=\"710\">E-amg-class</row>",
      "  <row label=\"m711\" value=\"711\">E-class</row>",
      "  <row label=\"m712\" value=\"712\">EQA</row>",
      "  <row label=\"m713\" value=\"713\">EQB</row>",
      "  <row label=\"m714\" value=\"714\">EQC</row>",
      "  <row label=\"m715\" value=\"715\">EQE</row>",
      "  <row label=\"m716\" value=\"716\">EQE SUV</row>",
      "  <row label=\"m717\" value=\"717\">EQS</row>",
      "  <row label=\"m718\" value=\"718\">EQS SUV</row>",
      "  <row label=\"m719\" value=\"719\">EQS-AMG</row>",
      "  <row label=\"m720\" value=\"720\">G-AMG-Class</row>",
      "  <row label=\"m721\" value=\"721\">G-Class</row>",
      "  <row label=\"m722\" value=\"722\">GLA-AMG-Class</row>",
      "  <row label=\"m723\" value=\"723\">GLA-Class</row>",
      "  <row label=\"m724\" value=\"724\">GLB-AMG-Class</row>",
      "  <row label=\"m725\" value=\"725\">GLB-Class</row>",
      "  <row label=\"m726\" value=\"726\">GLC-AMG-Class</row>",
      "  <row label=\"m727\" value=\"727\">GLC-Class</row>",
      "  <row label=\"m728\" value=\"728\">GLE-AMG-Class</row>",
      "  <row label=\"m729\" value=\"729\">GLE-Class</row>",
      "  <row label=\"m730\" value=\"730\">GLK-Class</row>",
      "  <row label=\"m731\" value=\"731\">GLS-Class</row>",
      "  <row label=\"m732\" value=\"732\">GT-AMG-Class</row>",
      "  <row label=\"m733\" value=\"733\">Maybach GLS</row>",
      "  <row label=\"m734\" value=\"734\">Maybach S</row>",
      "  <row label=\"m735\" value=\"735\">ML-Class</row>",
      "  <row label=\"m736\" value=\"736\">S-AMG-Class</row>",
      "  <row label=\"m737\" value=\"737\">S-class</row>",
      "  <row label=\"m738\" value=\"738\">SL-AMG-Class</row>",
      "  <row label=\"m739\" value=\"739\">SLC-AMG-Class</row>",
      "  <row label=\"m740\" value=\"740\">SLC-Class</row>",
      "  <row label=\"m741\" value=\"741\">SL-Class</row>",
      "  <row label=\"m742\" value=\"742\">SLK-AMG-Class</row>",
      "  <row label=\"m743\" value=\"743\">SLK-Class</row>",
      "  <row label=\"m798\" value=\"798\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m801\" value=\"801\">A1</row>",
      "  <row label=\"m802\" value=\"802\">A3</row>",
      "  <row label=\"m803\" value=\"803\">A4</row>",
      "  <row label=\"m804\" value=\"804\">A5</row>",
      "  <row label=\"m805\" value=\"805\">A6</row>",
      "  <row label=\"m806\" value=\"806\">A7</row>",
      "  <row label=\"m807\" value=\"807\">A8</row>",
      "  <row label=\"m808\" value=\"808\">E-Tron</row>",
      "  <row label=\"m809\" value=\"809\">E-Tron GT</row>",
      "  <row label=\"m810\" value=\"810\">E-Tron S</row>",
      "  <row label=\"m811\" value=\"811\">Q2</row>",
      "  <row label=\"m812\" value=\"812\">Q3</row>",
      "  <row label=\"m813\" value=\"813\">Q4</row>",
      "  <row label=\"m814\" value=\"814\">Q4 e-tron</row>",
      "  <row label=\"m815\" value=\"815\">Q5</row>",
      "  <row label=\"m816\" value=\"816\">Q7</row>",
      "  <row label=\"m817\" value=\"817\">Q8</row>",
      "  <row label=\"m818\" value=\"818\">R8</row>",
      "  <row label=\"m819\" value=\"819\">RS</row>",
      "  <row label=\"m820\" value=\"820\">RS e-tron GT</row>",
      "  <row label=\"m821\" value=\"821\">RS5</row>",
      "  <row label=\"m822\" value=\"822\">RS6</row>",
      "  <row label=\"m823\" value=\"823\">RS7</row>",
      "  <row label=\"m824\" value=\"824\">S3</row>",
      "  <row label=\"m825\" value=\"825\">S4</row>",
      "  <row label=\"m826\" value=\"826\">S5</row>",
      "  <row label=\"m827\" value=\"827\">S6</row>",
      "  <row label=\"m828\" value=\"828\">S7</row>",
      "  <row label=\"m829\" value=\"829\">S8</row>",
      "  <row label=\"m830\" value=\"830\">SQ5</row>",
      "  <row label=\"m831\" value=\"831\">SQ8</row>",
      "  <row label=\"m832\" value=\"832\">TT</row>",
      "  <row label=\"m833\" value=\"833\">TTS</row>",
      "  <row label=\"m898\" value=\"898\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m901\" value=\"901\">1-series</row>",
      "  <row label=\"m902\" value=\"902\">2-series</row>",
      "  <row label=\"m903\" value=\"903\">3-series</row>",
      "  <row label=\"m904\" value=\"904\">4-series</row>",
      "  <row label=\"m905\" value=\"905\">5-series</row>",
      "  <row label=\"m906\" value=\"906\">6-series</row>",
      "  <row label=\"m907\" value=\"907\">7-series</row>",
      "  <row label=\"m908\" value=\"908\">8-series</row>",
      "  <row label=\"m909\" value=\"909\">Active Hybrid5</row>",
      "  <row label=\"m910\" value=\"910\">Active Tourer</row>",
      "  <row label=\"m911\" value=\"911\">GT</row>",
      "  <row label=\"m912\" value=\"912\">i3</row>",
      "  <row label=\"m913\" value=\"913\">i4</row>",
      "  <row label=\"m914\" value=\"914\">I5</row>",
      "  <row label=\"m915\" value=\"915\">i7</row>",
      "  <row label=\"m916\" value=\"916\">i8</row>",
      "  <row label=\"m917\" value=\"917\">iX</row>",
      "  <row label=\"m918\" value=\"918\">iX3</row>",
      "  <row label=\"m919\" value=\"919\">M1</row>",
      "  <row label=\"m920\" value=\"920\">M2</row>",
      "  <row label=\"m921\" value=\"921\">M3</row>",
      "  <row label=\"m922\" value=\"922\">M4</row>",
      "  <row label=\"m923\" value=\"923\">M5</row>",
      "  <row label=\"m924\" value=\"924\">M6</row>",
      "  <row label=\"m925\" value=\"925\">M7</row>",
      "  <row label=\"m926\" value=\"926\">M8</row>",
      "  <row label=\"m927\" value=\"927\">X1</row>",
      "  <row label=\"m928\" value=\"928\">X2</row>",
      "  <row label=\"m929\" value=\"929\">X3</row>",
      "  <row label=\"m930\" value=\"930\">X4</row>",
      "  <row label=\"m931\" value=\"931\">X5</row>",
      "  <row label=\"m932\" value=\"932\">X6</row>",
      "  <row label=\"m933\" value=\"933\">X7</row>",
      "  <row label=\"m934\" value=\"934\">Z4</row>",
      "  <row label=\"m998\" value=\"998\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1001\" value=\"1001\">C40</row>",
      "  <row label=\"m1002\" value=\"1002\">C40 Recharge</row>",
      "  <row label=\"m1003\" value=\"1003\">S60</row>",
      "  <row label=\"m1004\" value=\"1004\">S80</row>",
      "  <row label=\"m1005\" value=\"1005\">S90</row>",
      "  <row label=\"m1006\" value=\"1006\">V40</row>",
      "  <row label=\"m1007\" value=\"1007\">V60</row>",
      "  <row label=\"m1008\" value=\"1008\">V90</row>",
      "  <row label=\"m1009\" value=\"1009\">XC40</row>",
      "  <row label=\"m1010\" value=\"1010\">XC40 Recharge</row>",
      "  <row label=\"m1011\" value=\"1011\">XC60</row>",
      "  <row label=\"m1012\" value=\"1012\">XC70</row>",
      "  <row label=\"m1013\" value=\"1013\">XC90</row>",
      "  <row label=\"m1014\" value=\"1014\">EX90</row>",
      "  <row label=\"m1098\" value=\"1098\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1101\" value=\"1101\">모델 3</row>",
      "  <row label=\"m1102\" value=\"1102\">모델 S</row>",
      "  <row label=\"m1103\" value=\"1103\">모델 X</row>",
      "  <row label=\"m1104\" value=\"1104\">모델  Y</row>",
      "  <row label=\"m1198\" value=\"1198\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1201\" value=\"1201\">2</row>",
      "  <row label=\"m1298\" value=\"1298\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1301\" value=\"1301\">CT</row>",
      "  <row label=\"m1302\" value=\"1302\">ES</row>",
      "  <row label=\"m1303\" value=\"1303\">GS</row>",
      "  <row label=\"m1304\" value=\"1304\">IS</row>",
      "  <row label=\"m1305\" value=\"1305\">LC</row>",
      "  <row label=\"m1306\" value=\"1306\">LS</row>",
      "  <row label=\"m1307\" value=\"1307\">NX</row>",
      "  <row label=\"m1308\" value=\"1308\">RC</row>",
      "  <row label=\"m1309\" value=\"1309\">RX</row>",
      "  <row label=\"m1310\" value=\"1310\">RX450</row>",
      "  <row label=\"m1311\" value=\"1311\">UX</row>",
      "  <row label=\"m1398\" value=\"1398\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1401\" value=\"1401\">718 Boxster</row>",
      "  <row label=\"m1402\" value=\"1402\">718 Cayman</row>",
      "  <row label=\"m1403\" value=\"1403\">911 Carrera</row>",
      "  <row label=\"m1404\" value=\"1404\">911 Carrera 4</row>",
      "  <row label=\"m1405\" value=\"1405\">918 Spyder</row>",
      "  <row label=\"m1406\" value=\"1406\">박스터</row>",
      "  <row label=\"m1407\" value=\"1407\">카이옌</row>",
      "  <row label=\"m1408\" value=\"1408\">카이옌 S</row>",
      "  <row label=\"m1409\" value=\"1409\">카이맨</row>",
      "  <row label=\"m1410\" value=\"1410\">마칸</row>",
      "  <row label=\"m1411\" value=\"1411\">파나메라</row>",
      "  <row label=\"m1412\" value=\"1412\">파나메라 S</row>",
      "  <row label=\"m1413\" value=\"1413\">타이칸</row>",
      "  <row label=\"m1498\" value=\"1498\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1501\" value=\"1501\">370Z</row>",
      "  <row label=\"m1502\" value=\"1502\">알티마</row>",
      "  <row label=\"m1503\" value=\"1503\">큐브</row>",
      "  <row label=\"m1504\" value=\"1504\">GT-R</row>",
      "  <row label=\"m1505\" value=\"1505\">쥬크</row>",
      "  <row label=\"m1506\" value=\"1506\">리프</row>",
      "  <row label=\"m1507\" value=\"1507\">막시마</row>",
      "  <row label=\"m1508\" value=\"1508\">무라노</row>",
      "  <row label=\"m1509\" value=\"1509\">패스파인더</row>",
      "  <row label=\"m1510\" value=\"1510\">콰스콰이</row>",
      "  <row label=\"m1511\" value=\"1511\">엑스 트레일</row>",
      "  <row label=\"m1598\" value=\"1598\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1601\" value=\"1601\">86</row>",
      "  <row label=\"m1602\" value=\"1602\">아발론</row>",
      "  <row label=\"m1603\" value=\"1603\">아발론 하이브리드</row>",
      "  <row label=\"m1604\" value=\"1604\">캠리</row>",
      "  <row label=\"m1605\" value=\"1605\">프리우스</row>",
      "  <row label=\"m1606\" value=\"1606\">프리우스 C</row>",
      "  <row label=\"m1607\" value=\"1607\">라브 4 (Rav4)</row>",
      "  <row label=\"m1608\" value=\"1608\">시에나 (Sienna)</row>",
      "  <row label=\"m1609\" value=\"1609\">수프라</row>",
      "  <row label=\"m1698\" value=\"1698\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1701\" value=\"1701\">어코드</row>",
      "  <row label=\"m1702\" value=\"1702\">시빅</row>",
      "  <row label=\"m1703\" value=\"1703\">시빅 스포츠</row>",
      "  <row label=\"m1704\" value=\"1704\">CR-V</row>",
      "  <row label=\"m1705\" value=\"1705\">HR-V</row>",
      "  <row label=\"m1706\" value=\"1706\">레전드</row>",
      "  <row label=\"m1707\" value=\"1707\">오디세이</row>",
      "  <row label=\"m1708\" value=\"1708\">파일럿</row>",
      "  <row label=\"m1798\" value=\"1798\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1801\" value=\"1801\">Q30</row>",
      "  <row label=\"m1802\" value=\"1802\">Q50</row>",
      "  <row label=\"m1803\" value=\"1803\">Q60</row>",
      "  <row label=\"m1804\" value=\"1804\">Q70</row>",
      "  <row label=\"m1805\" value=\"1805\">QX30</row>",
      "  <row label=\"m1806\" value=\"1806\">QX50</row>",
      "  <row label=\"m1807\" value=\"1807\">QX60</row>",
      "  <row label=\"m1808\" value=\"1808\">QX70</row>",
      "  <row label=\"m1809\" value=\"1809\">QX80</row>",
      "  <row label=\"m1898\" value=\"1898\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1901\" value=\"1901\">아르테온 (Arteon)</row>",
      "  <row label=\"m1902\" value=\"1902\">비틀 (Beetle)</row>",
      "  <row label=\"m1903\" value=\"1903\">CC</row>",
      "  <row label=\"m1904\" value=\"1904\">골프 (Golf)</row>",
      "  <row label=\"m1905\" value=\"1905\">ID.4</row>",
      "  <row label=\"m1906\" value=\"1906\">제타 (Jetta)</row>",
      "  <row label=\"m1907\" value=\"1907\">파사트 (Passat)</row>",
      "  <row label=\"m1908\" value=\"1908\">페이톤 (Phaeton)</row>",
      "  <row label=\"m1909\" value=\"1909\">폴로 (Polo)</row>",
      "  <row label=\"m1910\" value=\"1910\">시로코 (Scirocco)</row>",
      "  <row label=\"m1911\" value=\"1911\">티구안 (Tiguan)</row>",
      "  <row label=\"m1912\" value=\"1912\">티구안 올스페이스 (Tiguan Allspace)</row>",
      "  <row label=\"m1913\" value=\"1913\">투어락 (Touareg)</row>",
      "  <row label=\"m1914\" value=\"1914\">xlfhr (T-Roc)</row>",
      "  <row label=\"m1998\" value=\"1998\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2001\" value=\"2001\">디펜더</row>",
      "  <row label=\"m2002\" value=\"2002\">디스커버리</row>",
      "  <row label=\"m2003\" value=\"2003\">디스커버리 스포츠</row>",
      "  <row label=\"m2004\" value=\"2004\">이보크 (Evoque)</row>",
      "  <row label=\"m2005\" value=\"2005\">프리랜더 (Freelander)</row>",
      "  <row label=\"m2006\" value=\"2006\">레인지 로버</row>",
      "  <row label=\"m2007\" value=\"2007\">레인즈 로버 이보크</row>",
      "  <row label=\"m2008\" value=\"2008\">레인지 로버 스포츠</row>",
      "  <row label=\"m2009\" value=\"2009\">레인지 로버 벨라 (Velar)</row>",
      "  <row label=\"m2098\" value=\"2098\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2101\" value=\"2101\">에이비에이터 (Aviator)</row>",
      "  <row label=\"m2102\" value=\"2102\">컨티넨탈 (Continental)</row>",
      "  <row label=\"m2103\" value=\"2103\">커세어 (Corsair)</row>",
      "  <row label=\"m2104\" value=\"2104\">MKC</row>",
      "  <row label=\"m2105\" value=\"2105\">MKS</row>",
      "  <row label=\"m2106\" value=\"2106\">MKX</row>",
      "  <row label=\"m2107\" value=\"2107\">MKZ</row>",
      "  <row label=\"m2108\" value=\"2108\">노틸러스 (Nautilus)</row>",
      "  <row label=\"m2109\" value=\"2109\">네비게이터 (Navigator)</row>",
      "  <row label=\"m2198\" value=\"2198\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2201\" value=\"2201\">미니쿠퍼</row>",
      "  <row label=\"m2202\" value=\"2202\">미니쿠퍼 클럽맨</row>",
      "  <row label=\"m2203\" value=\"2203\">미니쿠퍼 컨트리맨</row>",
      "  <row label=\"m2204\" value=\"2204\">미니쿠퍼 D</row>",
      "  <row label=\"m2205\" value=\"2205\">미니쿠퍼 D 클럽맨</row>",
      "  <row label=\"m2206\" value=\"2206\">미니쿠퍼 D 컨트리맨</row>",
      "  <row label=\"m2207\" value=\"2207\">미니쿠퍼 S</row>",
      "  <row label=\"m2208\" value=\"2208\">미니쿠퍼 S 클럽맨</row>",
      "  <row label=\"m2209\" value=\"2209\">미니쿠퍼 S 컨트리맨</row>",
      "  <row label=\"m2210\" value=\"2210\">미니쿠퍼 SD</row>",
      "  <row label=\"m2211\" value=\"2211\">미니쿠퍼 SD 클럽맨</row>",
      "  <row label=\"m2212\" value=\"2212\">미니쿠퍼 SD 컨트리맨</row>",
      "  <row label=\"m2213\" value=\"2213\">미니쿠퍼 SE</row>",
      "  <row label=\"m2214\" value=\"2214\">미니 존</row>",
      "  <row label=\"m2215\" value=\"2215\">미니 존 쿠퍼 웍스</row>",
      "  <row label=\"m2216\" value=\"2216\">미니 존 쿠퍼 웍스 컨트리맨</row>",
      "  <row label=\"m2298\" value=\"2298\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2301\" value=\"2301\">C3 에어크로스</row>",
      "  <row label=\"m2302\" value=\"2302\">C4 칵투스</row>",
      "  <row label=\"m2303\" value=\"2303\">C4 그랜드 피카소</row>",
      "  <row label=\"m2304\" value=\"2304\">C4 그랜드 스페이스 투어러</row>",
      "  <row label=\"m2305\" value=\"2305\">C4 피카소</row>",
      "  <row label=\"m2306\" value=\"2306\">C4 스페이스 투어러</row>",
      "  <row label=\"m2307\" value=\"2307\">C5 에어크로스</row>",
      "  <row label=\"m2308\" value=\"2308\">DS3</row>",
      "  <row label=\"m2309\" value=\"2309\">DS3 e-Tense</row>",
      "  <row label=\"m2310\" value=\"2310\">DS4</row>",
      "  <row label=\"m2311\" value=\"2311\">DS5</row>",
      "  <row label=\"m2312\" value=\"2312\">DS7</row>",
      "  <row label=\"m2313\" value=\"2313\">DS7 크로스백</row>",
      "  <row label=\"m2314\" value=\"2314\">그랜드 C4</row>",
      "  <row label=\"m2398\" value=\"2398\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2401\" value=\"2401\">E-PACE</row>",
      "  <row label=\"m2402\" value=\"2402\">F-PACE</row>",
      "  <row label=\"m2403\" value=\"2403\">F-TYPE</row>",
      "  <row label=\"m2404\" value=\"2404\">I-PACE</row>",
      "  <row label=\"m2405\" value=\"2405\">XE</row>",
      "  <row label=\"m2406\" value=\"2406\">XF</row>",
      "  <row label=\"m2407\" value=\"2407\">XFR</row>",
      "  <row label=\"m2408\" value=\"2408\">XJ</row>",
      "  <row label=\"m2409\" value=\"2409\">XJR</row>",
      "  <row label=\"m2498\" value=\"2498\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2501\" value=\"2501\">체로키 (Cherokee)</row>",
      "  <row label=\"m2502\" value=\"2502\">컴패스 (Compass)</row>",
      "  <row label=\"m2503\" value=\"2503\">글라디에이터 (Gladiator)</row>",
      "  <row label=\"m2504\" value=\"2504\">그랜드 체로키 (Grand Cherokee)</row>",
      "  <row label=\"m2505\" value=\"2505\">그래드 체로키 L (Grand Cherokee L)</row>",
      "  <row label=\"m2506\" value=\"2506\">그랜드 보이저 (Grand Voyager)</row>",
      "  <row label=\"m2507\" value=\"2507\">레니게이드 (Renegade)</row>",
      "  <row label=\"m2508\" value=\"2508\">랭글러 루비콘 (Wrangler Rubicon)</row>",
      "  <row label=\"m2509\" value=\"2509\">랭글러 사하라 (Wrangler Sahara)</row>",
      "  <row label=\"m2510\" value=\"2510\">랭글러 스포츠 (Wrangler SPORT)</row>",
      "  <row label=\"m2598\" value=\"2598\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2601\" value=\"2601\">ATS</row>",
      "  <row label=\"m2602\" value=\"2602\">CT4</row>",
      "  <row label=\"m2603\" value=\"2603\">CT5</row>",
      "  <row label=\"m2604\" value=\"2604\">CT5-V</row>",
      "  <row label=\"m2605\" value=\"2605\">CT6</row>",
      "  <row label=\"m2606\" value=\"2606\">CTS</row>",
      "  <row label=\"m2607\" value=\"2607\">에스컬레이드 (Escalade)</row>",
      "  <row label=\"m2608\" value=\"2608\">SRX</row>",
      "  <row label=\"m2609\" value=\"2609\">XT4</row>",
      "  <row label=\"m2610\" value=\"2610\">XT5</row>",
      "  <row label=\"m2611\" value=\"2611\">XT6</row>",
      "  <row label=\"m2612\" value=\"2612\">리릭(Lyriq)</row>",
      "  <row label=\"m2698\" value=\"2698\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2701\" value=\"2701\">200</row>",
      "  <row label=\"m2702\" value=\"2702\">300</row>",
      "  <row label=\"m2798\" value=\"2798\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2801\" value=\"2801\">이스케이프 (Escape)</row>",
      "  <row label=\"m2802\" value=\"2802\">익스페디션</row>",
      "  <row label=\"m2803\" value=\"2803\">익스플로러</row>",
      "  <row label=\"m2804\" value=\"2804\">포커스</row>",
      "  <row label=\"m2805\" value=\"2805\">퓨전 (Fusion)</row>",
      "  <row label=\"m2806\" value=\"2806\">쿠가 (Kuga)</row>",
      "  <row label=\"m2807\" value=\"2807\">몬데오 (Mondeo)</row>",
      "  <row label=\"m2808\" value=\"2808\">머스탱</row>",
      "  <row label=\"m2809\" value=\"2809\">머스탱 마하-e (Mustang Mach-E)</row>",
      "  <row label=\"m2810\" value=\"2810\">레인저</row>",
      "  <row label=\"m2811\" value=\"2811\">타우로스 (Taurus)</row>",
      "  <row label=\"m2812\" value=\"2812\">브롱코 (Bronco)</row>",
      "  <row label=\"m2898\" value=\"2898\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2901\" value=\"2901\">208</row>",
      "  <row label=\"m2902\" value=\"2902\">308</row>",
      "  <row label=\"m2903\" value=\"2903\">508</row>",
      "  <row label=\"m2904\" value=\"2904\">2008</row>",
      "  <row label=\"m2905\" value=\"2905\">3008</row>",
      "  <row label=\"m2906\" value=\"2906\">5008</row>",
      "  <row label=\"m2907\" value=\"2907\">e-2008</row>",
      "  <row label=\"m2908\" value=\"2908\">e-208</row>",
      "  <row label=\"m2998\" value=\"2998\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m3001\" value=\"3001\">500</row>",
      "  <row label=\"m3002\" value=\"3002\">500C</row>",
      "  <row label=\"m3003\" value=\"3003\">500X</row>",
      "  <row label=\"m3004\" value=\"3004\">500e</row>",
      "  <row label=\"m3098\" value=\"3098\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m3101\" value=\"3101\">기블리 (Ghibli)</row>",
      "  <row label=\"m3102\" value=\"3102\">그란카브리오 (GranCabrio)</row>",
      "  <row label=\"m3103\" value=\"3103\">그란 투리스모 (GranTurismo)</row>",
      "  <row label=\"m3104\" value=\"3104\">그라칼레 (Grecale)</row>",
      "  <row label=\"m3105\" value=\"3105\">르반테 (Levante)</row>",
      "  <row label=\"m3106\" value=\"3106\">MC20</row>",
      "  <row label=\"m3107\" value=\"3107\">콰트로포르테 (Quattroporte)</row>",
      "  <row label=\"m3198\" value=\"3198\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m3201\" value=\"3201\">아벤타도르</row>",
      "  <row label=\"m3202\" value=\"3202\">우라칸</row>",
      "  <row label=\"m3203\" value=\"3203\">우르스</row>",
      "  <row label=\"m3298\" value=\"3298\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m3301\" value=\"3301\">벤테이가 V8</row>",
      "  <row label=\"m3302\" value=\"3302\">벤테이가 W12</row>",
      "  <row label=\"m3303\" value=\"3303\">컨티넨탈 GT</row>",
      "  <row label=\"m3304\" value=\"3304\">플라잉 스퍼</row>",
      "  <row label=\"m3305\" value=\"3305\">뮬산 (Mulsanne)</row>",
      "  <row label=\"m3398\" value=\"3398\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m3401\" value=\"3401\">컬리넌</row>",
      "  <row label=\"m3402\" value=\"3402\">던 (Dawn)</row>",
      "  <row label=\"m3403\" value=\"3403\">고스트</row>",
      "  <row label=\"m3404\" value=\"3404\">팬텀</row>",
      "  <row label=\"m3405\" value=\"3405\">레이스 (Wraith)</row>",
      "  <row label=\"m3498\" value=\"3498\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m3501\" value=\"3501\">시에라 (Sierra)</row>",
      "  <row label=\"m3502\" value=\"3502\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m9801\" value=\"9801\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "</define>",
      "",
      "<define label=\"PT_list\">",
      "  <row label=\"p1\" value=\"1\">가솔린</row>",
      "  <row label=\"p2\" value=\"2\">디젤</row>",
      "  <row label=\"p3\" value=\"3\">하이브리드 (HEV)</row>",
      "  <row label=\"p4\" value=\"4\">EV (BEV)</row>",
      "  <row label=\"p5\" value=\"5\">플러그 인 하이브리드 (PHEV)</row>",
      "  <row label=\"p6\" value=\"6\">FCEV</row>",
      "  <row label=\"p7\" value=\"7\">LPG</row>",
      "  <row label=\"p98\" value=\"98\" open=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "</define>"
    ],
    "description": "CarBrandModel/BrandModelListWithOpen"
  },

  "BrandModelLogicSetting_Snippet": {
    "prefix": "bm.setting",
    "body": [
      "${0:bmQuestionHanler('.bm-question'); // enter in the respview.client.js}",
      "",
      "<style label=\"bmHeader\" name=\"el.select.header\"><![CDATA[",
      "\\@if col.label == 'model'",
      "<select name=\"\\$(name)\" id=\"\\$(id)\" class=\"input dropdown\" \\$(extra) data-open=\".\\$(this.label)oe-\\$(row.index)-\\$(col.index)\">",
      "\\@else",
      "<select name=\"\\$(name)\" id=\"\\$(id)\" class=\"input dropdown\" \\$(extra) data-open=\".\\$(this.label)oe-\\$(row.index)-\\$(col.index)\">",
      "\\@endif",
      "]]></style>",
      "<style label=\"brandSelect\" cols=\"brand\" name=\"el.select.element\"><![CDATA[",
      "\\@if 'br' in choice.label",
      "<option value=\"\\$(value)\" \\$(selected) class=\"\\${choice.styles.ss.choiceClassNames if ec.choice else \"\"}\" data-brand=\"\\$(choice.value)\" \\${'data-oe=\"1\"' if hasattr(BMbase.attr(choice.label), 'open') else \"\"}>\\$(text)</option>",
      "\\@endif",
      "]]></style>",
      "<style label=\"modelSelect\" cols=\"model\" name=\"el.select.element\"><![CDATA[",
      "\\@if 'md' in choice.label",
      "<option value=\"\\$(value)\" \\$(selected) class=\"\\${choice.styles.ss.choiceClassNames if ec.choice else \"\"}\" data-brand=\"\\${choice.value//100}\" data-model=\"\\$(choice.value)\" \\${'data-oe=\"1\"' if hasattr(BMbase.attr(choice.label), 'open') else \"\"}>\\$(text)</option>",
      "\\@endif",
      "]]></style>",
      "<style label=\"bmLeft\" name=\"question.left\"><![CDATA[",
      "\\@if this.styles.ss.legendColWidth",
      "    <\\$(tag) scope=\"row\" class=\"cell nonempty legend row-legend row-legend-left \\${\"row-legend-both \" if ec.haveRightLegend and ec.haveLeftLegend else \"\"}row-legend-basic \\${\"mobile-left-row-legend \" if force else \"\"}\\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"row-legend-both-space \" if ec.haveRightLegend and ec.haveLeftLegend and (not row.group or not row.index==0) else \"border-collapse \"} \\$(row.styles.ss.rowClassNames)\" style=\"width:\\${this.styles.ss.legendColWidth}; min-width:\\${this.styles.ss.legendColWidth}\">",
      "        <div class=\"row-text\">\\$(text)<div class=\"\\$(this.label)none-\\$(row.index)-div\"></div></div>",
      "    </\\$(tag)>",
      "\\@else",
      "    <\\$(tag) scope=\"row\" class=\"cell nonempty legend row-legend row-legend-left \\${\"row-legend-both \" if ec.haveRightLegend and ec.haveLeftLegend else \"\"}row-legend-basic \\${\"mobile-left-row-legend \" if force else \"\"}\\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"row-legend-both-space \" if ec.haveRightLegend and ec.haveLeftLegend and (row.group or not row.index==0) else \"border-collapse \"} \\$(row.styles.ss.rowClassNames)\">",
      "        <div class=\"row-text\">\\$(text)<div class=\"\\$(this.label)none-\\$(row.index)-div\"></div></div>",
      "    </\\$(tag)>",
      "\\@endif",
      "]]></style>",
      "<style label=\"bmFooter\" name=\"el.select.footer\"><![CDATA[",
      "</select>",
      "<div class=\"select-oe-div \\$(this.label)oe-\\$(row.index)-\\$(col.index)-div\"></div>",
      "]]></style>",
      "<style label=\"bmOpen\" name=\"el.text\"><![CDATA[",
      "<input type=\"text\" name=\"\\$(name)\" id=\"\\$(id)\" class=\"\\$(this.label)-\\$(row.index)-\\$(col.index) other-open\" value=\"\\$(value)\" size=\"\\$(size)\" \\${\"\" if value else \"disabled\"} placeholder=\"\\${this.styles.ss.postText or \"\"}\"/>",
      "<script>",
      "document.querySelector(\".\\$(this.label)-\\$(row.index)-\\$(col.index)-div\").appendChild(document.querySelector(\"input[name='\\$(name)']\"));",
      "</script>",
      "]]></style>",
      "",
      "<exec when=\"init\">",
      "def brand_model_check(model_unique=True, use_open=False, open_cols=[\"brand\", \"model\"], use_none=False, none_hard=True) :",
      "  oe_label = allQuestions[\"{}oe\".format(this.label)] if use_open else None",
      "  none_label = allQuestions[\"{}none\".format(this.label)] if use_none else None",
      "",
      "  # model unique",
      "  if model_unique :",
      "    models = [row.model.val for row in this.rows if row.model.any ]",
      "    if models :",
      "      for model in models :",
      "        if models.count(model) gt 1 :",
      "          error(this.lget(\"duplicate-column\"), col=this.model)",
      "          break",
      "",
      "  for row in this.rows :",
      "    # invalid logic",
      "    if row.brand.any and row.model.any :",
      "      brand_code = this.choices[row.brand.val].value",
      "      model_code = this.choices[row.model.val].value",
      "      if not brand_code == model_code//100 :",
      "        error(this.lget(\"survey.has-errors\"), row=row)",
      "",
      "    for col in this.cols :",
      "      # open check",
      "      if oe_label :",
      "        curr = row.attr(col.label)",
      "        if curr.any :",
      "          base_label = this.choices[curr.val].label",
      "          if col.label in open_cols :",
      "            if hasattr(BMbase.attr(base_label), 'open') :",
      "              open_base = oe_label.attr(row.label).attr(col.label)",
      "              if not open_base :",
      "                error(this.lget(\"extraInfo\"), row=row, col=col)",
      "",
      "      # none check",
      "      if none_label :",
      "        if not getattr(none_label, row.label) :",
      "          if not getattr(row, col.label).any :",
      "            error(this.lget(\"noAnswerSelected\"), row=row, col=col)",
      "",
      "  # none order check",
      "  if none_label :",
      "    for row in this.rows[:-1] :",
      "      next_idx = row.index + 1",
      "      if none_label.rows[row.index] and not none_label.rows[next_idx] :",
      "        error(res.chk_plz, row=row)",
      "        error(res.chk_plz, row=this.rows[next_idx])",
      "",
      "  # all none answer",
      "  if none_label and none_hard :",
      "    if len(none_label.rows) ge 2 :",
      "      if none_label.all :",
      "        for row in this.rows :",
      "          error(res.chk_plz, row=row)",
      "",
      "def set_pipe_value(base_qid, set_qid) :",
      "  if base_qid.rows :",
      "    for eachRow in base_qid.rows :",
      "      set_text = []",
      "      if eachRow.brand.any and eachRow.model.any :",
      "        brand_label = base_qid.choices[eachRow.brand.val].label",
      "        model_label = base_qid.choices[eachRow.model.val].label",
      "      ",
      "        for answer_label, col_name in [(brand_label, 'brand'), (model_label, 'model')] :",
      "          if hasattr(BMbase.attr(answer_label), 'open') :",
      "            base_qid_oe = allQuestions['%soe'%(base_qid.label)]",
      "            set_text.append(getattr(base_qid_oe.attr(eachRow.label), col_name).unsafe_val)",
      "          else :",
      "            set_text.append(base_qid.choices[getattr(eachRow, col_name).val].text)",
      "",
      "      if set_text :",
      "        set_qid.attr(eachRow.label).val = ' '.join(set_text)",
      "  else :",
      "      set_text = []",
      "      if base_qid.brand.any and base_qid.model.any :",
      "        brand_label = base_qid.choices[base_qid.brand.val].label",
      "        model_label = base_qid.choices[base_qid.model.val].label",
      "      ",
      "        for answer_label, col_name in [(brand_label, 'brand'), (model_label, 'model')] :",
      "          if hasattr(BMbase.attr(answer_label), 'open') :",
      "            base_qid_oe = allQuestions['%soe'%(base_qid.label)]",
      "            set_text.append(getattr(base_qid_oe.attr(base_qid.label), col_name).unsafe_val)",
      "          else :",
      "            set_text.append(base_qid.choices[getattr(base_qid, col_name).val].text)",
      "",
      "      if set_text :",
      "        set_qid.val = ' '.join(set_text)",
      "</exec>",
      "",
      "<radio ",
      "  label=\"BMbase\"",
      "  cond=\"0\"",
      "  optional=\"1\"",
      "  where=\"execute,survey,notdp\">",
      "  <title>(HIDDEN) Brand/Model logic base question</title>",
      "  <insert source=\"brand_list\"/>",
      "  <insert source=\"model_list\"/>",
      "</radio>",
      "",
      "<suspend/>"
    ],
    "description": "CarBrandModel/BrandModelLogicSetting"
  },

  "BrandModelOneAnswer_Snippet": {
    "prefix": "bm.simple",
    "body": [
      "<select ",
      "    label=\"${1:[QID]}\"",
      "    ss:questionClassNames=\"bm-question\">",
      "    <title>${2:[TITLE]}</title>",
      "    <validate>",
      "brand_model_check()",
      "    </validate>",
      "    <style copy=\"bmHeader\" name=\"el.select.header\"/>",
      "    <style cols=\"brand\" copy=\"brandSelect\" name=\"el.select.element\"/>",
      "    <style cols=\"model\" copy=\"modelSelect\" name=\"el.select.element\"/>",
      "    <col label=\"brand\" ss:colClassNames=\"brand\">${3:브랜드}</col>",
      "    <col label=\"model\" ss:colClassNames=\"model\">${4:모델}</col>",
      "    <insert as=\"choices\" source=\"${5:brand_list}\"/>",
      "    <insert as=\"choices\" source=\"${6:model_list}\"/>",
      "</select>",
      "",
      "<suspend/>",
      "",
      "",
      "<text ",
      "    label=\"P${1:[QID]}\"",
      "    size=\"40\"",
      "    where=\"execute,survey,notdp\">",
      "    <title>(HIDDEN) ${1:[QID]} PIPE</title>",
      "    <exec>",
      "set_pipe_value(${1:[QID]}, P${1:[QID]})",
      "    </exec>",
      "",
      "</text>",
      "",
      "<suspend/>"
    ],
    "description": "CarBrandModel/BrandModelOneAnswer"
  },

  "BrandModelOneAnswerWithNone_Snippet": {
    "prefix": "bm.none",
    "body": [
      "<block label=\"${1:[QID]}_block\">",
      "",
      "  <select ",
      "   label=\"${1:[QID]}\"",
      "   ss:questionClassNames=\"bm-question\"",
      "   optional=\"1\">",
      "    <title>${2:[TITLE]}</title>",
      "    <validate>",
      "brand_model_check(use_none=True)",
      "    </validate>",
      "",
      "    <style copy=\"bmHeader\" name=\"el.select.header\"/>",
      "    <style cols=\"brand\" copy=\"brandSelect\" name=\"el.select.element\"/>",
      "    <style cols=\"model\" copy=\"modelSelect\" name=\"el.select.element\"/>",
      "    <style copy=\"bmLeft\" name=\"question.left\"/>",
      "    <col label=\"brand\" ss:colClassNames=\"brand\">${3:브랜드}</col>",
      "    <col label=\"model\" ss:colClassNames=\"model\">${4:모델}</col>",
      "    <row label=\"r1\">${5:차량 1}</row>",
      "    <insert as=\"choices\" source=\"brand_list\"/>",
      "    <insert as=\"choices\" source=\"model_list\"/>",
      "  </select>",
      "",
      "  <checkbox ",
      "   label=\"${1:[QID]}none\"",
      "   onLoad=\"copy('${1:[QID]}', rows=True)\"",
      "   ss:questionClassNames=\"hidden\">",
      "    <title>${6:없음}</title>",
      "    <style label=\"bmNone\" name=\"el.checkbox\"><![CDATA[",
      "        <div class=\"none \\$(this.label)-\\$(row.label)\">",
      "          \\${${1:[QID]}none.title} <div class=\"none-input\"><input type=\"checkbox\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"1\" \\$(checked)/></div>",
      "        </div>",
      "        <script>",
      "        document.querySelector(\".\\$(this.label)-\\$(row.index)-div\").appendChild(document.querySelector(\".\\$(this.label)-\\$(row.label)\"));",
      "        </script>",
      "    ]]></style>",
      "  </checkbox>",
      "",
      "  <suspend/>",
      "",
      "<text ",
      "    label=\"P${1:[QID]}\"",
      "    onLoad=\"copy('${1:[QID]}', rows=True)\"",
      "    size=\"40\"",
      "    where=\"execute,survey,notdp\">",
      "    <title>(HIDDEN) ${1:[QID]} PIPE</title>",
      "    <exec>",
      "set_pipe_value(${1:[QID]}, P${1:[QID]})",
      "    </exec>",
      "",
      "</text>",
      "",
      "<suspend/>",
      "",
      "</block>",
      "<suspend/>"
    ],
    "description": "CarBrandModel/BrandModelOneAnswerWithNone"
  },

  "BrandModelOneAnswerWithOpen_Snippet": {
    "prefix": "bm.open",
    "body": [
      "<block label=\"${1:[QID]}_block\">",
      "",
      "  <select ",
      "   label=\"${1:[QID]}\"",
      "   ss:questionClassNames=\"bm-question\">",
      "    <title>${2:[TAB2]}</title>",
      "    <validate>",
      "brand_model_check(use_open=True)",
      "    </validate>",
      "    <style copy=\"bmHeader\" name=\"el.select.header\"/>",
      "    <style cols=\"brand\" copy=\"brandSelect\" name=\"el.select.element\"/>",
      "    <style cols=\"model\" copy=\"modelSelect\" name=\"el.select.element\"/>",
      "    <style copy=\"bmFooter\" name=\"el.select.footer\"/>",
      "    <col label=\"brand\" ss:colClassNames=\"brand\">${3:브랜드}</col>",
      "    <col label=\"model\" ss:colClassNames=\"model\">${4:모델}</col>",
      "    <row label=\"r1\">${5:차량 1}</row>",
      "    <insert as=\"choices\" source=\"brand_list\"/>",
      "    <insert as=\"choices\" source=\"model_list\"/>",
      "  </select>",
      "",
      "  <text ",
      "   label=\"${1:[QID]}oe\"",
      "   onLoad=\"copy('${1:[QID]}', rows=True, cols=True)\"",
      "   size=\"40\"",
      "   ss:postText=\"${6:기타}\"",
      "   ss:questionClassNames=\"hidden\">",
      "    <title>(HIDDEN) oe</title>",
      "    <style copy=\"bmOpen\" name=\"el.text\"/>",
      "  </text>",
      "",
      "  <suspend/>",
      "",
      "<text ",
      "    label=\"P${1:[QID]}\"",
      "    onLoad=\"copy('${1:[QID]}', rows=True)\"",
      "    size=\"40\"",
      "    where=\"execute,survey,notdp\">",
      "    <title>(HIDDEN) ${1:[QID]} PIPE</title>",
      "    <exec>",
      "set_pipe_value(${1:[QID]}, P${1:[QID]})",
      "    </exec>",
      "",
      "</text>",
      "",
      "<suspend/>",
      "",
      "</block>",
      "<suspend/>"
    ],
    "description": "CarBrandModel/BrandModelOneAnswerWithOpen"
  },

  "BrandModelOneAnswerWithOpenNone_Snippet": {
    "prefix": "bm.all",
    "body": [
      "<block label=\"${1:[QID]}_block\">",
      "",
      "  <select ",
      "   label=\"${1:[QID]}\"",
      "   ss:questionClassNames=\"bm-question\"",
      "   optional=\"1\">",
      "    <title>${2:[TITLE]}</title>",
      "    <validate>",
      "brand_model_check(use_open=True, use_none=True)",
      "    </validate>",
      "    <style copy=\"bmHeader\" name=\"el.select.header\"/>",
      "    <style cols=\"brand\" copy=\"brandSelect\" name=\"el.select.element\"/>",
      "    <style cols=\"model\" copy=\"modelSelect\" name=\"el.select.element\"/>",
      "    <style copy=\"bmLeft\" name=\"question.left\"/>",
      "    <style copy=\"bmFooter\" name=\"el.select.footer\"/>",
      "    <col label=\"brand\" ss:colClassNames=\"brand\">${3:브랜드}</col>",
      "    <col label=\"model\" ss:colClassNames=\"model\">${4:모델}</col>",
      "    <row label=\"r1\">${5:차량 1}</row>",
      "    <insert as=\"choices\" source=\"brand_list\"/>",
      "    <insert as=\"choices\" source=\"model_list\"/>",
      "  </select>",
      "",
      "  <text ",
      "   label=\"${1:[QID]}oe\"",
      "   onLoad=\"copy('${1:[QID]}', rows=True, cols=True)\"",
      "   size=\"40\"",
      "   ss:postText=\"${6:기타}\"",
      "   ss:questionClassNames=\"hidden\">",
      "    <title>(HIDDEN) oe</title>",
      "    <style copy=\"bmOpen\" name=\"el.text\"/>",
      "  </text>",
      "",
      "  <checkbox ",
      "   label=\"${1:[QID]}none\"",
      "   onLoad=\"copy('${1:[QID]}', rows=True)\"",
      "   ss:questionClassNames=\"hidden\">",
      "    <title>${7:없음}</title>",
      "    <style label=\"bmNone\" name=\"el.checkbox\"><![CDATA[",
      "        <div class=\"none \\$(this.label)-\\$(row.label)\">",
      "          \\${${1:[QID]}none.title} <div class=\"none-input\"><input type=\"checkbox\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"1\" \\$(checked)/></div>",
      "        </div>",
      "        <script>",
      "        document.querySelector(\".\\$(this.label)-\\$(row.index)-div\").appendChild(document.querySelector(\".\\$(this.label)-\\$(row.label)\"));",
      "        </script>",
      "    ]]></style>",
      "  </checkbox>",
      "",
      "  <suspend/>",
      "",
      "<text ",
      "    label=\"P${1:[QID]}\"",
      "    onLoad=\"copy('${1:[QID]}', rows=True)\"",
      "    size=\"40\"",
      "    where=\"execute,survey,report\">",
      "    <title>(HIDDEN) ${1:[QID]} PIPE</title>",
      "    <exec>",
      "set_pipe_value(${1:[QID]}, P${1:[QID]})",
      "    </exec>",
      "",
      "</text>",
      "",
      "<suspend/>",
      "",
      "</block>",
      "<suspend/>"
    ],
    "description": "CarBrandModel/BrandModelOneAnswerWithOpenNone"
  },

  "PTbase_Snippet": {
    "prefix": "bm.pt",
    "body": [
      "<text",
      "  label=\"PTbase\"",
      "  size=\"40\"",
      "  cond=\"0\"",
      "  optional=\"1\"",
      "  where=\"execute,survey,notdp\">",
      "  <title><div class=\"q-name\">PTbase</div> Model PT show code base</title>",
      "  <comment></comment>",
      "  <insert source=\"model_list\"/>",
      "</text>",
      "",
      "<suspend/>",
      "",
      "<exec>",
      "circle_dict = dat_to_dict('pt_show.dat', 'model')",
      "base = PTbase",
      "for x in base.rows :",
      "  circle = [pt.replace('p', '') for pt, cc in circle_dict[str(x.value)].items() if cc != None and cc.upper() == 'O']",
      "  x.val = ','.join(circle)",
      "</exec>",
      "",
      "<suspend/>"
    ],
    "description": "CarBrandModel/PTbase"
  },

  "StepByStepBM_Snippet": {
    "prefix": "sbs.bm",
    "body": [
      "<note>브랜드/모델 레이아웃이 갑자기 깨지는 경우 모델/PT 문항 rightOf 옵션이 삭제됐는지 검토</note>",
      "<block label=\"${1:[QID]}_block\">",
      "        <select ",
      "      label=\"${1:[QID]}x1\"",
      "      grouping=\"rows\"",
      "      ss:questionClassNames=\"sbs-question\"",
      "      surveyDisplay=\"mobile\">",
      "          <title><div class=\"q-name\">${1:[QID]}</div> </title>",
      "          <alt>브랜드</alt>",
      "<validate>",
      "for bm in [${1:[QID]}x1, ${1:[QID]}x2] :",
      "    for each in bm.choices :",
      "        if each and hasattr(BMbase.attr(each.label), 'open') :",
      "            oe = allQuestions['%soe'%(bm.label)]",
      "            if oe.val == None or oe.val == '' :",
      "                error(this.lget('extraInfo'))",
      "",
      "# PT",
      "pt = ${1:[QID]}x3",
      "if pt.p98  :",
      "    oe = allQuestions['%soe'%(pt.label)]",
      "    if oe.val == None or oe.val == '' :",
      "        error(this.lget('extraInfo'))",
      "</validate>",
      "        <style name=\"el.select.header\" label=\"sbs_select_header\" arg:step=\"1\" arg:stepBase=\"\" arg:stepKey=\"\"><![CDATA[",
      "<select name=\"\\$(name)\" id=\"\\$(id)\" class=\"input dropdown step-by-step step-\\$(step)\" data-stepbase=\"\\$(stepBase)\" data-stepkey=\"\\$(stepKey)\" \\$(extra)>",
      "]]></style>",
      "          <style label=\"sbs_select_default\" arg:stepName=\"브랜드\" name=\"el.select.default\"><![CDATA[",
      "<option value=\"-1\" \\$(selected)>\\$(stepName)</option>",
      "]]></style>",
      "          <style name=\"el.select.element\"><![CDATA[",
      "<option value=\"\\$(value)\" data-base=\"\\${choice.value}\" \\$(selected) class=\"\\${choice.styles.ss.choiceClassNames if ec.choice else \"\"}\" data-open=\"\\${1 if choice.open else 0}\">\\$(text)</option>",
      "]]></style>",
      "          <style label=\"sbs_select_footer\" arg:baseName=\"${1:[QID]}x1\" name=\"el.select.footer\"><![CDATA[",
      "</select>",
      "<div class=\"step-by-step-oe \\$(baseName)oe-\\$(row.label)\"></div>",
      "]]></style>",
      "          <insert as=\"choices\" source=\"brand_list\"/>",
      "        </select>",
      "",
      "        <text ",
      "      label=\"${1:[QID]}x1oe\"",
      "      size=\"40\"",
      "      ss:questionClassNames=\"hidden\">",
      "          <title>${1:[QID]}x1 open text question</title>",
      "          <alt>브랜드 - 기타</alt>",
      "          <style label=\"sbs_open\" name=\"el.text\"><![CDATA[",
      "<input type=\"text\" name=\"\\$(name)\" id=\"\\$(id)\" class=\"other-open \\${\"\" if value else \"input-disabled\"}\" value=\"\\$(value)\" size=\"\\$(size)\" \\${\"\" if value else \"disabled\"} placeholder=\"\\${this.styles.ss.postText or \"\"}\"/>",
      "<script>",
      "document.querySelector('.\\$(this.label)-\\$(row.label)').appendChild(document.querySelector(\"input[name='\\$(name)']\"));",
      "</script>",
      "]]></style>",
      "        </text>",
      "",
      "        <select ",
      "      label=\"${1:[QID]}x2\"",
      "      grouping=\"rows\"",
      "      rightOf=\"${1:[QID]}x1\">",
      "          <title>${1:[QID]} Model</title>",
      "          <alt>모델</alt>",
      "          <style copy=\"sbs_select_header\" name=\"el.select.header\" arg:step=\"2\" arg:stepBase=\"1\" arg:stepKey=\"base\"/>",
      "          <style arg:stepName=\"모델\" copy=\"sbs_select_default\" name=\"el.select.default\"/>",
      "          <style name=\"el.select.element\"><![CDATA[",
      "<option value=\"\\$(value)\" data-code=\"\\${choice.value//100}\" data-base=\"\\${PTbase.attr(choice.label).unsafe_val}\" \\$(selected) class=\"\\${choice.styles.ss.choiceClassNames if ec.choice else \"\"}\" data-open=\"\\${1 if choice.open else 0}\">\\$(text)</option>",
      "]]></style>",
      "          <style arg:baseName=\"${1:[QID]}x2\" copy=\"sbs_select_footer\" name=\"el.select.footer\"/>",
      "          <insert as=\"choices\" source=\"model_list\"/>",
      "        </select>",
      "",
      "        <text ",
      "      label=\"${1:[QID]}x2oe\"",
      "      size=\"40\"",
      "      ss:questionClassNames=\"hidden\">",
      "          <title>${1:[QID]}x2 open text question</title>",
      "          <alt>모델 - 기타</alt>",
      "          <style copy=\"sbs_open\" name=\"el.text\"/>",
      "        </text>",
      "",
      "        <select ",
      "      label=\"${1:[QID]}x3\"",
      "      grouping=\"rows\"",
      "      rightOf=\"${1:[QID]}x1\">",
      "          <title>${1:[QID]}x3 PT type</title>",
      "          <alt>엔진 타입</alt>",
      "          <style copy=\"sbs_select_header\" name=\"el.select.header\" arg:step=\"3\" arg:stepBase=\"2\" arg:stepKey=\"base\"/>",
      "          <style arg:stepName=\"엔진 타입\" copy=\"sbs_select_default\" name=\"el.select.default\"/>",
      "          <style name=\"el.select.element\"><![CDATA[",
      "<option value=\"\\$(value)\" data-code=\"\\${choice.value}\" data-base=\"1\" \\$(selected) class=\"\\${choice.styles.ss.choiceClassNames if ec.choice else \"\"}\" data-open=\"\\${1 if choice.open else 0}\">\\$(text)</option>",
      "]]></style>",
      "          <style arg:baseName=\"${1:[QID]}x3\" copy=\"sbs_select_footer\" name=\"el.select.footer\"/>",
      "          <insert as=\"choices\" source=\"PT_list\"/>",
      "        </select>",
      "",
      "        <text ",
      "      label=\"${1:[QID]}x3oe\"",
      "      size=\"40\"",
      "      ss:questionClassNames=\"hidden\">",
      "          <title>${1:[QID]}x3 open text question</title>",
      "          <alt>엔진 타입 - 기타</alt>",
      "          <style copy=\"sbs_open\" name=\"el.text\"/>",
      "        </text>",
      "",
      "        <suspend/>",
      "",
      "        <text ",
      "      label=\"${1:[QID]}_name\"",
      "      optional=\"0\"",
      "      size=\"40\"",
      "      where=\"execute,survey,notdp\">",
      "          <title><div class=\"q-name\">${1:[QID]}name</div> ${1:[QID]} pipe</title>",
      "          <exec>",
      "${1:[QID]}_name.val = return_pipe_text([[${1:[QID]}x1], [${1:[QID]}x2]])",
      "          </exec>",
      "",
      "        </text>",
      "",
      "</block>",
      "",
      "<note>${1:[QID]}_block END</note>",
      "<suspend/>"
    ],
    "description": "SBS/StepByStepBM"
  },

  "StepByStepBMRows_Snippet": {
    "prefix": "sbs.bm.rows",
    "body": [
      "<note>브랜드/모델 레이아웃이 갑자기 깨지는 경우 모델/PT 문항 rightOf 옵션이 삭제됐는지 검토</note>",
      "<block label=\"${1:[QID]}_block\">",
      "        <select ",
      "      label=\"${1:[QID]}x1\"",
      "      grouping=\"rows\"",
      "      ss:questionClassNames=\"sbs-question\"",
      "      surveyDisplay=\"mobile\">",
      "          <title><div class=\"q-name\">${1:[QID]}</div> </title>",
      "          <alt>브랜드</alt>",
      "<validate>",
      "# None Validate",
      "# sbs_validation([${1:[QID]}x1, ${1:[QID]}x2, ${1:[QID]}x3], ${1:[QID]}none)",
      "",
      "for bm in [${1:[QID]}x1, ${1:[QID]}x2] :",
      "    for eachRow in bm.rows :",
      "        if eachRow.any :",
      "            choice_answer = bm.choices[eachRow.val]",
      "            if hasattr(BMbase.attr(choice_answer.label), 'open') :",
      "                oe = allQuestions['%soe'%(bm.label)].attr(eachRow.label)",
      "                if oe.val == None or oe.val == '' :",
      "                    error(this.lget('extraInfo'), row=oe)",
      "",
      "pt = ${1:[QID]}x3",
      "for eachRow in pt.rows :",
      "    if eachRow.p98  :",
      "        oe = allQuestions['%soe'%(pt.label)].attr(eachRow.label)",
      "        if oe.val == None or oe.val == '' :",
      "            error(this.lget('extraInfo'), row=oe)",
      "</validate>",
      "        <style name=\"el.select.header\" label=\"sbs_select_header\" arg:step=\"1\" arg:stepBase=\"\" arg:stepKey=\"\"><![CDATA[",
      "<select name=\"\\$(name)\" id=\"\\$(id)\" class=\"input dropdown step-by-step step-\\$(step)\" data-stepbase=\"\\$(stepBase)\" data-stepkey=\"\\$(stepKey)\" \\$(extra)>",
      "]]></style>",
      "          <style label=\"sbs_select_default\" arg:stepName=\"브랜드\" name=\"el.select.default\"><![CDATA[",
      "<option value=\"-1\" \\$(selected)>\\$(stepName)</option>",
      "]]></style>",
      "          <style name=\"el.select.element\"><![CDATA[",
      "<option value=\"\\$(value)\" data-base=\"\\${choice.value}\" \\$(selected) class=\"\\${choice.styles.ss.choiceClassNames if ec.choice else \"\"}\" data-open=\"\\${1 if choice.open else 0}\">\\$(text)</option>",
      "]]></style>",
      "          <style label=\"sbs_select_footer\" arg:baseName=\"${1:[QID]}x1\" name=\"el.select.footer\"><![CDATA[",
      "</select>",
      "<div class=\"step-by-step-oe \\$(baseName)oe-\\$(row.label)\"></div>",
      "]]></style>",
      "          <insert as=\"choices\" source=\"brand_list\"/>",
      "          <row label=\"r1\" value=\"1\">차량 1</row>",
      "          <row label=\"r2\" value=\"2\">차량 2</row>",
      "          <row label=\"r3\" value=\"3\">차량 3</row>",
      "        </select>",
      "",
      "        <text ",
      "      label=\"${1:[QID]}x1oe\"",
      "      size=\"40\"",
      "      ss:questionClassNames=\"hidden\"",
      "      onLoad=\"copy('${1:[QID]}x1', rows=True)\">",
      "          <title>${1:[QID]}x1 open text question</title>",
      "          <alt>브랜드 - 기타</alt>",
      "          <style label=\"sbs_open\" name=\"el.text\"><![CDATA[",
      "<input type=\"text\" name=\"\\$(name)\" id=\"\\$(id)\" class=\"other-open \\${\"\" if value else \"input-disabled\"}\" value=\"\\$(value)\" size=\"\\$(size)\" \\${\"\" if value else \"disabled\"} placeholder=\"\\${this.styles.ss.postText or \"\"}\"/>",
      "<script>",
      "document.querySelector('.\\$(this.label)-\\$(row.label)').appendChild(document.querySelector(\"input[name='\\$(name)']\"));",
      "</script>",
      "]]></style>",
      "        </text>",
      "",
      "        <select ",
      "      label=\"${1:[QID]}x2\"",
      "      grouping=\"rows\"",
      "      rightOf=\"${1:[QID]}x1\"",
      "      onLoad=\"copy('${1:[QID]}x1', rows=True)\">",
      "          <title>${1:[QID]} Model</title>",
      "          <alt>모델</alt>",
      "          <style copy=\"sbs_select_header\" name=\"el.select.header\" arg:step=\"2\" arg:stepBase=\"1\" arg:stepKey=\"base\"/>",
      "          <style arg:stepName=\"모델\" copy=\"sbs_select_default\" name=\"el.select.default\"/>",
      "          <style name=\"el.select.element\"><![CDATA[",
      "<option value=\"\\$(value)\" data-code=\"\\${choice.value//100}\" data-base=\"\\${PTbase.attr(choice.label).unsafe_val}\" \\$(selected) class=\"\\${choice.styles.ss.choiceClassNames if ec.choice else \"\"}\" data-open=\"\\${1 if choice.open else 0}\">\\$(text)</option>",
      "]]></style>",
      "          <style arg:baseName=\"${1:[QID]}x2\" copy=\"sbs_select_footer\" name=\"el.select.footer\"/>",
      "          <insert as=\"choices\" source=\"model_list\"/>",
      "        </select>",
      "",
      "        <text ",
      "      label=\"${1:[QID]}x2oe\"",
      "      size=\"40\"",
      "      ss:questionClassNames=\"hidden\"",
      "      onLoad=\"copy('${1:[QID]}x1', rows=True)\">",
      "          <title>${1:[QID]}x2 open text question</title>",
      "          <alt>모델 - 기타</alt>",
      "          <style copy=\"sbs_open\" name=\"el.text\"/>",
      "        </text>",
      "",
      "        <select ",
      "      label=\"${1:[QID]}x3\"",
      "      grouping=\"rows\"",
      "      rightOf=\"${1:[QID]}x1\"",
      "      onLoad=\"copy('${1:[QID]}x1', rows=True)\">",
      "          <title>${1:[QID]}x3 PT type</title>",
      "          <alt>엔진 타입</alt>",
      "          <style copy=\"sbs_select_header\" name=\"el.select.header\" arg:step=\"3\" arg:stepBase=\"2\" arg:stepKey=\"base\"/>",
      "          <style arg:stepName=\"엔진 타입\" copy=\"sbs_select_default\" name=\"el.select.default\"/>",
      "          <style name=\"el.select.element\"><![CDATA[",
      "<option value=\"\\$(value)\" data-code=\"\\${choice.value}\" data-base=\"1\" \\$(selected) class=\"\\${choice.styles.ss.choiceClassNames if ec.choice else \"\"}\" data-open=\"\\${1 if choice.open else 0}\">\\$(text)</option>",
      "]]></style>",
      "          <style arg:baseName=\"${1:[QID]}x3\" copy=\"sbs_select_footer\" name=\"el.select.footer\"/>",
      "          <insert as=\"choices\" source=\"PT_list\"/>",
      "        </select>",
      "",
      "        <text ",
      "      label=\"${1:[QID]}x3oe\"",
      "      size=\"40\"",
      "      ss:questionClassNames=\"hidden\"",
      "      onLoad=\"copy('${1:[QID]}x1', rows=True)\">",
      "          <title>${1:[QID]}x3 open text question</title>",
      "          <alt>엔진 타입 - 기타</alt>",
      "          <style copy=\"sbs_open\" name=\"el.text\"/>",
      "        </text>",
      "",
      "        <suspend/>",
      "",
      "        <text ",
      "      label=\"${1:[QID]}_name\"",
      "      optional=\"0\"",
      "      size=\"40\"",
      "      where=\"execute,survey,notdp\"",
      "      onLoad=\"copy('${1:[QID]}x1', rows=True)\">",
      "          <title><div class=\"q-name\">${1:[QID]}name</div> ${1:[QID]} pipe</title>",
      "          <exec>",
      "for eachRow in ${1:[QID]}_name.rows :",
      "    if ${1:[QID]}x1.attr(eachRow.label).any and ${1:[QID]}x2.attr(eachRow.label).any :",
      "        eachRow.val = return_pipe_text([(${1:[QID]}x1, eachRow.label), (${1:[QID]}x2, eachRow.label)])",
      "          </exec>",
      "",
      "        </text>",
      "",
      "</block>",
      "",
      "<note>${1:[QID]}_block END</note>",
      "<suspend/>"
    ],
    "description": "SBS/StepByStepBMRows"
  },

  "StepByStepBMSetting_Snippet": {
    "prefix": "sbs.bm.setting",
    "body": [
      "<define label=\"brand_list\">",
      "  <row label=\"b1\" value=\"1\">기아</row>",
      "  <row label=\"b2\" value=\"2\">현대</row>",
      "  <row label=\"b3\" value=\"3\">제네시스</row>",
      "  <row label=\"b4\" value=\"4\">KG모빌리티(쌍용)</row>",
      "  <row label=\"b5\" value=\"5\">르노코리아</row>",
      "  <row label=\"b6\" value=\"6\">쉐보레</row>",
      "  <row label=\"b7\" value=\"7\">메르세데스 벤츠</row>",
      "  <row label=\"b8\" value=\"8\">아우디</row>",
      "  <row label=\"b9\" value=\"9\">BMW</row>",
      "  <row label=\"b10\" value=\"10\">볼보</row>",
      "  <row label=\"b11\" value=\"11\">테슬라</row>",
      "  <row label=\"b12\" value=\"12\">폴스타</row>",
      "  <row label=\"b13\" value=\"13\">렉서스</row>",
      "  <row label=\"b14\" value=\"14\">포르쉐</row>",
      "  <row label=\"b15\" value=\"15\">닛산</row>",
      "  <row label=\"b16\" value=\"16\">토요타</row>",
      "  <row label=\"b17\" value=\"17\">혼다</row>",
      "  <row label=\"b18\" value=\"18\">인피니티</row>",
      "  <row label=\"b19\" value=\"19\">폭스바겐</row>",
      "  <row label=\"b20\" value=\"20\">랜드로버</row>",
      "  <row label=\"b21\" value=\"21\">링컨</row>",
      "  <row label=\"b22\" value=\"22\">미니</row>",
      "  <row label=\"b23\" value=\"23\">시트로엥</row>",
      "  <row label=\"b24\" value=\"24\">재규어</row>",
      "  <row label=\"b25\" value=\"25\">지프</row>",
      "  <row label=\"b26\" value=\"26\">캐딜락</row>",
      "  <row label=\"b27\" value=\"27\">크라이슬러</row>",
      "  <row label=\"b28\" value=\"28\">포드</row>",
      "  <row label=\"b29\" value=\"29\">푸조</row>",
      "  <row label=\"b30\" value=\"30\">피아트</row>",
      "  <row label=\"b31\" value=\"31\">마세라티</row>",
      "  <row label=\"b32\" value=\"32\">람보르기니</row>",
      "  <row label=\"b33\" value=\"33\">벤틀리</row>",
      "  <row label=\"b34\" value=\"34\">롤스로이스</row>",
      "  <row label=\"b35\" value=\"35\">GMC</row>",
      "  <row label=\"b98\" value=\"98\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "</define>",
      "",
      "<define label=\"model_list\">",
      "  <row label=\"m101\" value=\"101\">EV6</row>",
      "  <row label=\"m102\" value=\"102\">K3</row>",
      "  <row label=\"m103\" value=\"103\">K5</row>",
      "  <row label=\"m104\" value=\"104\">K7</row>",
      "  <row label=\"m105\" value=\"105\">K8</row>",
      "  <row label=\"m106\" value=\"106\">K9</row>",
      "  <row label=\"m107\" value=\"107\">니로 EV</row>",
      "  <row label=\"m108\" value=\"108\">니로 플러그인 하이브리드</row>",
      "  <row label=\"m109\" value=\"109\">니로 하이브리드</row>",
      "  <row label=\"m110\" value=\"110\">레이</row>",
      "  <row label=\"m111\" value=\"111\">레이 EV</row>",
      "  <row label=\"m112\" value=\"112\">모닝</row>",
      "  <row label=\"m113\" value=\"113\">모하비</row>",
      "  <row label=\"m114\" value=\"114\">셀토스</row>",
      "  <row label=\"m115\" value=\"115\">스토닉</row>",
      "  <row label=\"m116\" value=\"116\">스팅어</row>",
      "  <row label=\"m117\" value=\"117\">스포티지</row>",
      "  <row label=\"m118\" value=\"118\">쏘렌토</row>",
      "  <row label=\"m119\" value=\"119\">쏘울</row>",
      "  <row label=\"m120\" value=\"120\">쏘울 EV</row>",
      "  <row label=\"m121\" value=\"121\">카니발</row>",
      "  <row label=\"m122\" value=\"122\">카렌스</row>",
      "  <row label=\"m123\" value=\"123\">프라이드</row>",
      "  <row label=\"m124\" value=\"124\">EV9</row>",
      "  <row label=\"m125\" value=\"125\">EV3</row>",
      "  <row label=\"m126\" value=\"126\">EV4</row>",
      "  <row label=\"m127\" value=\"127\">EV5</row>",
      "  <row label=\"m198\" value=\"198\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m201\" value=\"201\">i30</row>",
      "  <row label=\"m202\" value=\"202\">i40</row>",
      "  <row label=\"m203\" value=\"203\">i40 살룬</row>",
      "  <row label=\"m204\" value=\"204\">그랜드 스타렉스</row>",
      "  <row label=\"m205\" value=\"205\">그랜저</row>",
      "  <row label=\"m206\" value=\"206\">넥쏘</row>",
      "  <row label=\"m207\" value=\"207\">맥스크루즈</row>",
      "  <row label=\"m208\" value=\"208\">베뉴</row>",
      "  <row label=\"m209\" value=\"209\">베라크루즈</row>",
      "  <row label=\"m210\" value=\"210\">벨로스터</row>",
      "  <row label=\"m211\" value=\"211\">벨로스터N</row>",
      "  <row label=\"m212\" value=\"212\">스타리아</row>",
      "  <row label=\"m213\" value=\"213\">싼타페</row>",
      "  <row label=\"m214\" value=\"214\">쏘나타</row>",
      "  <row label=\"m215\" value=\"215\">아반떼</row>",
      "  <row label=\"m216\" value=\"216\">아슬란</row>",
      "  <row label=\"m217\" value=\"217\">아이오닉</row>",
      "  <row label=\"m218\" value=\"218\">아이오닉 일렉트릭</row>",
      "  <row label=\"m219\" value=\"219\">아이오닉5</row>",
      "  <row label=\"m220\" value=\"220\">아이오닉6</row>",
      "  <row label=\"m221\" value=\"221\">아이오닉9</row>",
      "  <row label=\"m222\" value=\"222\">액센트</row>",
      "  <row label=\"m223\" value=\"223\">에쿠스</row>",
      "  <row label=\"m224\" value=\"224\">제네시스</row>",
      "  <row label=\"m225\" value=\"225\">제네시스 쿠페</row>",
      "  <row label=\"m226\" value=\"226\">캐스퍼</row>",
      "  <row label=\"m227\" value=\"227\">코나</row>",
      "  <row label=\"m228\" value=\"228\">코나 하이브리드</row>",
      "  <row label=\"m229\" value=\"229\">코나 일렉트릭</row>",
      "  <row label=\"m230\" value=\"230\">투싼</row>",
      "  <row label=\"m231\" value=\"231\">넥쏘 2세대</row>",
      "  <row label=\"m232\" value=\"232\">팰리세이드</row>",
      "  <row label=\"m298\" value=\"298\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m301\" value=\"301\">EQ900</row>",
      "  <row label=\"m302\" value=\"302\">G70</row>",
      "  <row label=\"m303\" value=\"303\">G80</row>",
      "  <row label=\"m304\" value=\"304\">G80 Electric</row>",
      "  <row label=\"m305\" value=\"305\">G90</row>",
      "  <row label=\"m306\" value=\"306\">GV60</row>",
      "  <row label=\"m307\" value=\"307\">GV70</row>",
      "  <row label=\"m308\" value=\"308\">GV70 Electric</row>",
      "  <row label=\"m309\" value=\"309\">GV80</row>",
      "  <row label=\"m310\" value=\"310\">GV90</row>",
      "  <row label=\"m398\" value=\"398\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m401\" value=\"401\">렉스턴</row>",
      "  <row label=\"m402\" value=\"402\">렉스턴 스포츠</row>",
      "  <row label=\"m403\" value=\"403\">렉스턴 스포츠 칸</row>",
      "  <row label=\"m404\" value=\"404\">체어맨</row>",
      "  <row label=\"m405\" value=\"405\">코란도</row>",
      "  <row label=\"m406\" value=\"406\">코란도 C</row>",
      "  <row label=\"m407\" value=\"407\">코란도 e-motion EV</row>",
      "  <row label=\"m408\" value=\"408\">코란도 투리스모</row>",
      "  <row label=\"m409\" value=\"409\">토레스</row>",
      "  <row label=\"m410\" value=\"410\">티볼리</row>",
      "  <row label=\"m411\" value=\"411\">토레스 EVX</row>",
      "  <row label=\"m498\" value=\"498\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m501\" value=\"501\">QM3</row>",
      "  <row label=\"m502\" value=\"502\">QM5</row>",
      "  <row label=\"m503\" value=\"503\">QM6</row>",
      "  <row label=\"m504\" value=\"504\">SM3</row>",
      "  <row label=\"m505\" value=\"505\">SM3 EV</row>",
      "  <row label=\"m506\" value=\"506\">SM5</row>",
      "  <row label=\"m507\" value=\"507\">SM6</row>",
      "  <row label=\"m508\" value=\"508\">SM7</row>",
      "  <row label=\"m509\" value=\"509\">XM3</row>",
      "  <row label=\"m510\" value=\"510\">조에</row>",
      "  <row label=\"m511\" value=\"511\">캡처</row>",
      "  <row label=\"m512\" value=\"512\">클리오</row>",
      "  <row label=\"m513\" value=\"513\">트위지</row>",
      "  <row label=\"m514\" value=\"514\">아르카나</row>",
      "  <row label=\"m515\" value=\"515\">아르카나 E-테크 하이브리드</row>",
      "  <row label=\"m598\" value=\"598\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m601\" value=\"601\">다마스</row>",
      "  <row label=\"m602\" value=\"602\">마티즈</row>",
      "  <row label=\"m603\" value=\"603\">말리부</row>",
      "  <row label=\"m604\" value=\"604\">볼트</row>",
      "  <row label=\"m605\" value=\"605\">볼트 EUV</row>",
      "  <row label=\"m606\" value=\"606\">볼트 EV</row>",
      "  <row label=\"m607\" value=\"607\">스파크</row>",
      "  <row label=\"m608\" value=\"608\">스파크 EV</row>",
      "  <row label=\"m609\" value=\"609\">아베오</row>",
      "  <row label=\"m610\" value=\"610\">알페온</row>",
      "  <row label=\"m611\" value=\"611\">올란도</row>",
      "  <row label=\"m612\" value=\"612\">이쿼녹스</row>",
      "  <row label=\"m613\" value=\"613\">임팔라</row>",
      "  <row label=\"m614\" value=\"614\">젠트라</row>",
      "  <row label=\"m615\" value=\"615\">카마로</row>",
      "  <row label=\"m616\" value=\"616\">캡티바</row>",
      "  <row label=\"m617\" value=\"617\">콜로라도</row>",
      "  <row label=\"m618\" value=\"618\">크루즈</row>",
      "  <row label=\"m619\" value=\"619\">타호</row>",
      "  <row label=\"m620\" value=\"620\">트래버스</row>",
      "  <row label=\"m621\" value=\"621\">트랙스</row>",
      "  <row label=\"m622\" value=\"622\">트레일블레이저</row>",
      "  <row label=\"m698\" value=\"698\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m701\" value=\"701\">A-AMG-Class</row>",
      "  <row label=\"m702\" value=\"702\">A-Class</row>",
      "  <row label=\"m703\" value=\"703\">B-Class</row>",
      "  <row label=\"m704\" value=\"704\">C-amg-class</row>",
      "  <row label=\"m705\" value=\"705\">C-class</row>",
      "  <row label=\"m706\" value=\"706\">CLA-AMG-Class</row>",
      "  <row label=\"m707\" value=\"707\">CLA-class</row>",
      "  <row label=\"m708\" value=\"708\">CLS-amg-class</row>",
      "  <row label=\"m709\" value=\"709\">CLS-class</row>",
      "  <row label=\"m710\" value=\"710\">E-amg-class</row>",
      "  <row label=\"m711\" value=\"711\">E-class</row>",
      "  <row label=\"m712\" value=\"712\">EQA</row>",
      "  <row label=\"m713\" value=\"713\">EQB</row>",
      "  <row label=\"m714\" value=\"714\">EQC</row>",
      "  <row label=\"m715\" value=\"715\">EQE</row>",
      "  <row label=\"m716\" value=\"716\">EQE SUV</row>",
      "  <row label=\"m717\" value=\"717\">EQS</row>",
      "  <row label=\"m718\" value=\"718\">EQS SUV</row>",
      "  <row label=\"m719\" value=\"719\">EQS-AMG</row>",
      "  <row label=\"m720\" value=\"720\">G-AMG-Class</row>",
      "  <row label=\"m721\" value=\"721\">G-Class</row>",
      "  <row label=\"m722\" value=\"722\">GLA-AMG-Class</row>",
      "  <row label=\"m723\" value=\"723\">GLA-Class</row>",
      "  <row label=\"m724\" value=\"724\">GLB-AMG-Class</row>",
      "  <row label=\"m725\" value=\"725\">GLB-Class</row>",
      "  <row label=\"m726\" value=\"726\">GLC-AMG-Class</row>",
      "  <row label=\"m727\" value=\"727\">GLC-Class</row>",
      "  <row label=\"m728\" value=\"728\">GLE-AMG-Class</row>",
      "  <row label=\"m729\" value=\"729\">GLE-Class</row>",
      "  <row label=\"m730\" value=\"730\">GLK-Class</row>",
      "  <row label=\"m731\" value=\"731\">GLS-Class</row>",
      "  <row label=\"m732\" value=\"732\">GT-AMG-Class</row>",
      "  <row label=\"m733\" value=\"733\">Maybach GLS</row>",
      "  <row label=\"m734\" value=\"734\">Maybach S</row>",
      "  <row label=\"m735\" value=\"735\">ML-Class</row>",
      "  <row label=\"m736\" value=\"736\">S-AMG-Class</row>",
      "  <row label=\"m737\" value=\"737\">S-class</row>",
      "  <row label=\"m738\" value=\"738\">SL-AMG-Class</row>",
      "  <row label=\"m739\" value=\"739\">SLC-AMG-Class</row>",
      "  <row label=\"m740\" value=\"740\">SLC-Class</row>",
      "  <row label=\"m741\" value=\"741\">SL-Class</row>",
      "  <row label=\"m742\" value=\"742\">SLK-AMG-Class</row>",
      "  <row label=\"m743\" value=\"743\">SLK-Class</row>",
      "  <row label=\"m798\" value=\"798\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m801\" value=\"801\">A1</row>",
      "  <row label=\"m802\" value=\"802\">A3</row>",
      "  <row label=\"m803\" value=\"803\">A4</row>",
      "  <row label=\"m804\" value=\"804\">A5</row>",
      "  <row label=\"m805\" value=\"805\">A6</row>",
      "  <row label=\"m806\" value=\"806\">A7</row>",
      "  <row label=\"m807\" value=\"807\">A8</row>",
      "  <row label=\"m808\" value=\"808\">E-Tron</row>",
      "  <row label=\"m809\" value=\"809\">E-Tron GT</row>",
      "  <row label=\"m810\" value=\"810\">E-Tron S</row>",
      "  <row label=\"m811\" value=\"811\">Q2</row>",
      "  <row label=\"m812\" value=\"812\">Q3</row>",
      "  <row label=\"m813\" value=\"813\">Q4</row>",
      "  <row label=\"m814\" value=\"814\">Q4 e-tron</row>",
      "  <row label=\"m815\" value=\"815\">Q5</row>",
      "  <row label=\"m816\" value=\"816\">Q7</row>",
      "  <row label=\"m817\" value=\"817\">Q8</row>",
      "  <row label=\"m818\" value=\"818\">R8</row>",
      "  <row label=\"m819\" value=\"819\">RS</row>",
      "  <row label=\"m820\" value=\"820\">RS e-tron GT</row>",
      "  <row label=\"m821\" value=\"821\">RS5</row>",
      "  <row label=\"m822\" value=\"822\">RS6</row>",
      "  <row label=\"m823\" value=\"823\">RS7</row>",
      "  <row label=\"m824\" value=\"824\">S3</row>",
      "  <row label=\"m825\" value=\"825\">S4</row>",
      "  <row label=\"m826\" value=\"826\">S5</row>",
      "  <row label=\"m827\" value=\"827\">S6</row>",
      "  <row label=\"m828\" value=\"828\">S7</row>",
      "  <row label=\"m829\" value=\"829\">S8</row>",
      "  <row label=\"m830\" value=\"830\">SQ5</row>",
      "  <row label=\"m831\" value=\"831\">SQ8</row>",
      "  <row label=\"m832\" value=\"832\">TT</row>",
      "  <row label=\"m833\" value=\"833\">TTS</row>",
      "  <row label=\"m834\" value=\"834\">A6 e-tron</row>",
      "  <row label=\"m835\" value=\"835\">Q6 e-tron</row>",
      "  <row label=\"m836\" value=\"836\">Q8 e-tron</row>",
      "  <row label=\"m898\" value=\"898\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m901\" value=\"901\">1-series</row>",
      "  <row label=\"m902\" value=\"902\">2-series</row>",
      "  <row label=\"m903\" value=\"903\">3-series</row>",
      "  <row label=\"m904\" value=\"904\">4-series</row>",
      "  <row label=\"m905\" value=\"905\">5-series</row>",
      "  <row label=\"m906\" value=\"906\">6-series</row>",
      "  <row label=\"m907\" value=\"907\">7-series</row>",
      "  <row label=\"m908\" value=\"908\">8-series</row>",
      "  <row label=\"m909\" value=\"909\">Active Hybrid5</row>",
      "  <row label=\"m910\" value=\"910\">Active Tourer</row>",
      "  <row label=\"m911\" value=\"911\">GT</row>",
      "  <row label=\"m912\" value=\"912\">i3</row>",
      "  <row label=\"m913\" value=\"913\">i4</row>",
      "  <row label=\"m914\" value=\"914\">I5</row>",
      "  <row label=\"m915\" value=\"915\">i7</row>",
      "  <row label=\"m916\" value=\"916\">i8</row>",
      "  <row label=\"m917\" value=\"917\">iX</row>",
      "  <row label=\"m918\" value=\"918\">iX3</row>",
      "  <row label=\"m919\" value=\"919\">M1</row>",
      "  <row label=\"m920\" value=\"920\">M2</row>",
      "  <row label=\"m921\" value=\"921\">M3</row>",
      "  <row label=\"m922\" value=\"922\">M4</row>",
      "  <row label=\"m923\" value=\"923\">M5</row>",
      "  <row label=\"m924\" value=\"924\">M6</row>",
      "  <row label=\"m925\" value=\"925\">M7</row>",
      "  <row label=\"m926\" value=\"926\">M8</row>",
      "  <row label=\"m927\" value=\"927\">X1</row>",
      "  <row label=\"m928\" value=\"928\">X2</row>",
      "  <row label=\"m929\" value=\"929\">X3</row>",
      "  <row label=\"m930\" value=\"930\">X4</row>",
      "  <row label=\"m931\" value=\"931\">X5</row>",
      "  <row label=\"m932\" value=\"932\">X6</row>",
      "  <row label=\"m933\" value=\"933\">X7</row>",
      "  <row label=\"m934\" value=\"934\">Z4</row>",
      "  <row label=\"m998\" value=\"998\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1001\" value=\"1001\">C40</row>",
      "  <row label=\"m1002\" value=\"1002\">C40 Recharge</row>",
      "  <row label=\"m1003\" value=\"1003\">S60</row>",
      "  <row label=\"m1004\" value=\"1004\">S80</row>",
      "  <row label=\"m1005\" value=\"1005\">S90</row>",
      "  <row label=\"m1006\" value=\"1006\">V40</row>",
      "  <row label=\"m1007\" value=\"1007\">V60</row>",
      "  <row label=\"m1008\" value=\"1008\">V90</row>",
      "  <row label=\"m1009\" value=\"1009\">XC40</row>",
      "  <row label=\"m1010\" value=\"1010\">XC40 Recharge</row>",
      "  <row label=\"m1011\" value=\"1011\">XC60</row>",
      "  <row label=\"m1012\" value=\"1012\">XC70</row>",
      "  <row label=\"m1013\" value=\"1013\">XC90</row>",
      "  <row label=\"m1014\" value=\"1014\">EX90</row>",
      "  <row label=\"m1098\" value=\"1098\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1101\" value=\"1101\">모델 3</row>",
      "  <row label=\"m1102\" value=\"1102\">모델 S</row>",
      "  <row label=\"m1103\" value=\"1103\">모델 X</row>",
      "  <row label=\"m1104\" value=\"1104\">모델  Y</row>",
      "  <row label=\"m1198\" value=\"1198\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1201\" value=\"1201\">폴스타2</row>",
      "  <row label=\"m1298\" value=\"1298\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1301\" value=\"1301\">CT</row>",
      "  <row label=\"m1302\" value=\"1302\">ES</row>",
      "  <row label=\"m1303\" value=\"1303\">GS</row>",
      "  <row label=\"m1304\" value=\"1304\">IS</row>",
      "  <row label=\"m1305\" value=\"1305\">LC</row>",
      "  <row label=\"m1306\" value=\"1306\">LS</row>",
      "  <row label=\"m1307\" value=\"1307\">NX</row>",
      "  <row label=\"m1308\" value=\"1308\">RC</row>",
      "  <row label=\"m1309\" value=\"1309\">RX</row>",
      "  <row label=\"m1310\" value=\"1310\">RX450</row>",
      "  <row label=\"m1311\" value=\"1311\">UX</row>",
      "  <row label=\"m1312\" value=\"1312\">TZ</row>",
      "  <row label=\"m1398\" value=\"1398\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1401\" value=\"1401\">718 Boxster</row>",
      "  <row label=\"m1402\" value=\"1402\">718 Cayman</row>",
      "  <row label=\"m1403\" value=\"1403\">911 Carrera</row>",
      "  <row label=\"m1404\" value=\"1404\">911 Carrera 4</row>",
      "  <row label=\"m1405\" value=\"1405\">918 Spyder</row>",
      "  <row label=\"m1406\" value=\"1406\">박스터</row>",
      "  <row label=\"m1407\" value=\"1407\">카이옌</row>",
      "  <row label=\"m1408\" value=\"1408\">카이옌 S</row>",
      "  <row label=\"m1409\" value=\"1409\">카이맨</row>",
      "  <row label=\"m1410\" value=\"1410\">마칸</row>",
      "  <row label=\"m1411\" value=\"1411\">파나메라</row>",
      "  <row label=\"m1412\" value=\"1412\">파나메라 S</row>",
      "  <row label=\"m1413\" value=\"1413\">타이칸</row>",
      "  <row label=\"m1498\" value=\"1498\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1501\" value=\"1501\">370Z</row>",
      "  <row label=\"m1502\" value=\"1502\">알티마</row>",
      "  <row label=\"m1503\" value=\"1503\">큐브</row>",
      "  <row label=\"m1504\" value=\"1504\">GT-R</row>",
      "  <row label=\"m1505\" value=\"1505\">쥬크</row>",
      "  <row label=\"m1506\" value=\"1506\">리프</row>",
      "  <row label=\"m1507\" value=\"1507\">막시마</row>",
      "  <row label=\"m1508\" value=\"1508\">무라노</row>",
      "  <row label=\"m1509\" value=\"1509\">패스파인더</row>",
      "  <row label=\"m1510\" value=\"1510\">콰스콰이</row>",
      "  <row label=\"m1511\" value=\"1511\">엑스 트레일</row>",
      "  <row label=\"m1598\" value=\"1598\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1601\" value=\"1601\">86</row>",
      "  <row label=\"m1602\" value=\"1602\">아발론</row>",
      "  <row label=\"m1603\" value=\"1603\">아발론 하이브리드</row>",
      "  <row label=\"m1604\" value=\"1604\">캠리</row>",
      "  <row label=\"m1605\" value=\"1605\">프리우스</row>",
      "  <row label=\"m1606\" value=\"1606\">프리우스 C</row>",
      "  <row label=\"m1607\" value=\"1607\">라브 4 (Rav4)</row>",
      "  <row label=\"m1608\" value=\"1608\">시에나 (Sienna)</row>",
      "  <row label=\"m1609\" value=\"1609\">수프라</row>",
      "  <row label=\"m1698\" value=\"1698\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1701\" value=\"1701\">어코드</row>",
      "  <row label=\"m1702\" value=\"1702\">시빅</row>",
      "  <row label=\"m1703\" value=\"1703\">시빅 스포츠</row>",
      "  <row label=\"m1704\" value=\"1704\">CR-V</row>",
      "  <row label=\"m1705\" value=\"1705\">HR-V</row>",
      "  <row label=\"m1706\" value=\"1706\">레전드</row>",
      "  <row label=\"m1707\" value=\"1707\">오디세이</row>",
      "  <row label=\"m1708\" value=\"1708\">파일럿</row>",
      "  <row label=\"m1798\" value=\"1798\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1801\" value=\"1801\">Q30</row>",
      "  <row label=\"m1802\" value=\"1802\">Q50</row>",
      "  <row label=\"m1803\" value=\"1803\">Q60</row>",
      "  <row label=\"m1804\" value=\"1804\">Q70</row>",
      "  <row label=\"m1805\" value=\"1805\">QX30</row>",
      "  <row label=\"m1806\" value=\"1806\">QX50</row>",
      "  <row label=\"m1807\" value=\"1807\">QX60</row>",
      "  <row label=\"m1808\" value=\"1808\">QX70</row>",
      "  <row label=\"m1809\" value=\"1809\">QX80</row>",
      "  <row label=\"m1898\" value=\"1898\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m1901\" value=\"1901\">아르테온</row>",
      "  <row label=\"m1902\" value=\"1902\">비틀</row>",
      "  <row label=\"m1903\" value=\"1903\">CC</row>",
      "  <row label=\"m1904\" value=\"1904\">골프 (Golf)</row>",
      "  <row label=\"m1905\" value=\"1905\">ID.4</row>",
      "  <row label=\"m1906\" value=\"1906\">제타</row>",
      "  <row label=\"m1907\" value=\"1907\">파사트</row>",
      "  <row label=\"m1908\" value=\"1908\">페이톤</row>",
      "  <row label=\"m1909\" value=\"1909\">폴로</row>",
      "  <row label=\"m1910\" value=\"1910\">시로코</row>",
      "  <row label=\"m1911\" value=\"1911\">티구안</row>",
      "  <row label=\"m1912\" value=\"1912\">티구안 올스페이스</row>",
      "  <row label=\"m1913\" value=\"1913\">투어락</row>",
      "  <row label=\"m1914\" value=\"1914\">티록</row>",
      "  <row label=\"m1998\" value=\"1998\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2001\" value=\"2001\">디펜더</row>",
      "  <row label=\"m2002\" value=\"2002\">디스커버리</row>",
      "  <row label=\"m2003\" value=\"2003\">디스커버리 스포츠</row>",
      "  <row label=\"m2004\" value=\"2004\">이보크</row>",
      "  <row label=\"m2005\" value=\"2005\">프리랜더</row>",
      "  <row label=\"m2006\" value=\"2006\">레인지 로버</row>",
      "  <row label=\"m2007\" value=\"2007\">레인즈 로버 이보크</row>",
      "  <row label=\"m2008\" value=\"2008\">레인지 로버 스포츠</row>",
      "  <row label=\"m2009\" value=\"2009\">레인지 로버 벨라</row>",
      "  <row label=\"m2098\" value=\"2098\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2101\" value=\"2101\">에이비에이터</row>",
      "  <row label=\"m2102\" value=\"2102\">컨티넨탈</row>",
      "  <row label=\"m2103\" value=\"2103\">커세어</row>",
      "  <row label=\"m2104\" value=\"2104\">MKC</row>",
      "  <row label=\"m2105\" value=\"2105\">MKS</row>",
      "  <row label=\"m2106\" value=\"2106\">MKX</row>",
      "  <row label=\"m2107\" value=\"2107\">MKZ</row>",
      "  <row label=\"m2108\" value=\"2108\">노틸러스</row>",
      "  <row label=\"m2109\" value=\"2109\">네비게이터</row>",
      "  <row label=\"m2198\" value=\"2198\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2201\" value=\"2201\">미니쿠퍼</row>",
      "  <row label=\"m2202\" value=\"2202\">미니쿠퍼 클럽맨</row>",
      "  <row label=\"m2203\" value=\"2203\">미니쿠퍼 컨트리맨</row>",
      "  <row label=\"m2204\" value=\"2204\">미니쿠퍼 D</row>",
      "  <row label=\"m2205\" value=\"2205\">미니쿠퍼 D 클럽맨</row>",
      "  <row label=\"m2206\" value=\"2206\">미니쿠퍼 D 컨트리맨</row>",
      "  <row label=\"m2207\" value=\"2207\">미니쿠퍼 S</row>",
      "  <row label=\"m2208\" value=\"2208\">미니쿠퍼 S 클럽맨</row>",
      "  <row label=\"m2209\" value=\"2209\">미니쿠퍼 S 컨트리맨</row>",
      "  <row label=\"m2210\" value=\"2210\">미니쿠퍼 SD</row>",
      "  <row label=\"m2211\" value=\"2211\">미니쿠퍼 SD 클럽맨</row>",
      "  <row label=\"m2212\" value=\"2212\">미니쿠퍼 SD 컨트리맨</row>",
      "  <row label=\"m2213\" value=\"2213\">미니쿠퍼 SE</row>",
      "  <row label=\"m2214\" value=\"2214\">미니 존</row>",
      "  <row label=\"m2215\" value=\"2215\">미니 존 쿠퍼 웍스</row>",
      "  <row label=\"m2216\" value=\"2216\">미니 존 쿠퍼 웍스 컨트리맨</row>",
      "  <row label=\"m2298\" value=\"2298\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2301\" value=\"2301\">C3 에어크로스</row>",
      "  <row label=\"m2302\" value=\"2302\">C4 칵투스</row>",
      "  <row label=\"m2303\" value=\"2303\">C4 그랜드 피카소</row>",
      "  <row label=\"m2304\" value=\"2304\">C4 그랜드 스페이스 투어러</row>",
      "  <row label=\"m2305\" value=\"2305\">C4 피카소</row>",
      "  <row label=\"m2306\" value=\"2306\">C4 스페이스 투어러</row>",
      "  <row label=\"m2307\" value=\"2307\">C5 에어크로스</row>",
      "  <row label=\"m2308\" value=\"2308\">DS3</row>",
      "  <row label=\"m2309\" value=\"2309\">DS3 e-Tense</row>",
      "  <row label=\"m2310\" value=\"2310\">DS4</row>",
      "  <row label=\"m2311\" value=\"2311\">DS5</row>",
      "  <row label=\"m2312\" value=\"2312\">DS7</row>",
      "  <row label=\"m2313\" value=\"2313\">DS7 크로스백</row>",
      "  <row label=\"m2314\" value=\"2314\">그랜드 C4</row>",
      "  <row label=\"m2398\" value=\"2398\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2401\" value=\"2401\">E-PACE</row>",
      "  <row label=\"m2402\" value=\"2402\">F-PACE</row>",
      "  <row label=\"m2403\" value=\"2403\">F-TYPE</row>",
      "  <row label=\"m2404\" value=\"2404\">I-PACE</row>",
      "  <row label=\"m2405\" value=\"2405\">XE</row>",
      "  <row label=\"m2406\" value=\"2406\">XF</row>",
      "  <row label=\"m2407\" value=\"2407\">XFR</row>",
      "  <row label=\"m2408\" value=\"2408\">XJ</row>",
      "  <row label=\"m2409\" value=\"2409\">XJR</row>",
      "  <row label=\"m2498\" value=\"2498\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2501\" value=\"2501\">체로키</row>",
      "  <row label=\"m2502\" value=\"2502\">컴패스</row>",
      "  <row label=\"m2503\" value=\"2503\">글라디에이터</row>",
      "  <row label=\"m2504\" value=\"2504\">그랜드 체로키</row>",
      "  <row label=\"m2505\" value=\"2505\">그래드 체로키 L</row>",
      "  <row label=\"m2506\" value=\"2506\">그랜드 보이저</row>",
      "  <row label=\"m2507\" value=\"2507\">레니게이드</row>",
      "  <row label=\"m2508\" value=\"2508\">랭글러 루비콘</row>",
      "  <row label=\"m2509\" value=\"2509\">랭글러 사하라</row>",
      "  <row label=\"m2510\" value=\"2510\">랭글러 스포츠</row>",
      "  <row label=\"m2598\" value=\"2598\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2601\" value=\"2601\">ATS</row>",
      "  <row label=\"m2602\" value=\"2602\">CT4</row>",
      "  <row label=\"m2603\" value=\"2603\">CT5</row>",
      "  <row label=\"m2604\" value=\"2604\">CT5-V</row>",
      "  <row label=\"m2605\" value=\"2605\">CT6</row>",
      "  <row label=\"m2606\" value=\"2606\">CTS</row>",
      "  <row label=\"m2607\" value=\"2607\">에스컬레이드</row>",
      "  <row label=\"m2608\" value=\"2608\">SRX</row>",
      "  <row label=\"m2609\" value=\"2609\">XT4</row>",
      "  <row label=\"m2610\" value=\"2610\">XT5</row>",
      "  <row label=\"m2611\" value=\"2611\">XT6</row>",
      "  <row label=\"m2612\" value=\"2612\">리릭</row>",
      "  <row label=\"m2698\" value=\"2698\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2701\" value=\"2701\">200</row>",
      "  <row label=\"m2702\" value=\"2702\">300</row>",
      "  <row label=\"m2798\" value=\"2798\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2801\" value=\"2801\">이스케이프</row>",
      "  <row label=\"m2802\" value=\"2802\">익스페디션</row>",
      "  <row label=\"m2803\" value=\"2803\">익스플로러</row>",
      "  <row label=\"m2804\" value=\"2804\">포커스</row>",
      "  <row label=\"m2805\" value=\"2805\">퓨전</row>",
      "  <row label=\"m2806\" value=\"2806\">쿠가</row>",
      "  <row label=\"m2807\" value=\"2807\">몬데오</row>",
      "  <row label=\"m2808\" value=\"2808\">머스탱</row>",
      "  <row label=\"m2809\" value=\"2809\">머스탱 마하-e</row>",
      "  <row label=\"m2810\" value=\"2810\">레인저</row>",
      "  <row label=\"m2811\" value=\"2811\">타우로스</row>",
      "  <row label=\"m2812\" value=\"2812\">브롱코</row>",
      "  <row label=\"m2898\" value=\"2898\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m2901\" value=\"2901\">208</row>",
      "  <row label=\"m2902\" value=\"2902\">308</row>",
      "  <row label=\"m2903\" value=\"2903\">508</row>",
      "  <row label=\"m2904\" value=\"2904\">2008</row>",
      "  <row label=\"m2905\" value=\"2905\">3008</row>",
      "  <row label=\"m2906\" value=\"2906\">5008</row>",
      "  <row label=\"m2907\" value=\"2907\">e-2008</row>",
      "  <row label=\"m2908\" value=\"2908\">e-208</row>",
      "  <row label=\"m2998\" value=\"2998\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m3001\" value=\"3001\">500</row>",
      "  <row label=\"m3002\" value=\"3002\">500C</row>",
      "  <row label=\"m3003\" value=\"3003\">500X</row>",
      "  <row label=\"m3004\" value=\"3004\">500e</row>",
      "  <row label=\"m3098\" value=\"3098\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m3101\" value=\"3101\">기블리</row>",
      "  <row label=\"m3102\" value=\"3102\">그란카브리오</row>",
      "  <row label=\"m3103\" value=\"3103\">그란 투리스모</row>",
      "  <row label=\"m3104\" value=\"3104\">그라칼레</row>",
      "  <row label=\"m3105\" value=\"3105\">르반테</row>",
      "  <row label=\"m3106\" value=\"3106\">MC20</row>",
      "  <row label=\"m3107\" value=\"3107\">콰트로포르테</row>",
      "  <row label=\"m3198\" value=\"3198\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m3201\" value=\"3201\">아벤타도르</row>",
      "  <row label=\"m3202\" value=\"3202\">우라칸</row>",
      "  <row label=\"m3203\" value=\"3203\">우르스</row>",
      "  <row label=\"m3298\" value=\"3298\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m3301\" value=\"3301\">벤테이가 V8</row>",
      "  <row label=\"m3302\" value=\"3302\">벤테이가 W12</row>",
      "  <row label=\"m3303\" value=\"3303\">컨티넨탈 GT</row>",
      "  <row label=\"m3304\" value=\"3304\">플라잉 스퍼</row>",
      "  <row label=\"m3305\" value=\"3305\">뮬산</row>",
      "  <row label=\"m3398\" value=\"3398\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m3401\" value=\"3401\">컬리넌</row>",
      "  <row label=\"m3402\" value=\"3402\">던</row>",
      "  <row label=\"m3403\" value=\"3403\">고스트</row>",
      "  <row label=\"m3404\" value=\"3404\">팬텀</row>",
      "  <row label=\"m3405\" value=\"3405\">레이스</row>",
      "  <row label=\"m3498\" value=\"3498\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m3501\" value=\"3501\">시에라</row>",
      "  <row label=\"m3502\" value=\"3502\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "  <row label=\"m9801\" value=\"9801\" open=\"1\" openOptional=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "</define>",
      "",
      "",
      "<define label=\"PT_list\">",
      "  <row label=\"p1\" value=\"1\">가솔린</row>",
      "  <row label=\"p2\" value=\"2\">디젤</row>",
      "  <row label=\"p3\" value=\"3\">하이브리드 (HEV)</row>",
      "  <row label=\"p4\" value=\"4\">EV (BEV)</row>",
      "  <row label=\"p5\" value=\"5\">플러그 인 하이브리드 (PHEV)</row>",
      "  <row label=\"p6\" value=\"6\">FCEV</row>",
      "  <row label=\"p7\" value=\"7\">LPG</row>",
      "  <row label=\"p98\" value=\"98\" open=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>",
      "</define>",
      "",
      "",
      "",
      "<radio ",
      "  label=\"BMbase\"",
      "  cond=\"0\"",
      "  optional=\"1\"",
      "  where=\"execute,survey,notdp\">",
      "  <title>(HIDDEN) Brand/Model logic base question</title>",
      "  <insert source=\"brand_list\"/>",
      "  <insert source=\"model_list\"/>",
      "</radio>",
      "",
      "",
      "<text",
      "  label=\"PTbase\"",
      "  size=\"40\"",
      "  cond=\"0\"",
      "  optional=\"1\"",
      "  where=\"execute,survey,notdp\">",
      "  <title><div class=\"q-name\">PTbase</div> Model PT show code base</title>",
      "  <comment></comment>",
      "  <insert source=\"model_list\"/>",
      "</text>",
      "",
      "<suspend/>",
      "",
      "<exec>",
      "circle_dict = dat_to_dict('pt_show.dat', 'model')",
      "base = PTbase",
      "for x in base.rows :",
      "  circle = [pt.replace('p', '') for pt, cc in circle_dict[str(x.value)].items() if cc != None and cc.upper() == 'O']",
      "  x.val = ','.join(circle)",
      "</exec>",
      "",
      "",
      "<suspend/>",
      "",
      "<exec when=\"init\">",
      "def sbs_validation(qid_list, none_qid=None) :",
      "  # None validation",
      "  if none_qid :",
      "    for qid in qid_list :",
      "      for eachRow in qid.rows :",
      "        if none_qid.attr(eachRow.label) :",
      "          continue",
      "",
      "        if not eachRow.any :",
      "          error(this.lget('noAnswerSelected'))",
      "",
      "def return_car_answer(base, label=None) :",
      "    row_base = base.attr(label) if label != None else base",
      "    if row_base.any :",
      "      lb = base.choices[row_base.val].label",
      "      if hasattr(BMbase.attr(lb), 'open') :",
      "        oe_name = '%soe'%(base.label)",
      "        oe_base = allQuestions[oe_name]",
      "        oe_answer = oe_base.attr(label).unsafe_val if label != None else oe_base.unsafe_val",
      "        return oe_answer",
      "      else :",
      "        return BMbase.attr(lb).text",
      "",
      "def return_pipe_text(base) :",
      "  join_list = [return_car_answer(base=x[0]) if len(x) == 1 else return_car_answer(base=x[0], label=x[1]) for x in base]",
      "  if join_list :",
      "    return ' '.join(join_list)",
      "  else :",
      "    return None",
      "</exec>",
      "",
      "<suspend/>"
    ],
    "description": "SBS/StepByStepBMSetting"
  },

  "ConjointAttrRotation_Snippet": {
    "prefix": "dcm.rotation",
    "body": [
      "<style name=\"question.after\"><![CDATA[",
      "<script>",
      "const rearrangeTableRows = (orderArray)=>{",
      "    const tbody = document.querySelector('.dcm table tbody:nth-child(1)');",
      "",
      "    if (!tbody) {",
      "        console.error('해당 조건에 맞는 tbody를 찾을 수 없습니다.');",
      "        return;",
      "    }",
      "    const trs = Array.from(tbody.querySelectorAll('tr'));",
      "    const headerTr = trs.shift();",
      "    const reorderedTrs = orderArray.map(index => trs[index]);",
      "    tbody.innerHTML = '';",
      "    tbody.appendChild(headerTr);",
      "    reorderedTrs.forEach(tr => tbody.appendChild(tr));",
      "}",
      "",
      "//rearrangeTableRows([5, 0, 1, 2, 3, 4, 6]);",
      "</script>",
      "]]></style>"
    ],
    "description": "Conjoint(DCM)/ConjointAttrRotation"
  },

  "ConjointCSS_Snippet": {
    "prefix": "dcm.css",
    "body": [
      "/* add this only if you have scrollbars in IE7,8",
      "div.dcm {",
      "    overflow: hidden;",
      "}",
      "*/",
      ".dcm tr.legend th.legend {",
      "    font-weight: bold;",
      "    width: auto;",
      "    text-align:center;",
      "}",
      "",
      ".dcm th, .dcm td {",
      "    padding: 15px;",
      "}",
      "",
      ".dcm td {",
      "  font-size: 1.1rem;",
      "}",
      "",
      ".dcm tbody:nth-child(1) tr:nth-child(even) {",
      "    background-color: #FFFFFF;",
      "}",
      "",
      ".dcm tbody:nth-child(1) tr:nth-child(odd):not(:nth-child(1)) {",
      "    background-color: #f3f3f3;",
      "}",
      "",
      ".dcm td.dcm_legend {",
      "    font-weight: bold;",
      "    text-align: left;",
      "    width: 120px;",
      "}",
      "",
      ".dcm td.dcm_item {",
      "    text-align: center;",
      "    width: 120px;",
      "}",
      "",
      ".dcm th, .dcm td {",
      "  border: 1px solid #ccc;",
      "}",
      "",
      ".dcm .dcm_legend2, .dcm .survey-q-grid-collegend {",
      "  background-color: #dae6ff;",
      "}",
      "",
      ".dcm table {",
      "  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);",
      "}",
      "",
      ".dcm .grid-table-mode .nonempty {",
      "  border: 1px solid #ccc !important;",
      "}"
    ],
    "description": "Conjoint(DCM)/ConjointCSS"
  },

  "ConjointExec_Snippet": {
    "prefix": "dcm.exec",
    "body": [
      "def setupDCMFile(fname, fileDelimiter=\"\t\"):",
      "    f = open(\"%s/%s\" % (gv.survey.path, fname))",
      "    dcmObj = [ line.strip(\"\r\n\").split(fileDelimiter) for line in f.readlines() ]",
      "",
      "    d = {}",
      "    dcm_concepts = []",
      "",
      "    for i,row in enumerate(dcmObj):",
      "        if i:",
      "            d[\"v%s_t%s_c%s\" % (row[0],row[1],row[2])] = row[3:]",
      "            if row[2] not in dcm_concepts:",
      "                dcm_concepts.append(row[2])",
      "",
      "    concepts = [ int(x) for x in dcm_concepts ]",
      "    concepts.sort()",
      "    d[\"concepts\"] = dcm_concepts",
      "",
      "    return d",
      "",
      "#set persistent items, format: p.concept#_att#",
      "def setupDCMItems(d, vt, prefix=\"1\"):",
      "    print \"***** STAFF ONLY *****\"",
      "    print \"***** DCM Matrix *****\"",
      "    print \"Version_Task: %s\" % vt",
      "",
      "    for concept in d.get(\"concepts\"):",
      "        attributes = d[ \"%s_c%s\" % (vt,concept) ]",
      "        print \"Concept %s: %s\" % (concept,attributes)",
      "",
      "        for i,attr in enumerate(attributes):",
      "            p[ \"concept%s_att%s\" % (concept,i+1) ] = res[ \"%s_att%s_level%s\" % (prefix,i+1,attr) ]",
      "            p[ \"dcmLegend_att%s\" % (i+1) ] = res[ \"%s_legend%s\" % (prefix,i+1) ]"
    ],
    "description": "Conjoint(DCM)/ConjointExec"
  },

  "ConjointMobile_Snippet": {
    "prefix": "dcm.mobile",
    "body": [
      "<note># CSS</note>",
      "\\@keyframes slideAnimation {",
      "    0%, 100% {",
      "        transform: translateX(0);",
      "    }",
      "    50% {",
      "        transform: translateX(-10px);",
      "    }",
      "}",
      "",
      ".scroll-indicator {",
      "  position: fixed;",
      "  right: 0;",
      "  top: 50%;",
      "  cursor: pointer;",
      "  display: none;",
      "  animation: slideAnimation 1s infinite alternate;",
      "  transition: transform 0.3s;",
      "}",
      "",
      ".scroll-indicator:hover {",
      "    animation-play-state: paused;",
      "}",
      "",
      ".scroll-indicator svg {",
      "  width: 50px;",
      "  opacity: 0.8;",
      "  color: #2d6df6;",
      "}",
      "",
      ".survey-container {",
      "  overflow: unset !important;",
      "}",
      "",
      "\\@media (max-width: 800px){",
      "  .survey-container {",
      "    //width: fit-content;",
      "  }",
      "\\@if not device.mobileDevice",
      "  .answers {",
      "      overflow-x: scroll;",
      "  }",
      "\\@endif",
      "\\@if device.mobileDevice",
      "  .answers {",
      "    zoom: 0.5;",
      "  }",
      "\\@endif",
      "}",
      "",
      ".dcm .legend.top-legend {",
      "  position: sticky;",
      "  top: 0;",
      "}",
      "",
      ".only-mobile {",
      "  margin-top: 20px;",
      "  font-weight: bold;",
      "}",
      "",
      "",
      "<note># JS</note>",
      "<style label=\"scroll_indicator\" name=\"survey.question.answers.end\"><![CDATA[",
      "\\@if not ec.simpleList",
      "\\@if not simple",
      "</tbody>",
      "\\@endif",
      "</\\$(tag)>",
      "\\@endif",
      "<!-- /.grid -->",
      "<div class=\"only-mobile\"></div>",
      "<div class=\"scroll-indicator\">",
      "  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">",
      "    <path fill-rule=\"evenodd\" d=\"M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm4.28 10.28a.75.75 0 000-1.06l-3-3a.75.75 0 10-1.06 1.06l1.72 1.72H8.25a.75.75 0 000 1.5h5.69l-1.72 1.72a.75.75 0 101.06 1.06l3-3z\" clip-rule=\"evenodd\" />",
      "  </svg>",
      "</div>",
      "</div>",
      "\\@if device.mobileDevice",
      "<script>",
      "const noneCell = document.querySelector('td[headers=\"\\$(this.label)_c99\"]');",
      "const inputID = noneCell.querySelector('input[type=radio]').id;",
      "const setMobile = document.querySelector('.only-mobile');",
      "",
      "while (noneCell.firstChild) {",
      "    setMobile.appendChild(noneCell.firstChild);",
      "}",
      "",
      "const noneText = \"\\${res.NoneText}\";",
      "const newLabel = document.createElement('label');",
      "newLabel.innerHTML = noneText;",
      "newLabel.htmlFor = inputID;",
      "",
      "setMobile.appendChild(newLabel);",
      "",
      "noneCell.style.display = 'none';",
      "</script>",
      "\\@endif",
      "<!-- /.answers -->",
      "]]></style>",
      "<style label=\"move_to_right\" name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "const btnContinue = document.querySelector('#btn_continue');",
      "const answersDiv = document.querySelector('.answers');",
      "const scrollDiv = document.querySelector('.answers');",
      "const scrollIndicator = document.querySelector('.scroll-indicator');",
      "let isUnlocked = false; // 스크롤을 다 넘긴 후의 상태를 추적하기 위한 변수",
      "",
      "const handleScroll = () => {",
      "    if (((scrollDiv.scrollWidth - scrollDiv.scrollLeft) - 5) <= scrollDiv.clientWidth) {",
      "        btnContinue.disabled = false;",
      "        scrollIndicator.style.display = 'none';",
      "        isUnlocked = true; // 스크롤을 다 넘겼다는 상태를 저장",
      "    }",
      "};",
      "",
      "const updateScrollIndicatorAndButton = () => {",
      "    if (!isUnlocked) { // 스크롤을 다 넘기지 않은 상태에서만 실행",
      "        if (scrollDiv.scrollWidth >  scrollDiv.clientWidth) {",
      "            scrollIndicator.style.display = 'block';",
      "            btnContinue.disabled = true;",
      "        } else {",
      "            scrollIndicator.style.display = 'none';",
      "            btnContinue.disabled = false;",
      "            isUnlocked = true;",
      "        }",
      "    }",
      "};",
      "",
      "// 페이지 로드 시 스크롤 가능한지 확인",
      "updateScrollIndicatorAndButton();",
      "",
      "// 스크롤 이벤트 리스너 추가",
      "scrollDiv.addEventListener('scroll', handleScroll);",
      "",
      "// 브라우저 크기 변동 시 스크롤 가능한지 확인",
      "window.addEventListener('resize', updateScrollIndicatorAndButton);",
      "window.addEventListener('orientationchange', updateScrollIndicatorAndButton);",
      "",
      "// .scroll-indicator 클릭 시 스크롤 움직이기",
      "scrollIndicator.addEventListener('click', () => {",
      "    scrollDiv.scrollLeft += 300;  // ex: 300px만큼 스크롤 움직임",
      "});",
      "]]></style>",
      "",
      "",
      "<note># Question XML Style Change</note>",
      "<note>name=\"question.top-legend\"</note>",
      "<td rowspan=\"\\${int(\\$(attributes))}\" style=\" border-top: none; text-align: center;\\${'display: none;' if device.mobileDevice else ''}\"><b>\\$(noneText)</b></td>",
      "",
      "<note>question.top-legend-item</note>",
      "\\@if addNoneColumn == '1' and col.index == (ec.colCount - 1)",
      "    <th id=\"\\$(this.label)_\\$(col.label)\" style=\"border-bottom: none; width: 125px;\\${'display: none;' if device.mobileDevice else ''}\" >",
      "        \\$(text)",
      "    </th>",
      "\\@else"
    ],
    "description": "Conjoint(DCM)/ConjointMobile"
  },

  "ConjointQuestion_Snippet": {
    "prefix": "dcm.question",
    "body": [
      "<block label=\"${1:[QID]}_dcm_block\">",
      "",
      "    <quota label=\"${2:[QUOTA]}_label\" sheet=\"${2:[QUOTA]}\"/>",
      "",
      "    <exec when=\"init\">",
      "${1:[QID]}_dcm = setupDCMFile(\"${3:[FILENAME]}.dat\")",
      "    </exec>",
      "",
      "    <number ",
      "    label=\"${1:[QID]}_Version\"",
      "    size=\"3\"",
      "    where=\"execute,survey,report\">",
      "      <title>${1:[QID]} - DCM Version</title>",
      "      <exec>",
      "print p.markers",
      "for x in p.markers:",
      "    if \"/${2:[QUOTA]}/DCM_ver_\" in x:",
      "        ${1:[TAB1]}_Version.val = int(x.split(\"_\")[-1])",
      "        break",
      "      </exec>",
      "",
      "    </number>",
      "",
      "    <suspend/>",
      "",
      "    <exec>",
      "p.startTime = timeSpent()",
      "    </exec>",
      "",
      "    <suspend/>",
      "",
      "    <loop label=\"${1:[QID]}_dcm_loop\" randomizeChildren=\"1\" vars=\"task\">",
      "      <title>${1:[QID]} - DCM Loop</title>",
      "      <block label=\"${1:[QID]}_dcm_loop_block\">",
      "        <radio ",
      "      label=\"${1:[QID]}_[loopvar: task]\"",
      "      optional=\"0\"",
      "      ss:questionClassNames=\"dcm\"",
      "      surveyDisplay=\"desktop\">",
      "          <title><div class=\"q-name\">${1:[QID]}_[loopvar: task]</div> ${4:[TITLE]}</title>",
      "          <exec>",
      "setupDCMItems( ${1:[QID]}_dcm, \"v%s_t%s\" % (${1:[QID]}_Version.val,\"[loopvar: task]\"),\"${1:[QID]}\" )",
      "p.DCMcount = \"%d\" % (${1:[QID]}_dcm_loop_expanded.order.index([loopvar: task]-1) + 1)",
      "          </exec>",
      "",
      "          <alt>DCM Task: [loopvar: task]</alt>",
      "          <col label=\"c1\">Concept 1</col>",
      "          <col label=\"c2\">Concept 2</col>",
      "          <col label=\"c3\">Concept 3</col>",
      "          <col label=\"c4\">Concept 4</col>",
      "          <col label=\"c5\" alt=\"None of these\"/>",
      "          <style arg:addNoneColumn=\"1\" arg:attributes=\"${5:[Attr CNT]}\" arg:noneText=\"\\${res.NoneText}\" arg:top=\"\\${res.TopText}\" arg:yeslegend=\"1\" name=\"question.top-legend\"><![CDATA[",
      "\\@if this.styles.ss.colLegendHeight",
      "<tr class=\"legend top-legend\\${\" GtTenColumns\" if ec.colCount > 10 else \"\"} \\$(colError)\" style=\"height:\\${this.styles.ss.colLegendHeight};\">",
      "\\@else",
      "<tr class=\"legend top-legend\\${\" GtTenColumns\" if ec.colCount > 10 else \"\"} \\$(colError)\">",
      "\\@endif",
      "",
      "\\@if yeslegend == '1'",
      "    <th class=\"dcm_legend2\">\\$(top)</th>",
      "\\@endif",
      "    \\$(left)",
      "    \\$(legends)",
      "    \\$(right)",
      "</tr>",
      "",
      "\\@for x in range(1,int(attributes)+1)",
      "<tr class=\"\\${'dcm_%s' % ['odd','even'][x % 2]}\">",
      "\\@if yeslegend == '1'",
      "    <td class=\"dcm_legend\">\\${p.get('dcmLegend_att%d' % x)}</td>",
      "\\@endif",
      "    <td class=\"dcm_item\">\\${p.get('concept%d_att%d' % ([c.index+1 for c in p.get('shuffle-Col-%d' % this.uid) or this.cols][0],x) )}</td>",
      "    <td class=\"dcm_item\">\\${p.get('concept%d_att%d' % ([c.index+1 for c in p.get('shuffle-Col-%d' % this.uid) or this.cols][1],x) )}</td>",
      "    <td class=\"dcm_item\">\\${p.get('concept%d_att%d' % ([c.index+1 for c in p.get('shuffle-Col-%d' % this.uid) or this.cols][2],x) )}</td>",
      "    <td class=\"dcm_item\">\\${p.get('concept%d_att%d' % ([c.index+1 for c in p.get('shuffle-Col-%d' % this.uid) or this.cols][3],x) )}</td>",
      "",
      "\\@if addNoneColumn == '1'",
      "\\@if x == 1",
      "     <td rowspan=\"\\${int(\\$(attributes))}\" style=\"border-top: none; text-align: center;\"><b>\\$(noneText)</b></td>",
      "\\@endif",
      "\\@endif",
      "",
      "</tr>",
      "",
      "\\@end",
      "<tbody>",
      "]]></style>",
      "          <style arg:row=\"\\${res.rowText}\" arg:yeslegend=\"1\" name=\"question.row\"><![CDATA[",
      "\\@if this.styles.ss.rowHeight",
      "    <tr class=\"\\$(style) colCount-\\$(colCount)\" style=\"height:\\${this.styles.ss.rowHeight};\">",
      "\\@else",
      "    <tr class=\"\\$(style) colCount-\\$(colCount)\">",
      "\\@endif",
      "",
      "\\@if yeslegend == '1'",
      "    <td class=\"dcm_legend\">\\$(row)</td>",
      "\\@endif",
      "\\$(left)",
      "\\$(elements)",
      "\\$(right)",
      "</tr>",
      "]]></style>",
      "          <style arg:addNoneColumn=\"1\" name=\"question.top-legend-item\"><![CDATA[",
      "\\@if this.styles.ss.colWidth",
      "    <th id=\"\\$(this.label)_\\$(col.label)\" class=\"dcm_legend legend survey-q-grid-collegend \\$(col.styles.ss.colClassNames) \\${col.group.styles.ss.groupClassNames if col.group else \"\"}\" style=\"width:\\${this.styles.ss.colWidth}; min-width:\\${this.styles.ss.colWidth}\">",
      "        \\$(text)",
      "    </th>",
      "\\@else",
      "",
      "\\@if addNoneColumn == '1' and col.index == (ec.colCount - 1)",
      "    <th id=\"\\$(this.label)_\\$(col.label)\" style=\"border-bottom: none; width: 125px;\" >",
      "        \\$(text)",
      "    </th>",
      "\\@else",
      "    <th id=\"\\$(this.label)_\\$(col.label)\" class=\"legend survey-q-grid-collegend \\$(col.styles.ss.colClassNames) \\${col.group.styles.ss.groupClassNames if col.group else \"\"}\">",
      "        \\$(text)",
      "    </th>",
      "\\@endif",
      "",
      "\\@endif",
      "]]></style>",
      "        </radio>",
      "",
      "        <suspend/>",
      "      </block>",
      "",
      "      <looprow label=\"1\">",
      "        <loopvar name=\"task\">1</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"2\">",
      "        <loopvar name=\"task\">2</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"3\">",
      "        <loopvar name=\"task\">3</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"4\">",
      "        <loopvar name=\"task\">4</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"5\">",
      "        <loopvar name=\"task\">5</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"6\">",
      "        <loopvar name=\"task\">6</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"7\">",
      "        <loopvar name=\"task\">7</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"8\">",
      "        <loopvar name=\"task\">8</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"9\">",
      "        <loopvar name=\"task\">9</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"10\">",
      "        <loopvar name=\"task\">10</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"11\">",
      "        <loopvar name=\"task\">11</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"12\">",
      "        <loopvar name=\"task\">12</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"13\">",
      "        <loopvar name=\"task\">13</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"14\">",
      "        <loopvar name=\"task\">14</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"15\">",
      "        <loopvar name=\"task\">15</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"16\">",
      "        <loopvar name=\"task\">16</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"17\">",
      "        <loopvar name=\"task\">17</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"18\">",
      "        <loopvar name=\"task\">18</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"19\">",
      "        <loopvar name=\"task\">19</loopvar>",
      "      </looprow>",
      "",
      "      <looprow label=\"20\">",
      "        <loopvar name=\"task\">20</loopvar>",
      "      </looprow>$0",
      "    </loop>",
      "",
      "    <float ",
      "    label=\"${1:[QID]}_Timer\"",
      "    size=\"15\"",
      "    where=\"execute,survey,report\">",
      "      <title>${1:[QID]} - DCM Timer (Minutes)</title>",
      "      <exec>",
      "${1:[QID]}_Timer.val = (timeSpent() - p.startTime) / 60.0",
      "      </exec>",
      "",
      "    </float>",
      "</block>"
    ],
    "description": "Conjoint(DCM)/ConjointQuestion"
  },

  "ConjointRes_Snippet": {
    "prefix": "dcm.res",
    "body": [
      "<res label=\"[DCM_QID]_legend1\">Attr1</res>",
      "<res label=\"[DCM_QID]_legend2\">Attr2</res>",
      "",
      "<res label=\"[DCM_QID]_att1_level1\">Attr1 level1</res>",
      "<res label=\"[DCM_QID]_att1_level2\">Attr1 level2</res>",
      "",
      "<res label=\"[DCM_QID]_att2_level1\">Attr2 level1</res>",
      "<res label=\"[DCM_QID]_att2_level2\">Attr2 level2</res>",
      "",
      "<res label=\"NoneText\">속성 없음 텍스트</res>",
      "<res label=\"TopText\">좌측 상단 텍스트</res>",
      "<res label=\"rowText\">좌측 하단 텍스트</res>"
    ],
    "description": "Conjoint(DCM)/ConjointRes"
  },

  "BoxShadow_Snippet": {
    "prefix": "shadow",
    "body": [
      "box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);"
    ],
    "description": "CSSLibrary/BoxShadow"
  },

  "GridColumnStyle_Snippet": {
    "prefix": "grid.col.css",
    "body": [
      ".grid-cols-3 .answers{",
      "  display: grid !important;",
      "  width: 100% !important;",
      "  grid-template-columns: repeat(3, 1fr);",
      "  grid-column-gap : 5px;",
      "  grid-row-gap: 5px;",
      "  max-width: 924px;",
      "  align-items: center;",
      "}",
      "",
      ".grid-cols-2 .answers{",
      "  display: grid !important;",
      "  grid-template-columns: repeat(2, 1fr);",
      "  grid-column-gap : 5px;",
      "  grid-row-gap: 5px;",
      "  width: 100% !important;",
      "  max-width: 924px;",
      "  align-items: center;",
      "}",
      "",
      "\\@media all and (max-width: 800px){",
      " .grid-cols-3 .answers{",
      "    grid-template-columns: repeat(2, 1fr);",
      " }",
      " .grid-cols-2 .answers{",
      "    grid-template-columns: repeat(1, 1fr);",
      "  }",
      "}",
      "",
      "\\@media all and (max-width: 500px){",
      " .grid-3-cols .answers{",
      "    grid-template-columns: repeat(1, 1fr);",
      " }",
      "}"
    ],
    "description": "CSSLibrary/GridColumnStyle"
  },

  "GridListModeCSS_Snippet": {
    "prefix": "grid.list",
    "body": [
      "<style name=\"page.head\"><![CDATA[",
      "<style>",
      ".grid-list-mode .row-elements{",
      "  border : 1px solid #ccc;",
      "  padding : 10px;",
      "  border-radius : 10px;",
      "  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);",
      "}",
      ".grid-list-mode .row-legend-left{",
      "  font-weight : bold;",
      "  border-bottom : 1px solid #ccc;",
      "  padding-bottom : 10px;",
      "}",
      ".grid-list-mode .row-legend-right{",
      "  font-weight : bold;",
      "  border-top : 1px solid #ccc;",
      "  padding-top : 10px;",
      "  margin-bottom: 10px;",
      "}",
      "</style>",
      "]]></style>"
    ],
    "description": "CSSLibrary/GridListModeCSS"
  },

  "ImageClassNames_Snippet": {
    "prefix": "img.class",
    "body": ["survey_image survey-image-medium fit"],
    "description": "CSSLibrary/ImageClassNames"
  },

  "ImageWaterMarkCSS_Snippet": {
    "prefix": "img.wm.css",
    "body": [
      ".${1:[WATERMARK_IMAGE_CLASS]} img {",
      "    width: 100%!important;",
      "    height: unset!important;",
      "    max-width: 400px;",
      "    background-size: contain;",
      "    background-position: center center;",
      "}"
    ],
    "description": "CSSLibrary/ImageWaterMarkCSS"
  },

  "LeftRightCSS_Snippet": {
    "prefix": "left.right.css",
    "body": [
      "<style label=\"type_a_text\" name=\"question.left-blank-legend\"><![CDATA[",
      "<\\$(tag) class=\"cell empty empty-left empty-\\$(pos) unused \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse\">타입 A</\\$(tag)>",
      "]]></style>",
      "      <style label=\"type_b_text\" name=\"question.right-blank-legend\"><![CDATA[",
      "<\\$(tag) class=\"cell empty empty-right empty-\\$(pos) unused \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse\">타입 B</\\$(tag)>",
      "]]></style>",
      "      <style label=\"left_right_css\" name=\"page.head\"><![CDATA[",
      "<style>",
      ".grid-table-mode tbody th.col-legend:nth-child(2) { background-color: #d1dfff; }",
      ".grid-table-mode tbody th.col-legend:nth-child(3) { background-color: #e1efff; }",
      ".grid-table-mode tbody th.col-legend:nth-child(4) { background-color: #f1ffff; }",
      "",
      ".grid-table-mode tbody th.col-legend:nth-last-child(2) { background-color: #f4a0b7; }",
      ".grid-table-mode tbody th.col-legend:nth-last-child(3) { background-color: #f8b5c5; }",
      ".grid-table-mode tbody th.col-legend:nth-last-child(4) { background-color: #fbcad3; }",
      "",
      "",
      ".empty-top, .empty-bottom {",
      "  text-align: center;",
      "  font-weight: bold;",
      "}",
      "",
      ".empty-left, .type-a-comment {",
      "  color: #0a52ed;",
      "}",
      "",
      ".empty-right, .type-b-comment {",
      "  color: #ed0a9d;",
      "}",
      "",
      ".type-a-text, .type-b-text {",
      "  font-weight: bold;",
      "}",
      "",
      ".type-text {",
      "  display: none;",
      "}",
      "",
      "\\@media (max-width: 768px){",
      "  .type-text {",
      "    display: inline;",
      "  }",
      "  .type-a-text {",
      "    color: #0a52ed;",
      "  }",
      "",
      "  .type-b-text {",
      "    color: #ed0a9d;",
      "  }",
      "}",
      "",
      ".grid-list-mode .row-legend-left {",
      "  margin-top: unset;",
      "  background: #daebff;",
      "}",
      "",
      ".grid-list-mode .row-legend-right {",
      "  margin-bottom: unset;",
      "  background: #fdd4de;",
      "}",
      "</style>",
      "]]></style>",
      "      <style label=\"left_xml\" name=\"question.left\"><![CDATA[",
      "\\@if this.styles.ss.legendColWidth",
      "    <\\$(tag) scope=\"row\" class=\"cell nonempty legend row-legend row-legend-left \\${\"row-legend-both \" if ec.haveRightLegend and ec.haveLeftLegend else \"\"}row-legend-basic \\${\"mobile-left-row-legend \" if force else \"\"}\\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"row-legend-both-space \" if ec.haveRightLegend and ec.haveLeftLegend and (not row.group or not row.index==0) else \"border-collapse \"} \\$(row.styles.ss.rowClassNames)\" style=\"width:\\${this.styles.ss.legendColWidth}; min-width:\\${this.styles.ss.legendColWidth}\">",
      "        <span class=\"type-a-text\">(A) </span>\\$(text)",
      "    </\\$(tag)>",
      "\\@else",
      "    <\\$(tag) scope=\"row\" class=\"cell nonempty legend row-legend row-legend-left \\${\"row-legend-both \" if ec.haveRightLegend and ec.haveLeftLegend else \"\"}row-legend-basic \\${\"mobile-left-row-legend \" if force else \"\"}\\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"row-legend-both-space \" if ec.haveRightLegend and ec.haveLeftLegend and (row.group or not row.index==0) else \"border-collapse \"} \\$(row.styles.ss.rowClassNames)\">",
      "        <span class=\"type-text type-a-text\">(A) </span> \\$(text)",
      "    </\\$(tag)>",
      "\\@endif",
      "]]></style>",
      "      <style label=\"right_xml\" name=\"question.right\"><![CDATA[",
      "\\@if this.styles.ss.legendColWidth",
      "    <\\$(tag) scope=\"row\" class=\"cell nonempty legend row-legend row-legend-right \\${\"row-legend-both \" if ec.haveRightLegend and ec.haveLeftLegend else \"\"}row-legend-basic \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(row.styles.ss.rowClassNames)\" style=\"width:\\${this.styles.ss.legendColWidth}; min-width:\\${this.styles.ss.legendColWidth}\">",
      "        <span class=\"type-text type-b-text\">(B) </span>\\$(text)",
      "    </\\$(tag)>",
      "\\@else",
      "    <\\$(tag) scope=\"row\" class=\"cell nonempty legend row-legend row-legend-right \\${\"row-legend-both \" if ec.haveRightLegend and ec.haveLeftLegend else \"\"}row-legend-basic \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(row.styles.ss.rowClassNames)\">",
      "        <span class=\"type-text type-b-text\">(B) </span>\\$(text)",
      "    </\\$(tag)>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "CSSLibrary/LeftRightCSS"
  },

  "Sticky_Snippet": {
    "prefix": "sticky",
    "body": [
      "${1:.sticky-class-name} {",
      "  position: sticky;",
      "  top: 0;",
      "}",
      "",
      ".survey-container {",
      "  overflow: unset !important;",
      "}"
    ],
    "description": "CSSLibrary/Sticky"
  },

  "Table_Snippet": {
    "prefix": "table",
    "body": [
      ".show-table {",
      "  padding: 0;",
      "  width: 100%;",
      "  margin: 30px 0 30px 0;",
      "  max-width: 600px;",
      "}",
      "",
      ".show-table td {",
      "  font-size: 1.1rem;",
      "  border: 1px solid #ccc;",
      "}",
      "",
      ".show-table td{",
      "  padding: 10px;",
      "}",
      "",
      ".show-table tr:first-child, .show-table tr td:first-child {",
      "  font-weight: bold;",
      "  background-color: #dae6ff;",
      "  font-size: 1.3rem;",
      "  text-align: center;",
      "}",
      "",
      ".show-table tr td[rowspan]{",
      "  font-weight: bold;",
      "  background-color: #dae6ff;",
      "  text-align: center;",
      "}"
    ],
    "description": "CSSLibrary/Table"
  },

  "WaterMarkCSS_Snippet": {
    "prefix": "watermark",
    "body": [
      "form {",
      "  position: relative;",
      "  background: repeating-linear-gradient(",
      "      25deg,",
      "      rgba(255, 255, 255, 0.3), ",
      "      rgba(255, 255, 255, 0.3) 10%, ",
      "      rgba(255, 255, 255, 0.4) 10%, ",
      "      rgba(255, 255, 255, 0.4) 20%",
      "  ) !important;",
      "  overflow: hidden;",
      "}",
      "",
      "form::before {",
      "    content: \"${' '.join([uuid]*600)}\";",
      "    line-height: 80px;",
      "    position: absolute;",
      "    top: -120%;",
      "    left: -30%;",
      "    width: 100%;",
      "    height: 100%;",
      "    color: rgba(200, 200, 200, 0.4);",
      "    font-size: 12px;",
      "    transform: rotate(-25deg);",
      "    pointer-events: none;",
      "}"
    ],
    "description": "CSSLibrary/WaterMarkCSS"
  },

  "CustomButtonAutoContinue_Snippet": {
    "prefix": "btn.auto",
    "body": ["btn-focus auto-continue"],
    "description": "CustomButton/CustomButtonAutoContinue"
  },

  "CustomButtonBottom_Snippet": {
    "prefix": "btn.bot",
    "body": ["ss:rowClassNames=\"btn-bot\""],
    "description": "CustomButton/CustomButtonBottom"
  },

  "CustomButtonFocus_Snippet": {
    "prefix": "btn.focus",
    "body": ["btn-focus"],
    "description": "CustomButton/CustomButtonFocus"
  },

  "CustomButtonMinColumn_Snippet": {
    "prefix": "btn.min",
    "body": ["min-col-2"],
    "description": "CustomButton/CustomButtonMinColumn"
  },

  "CustomButtonStyle_Snippet": {
    "prefix": "btn",
    "body": [
      "ss:questionClassNames=\"sp-custom-btn btn-mw-500${1: btn-cols-1}\""
    ],
    "description": "CustomButton/CustomButtonStyle"
  },

  "CustomButtonTop_Snippet": {
    "prefix": "btn.top",
    "body": ["ss:rowClassNames=\"btn-top\""],
    "description": "CustomButton/CustomButtonTop"
  },

  "CustomCard_Snippet": {
    "prefix": "card",
    "body": ["sp-custom-card"],
    "description": "CustomCard/CustomCard"
  },

  "CustomCardAbleContinue_Snippet": {
    "prefix": "card.able",
    "body": ["able-continue"],
    "description": "CustomCard/CustomCardAbleContinue"
  },

  "CustomCardAutoContinue_Snippet": {
    "prefix": "card.auto",
    "body": ["auto-continue"],
    "description": "CustomCard/CustomCardAutoContinue"
  },

  "CustomCardLoopColumn_Snippet": {
    "prefix": "custom.loop",
    "body": [
      "<block label=\"${1:[QID]}_block\">",
      "  <checkbox ",
      "    label=\"${1:[QID]}_title\"",
      "    ss:questionClassNames=\"custom-card-loop\"",
      "    sst=\"0\"",
      "    where=\"survey,notdp\">",
      "    <title>${2:[TITLE]}</title>",
      "    <style name=\"question.after\"><![CDATA[",
      "<div class=\"custom-card-loop show-column\">",
      "    <div class=\"custom-card\">",
      "]]></style>",
      "    <row label=\"DUMMY\" ss:rowClassNames=\"hidden\"/>",
      "  </checkbox>",
      "",
      "  <loop label=\"${1:[QID]}_loop\" suspend=\"0\" vars=\"var1\">",
      "    <block label=\"${1:[QID]}_loop_block\">",
      "      <radio ",
      "        label=\"${1:[QID]}r[loopvar: label]\">",
      "        <title>[loopvar: var1]</title>",
      "        $0",
      "      </radio>",
      "    </block>",
      "",
      "    <looprow label=\"1\">",
      "      <loopvar name=\"var1\"></loopvar>",
      "    </looprow>",
      "",
      "    <looprow label=\"2\">",
      "      <loopvar name=\"var1\"></loopvar>",
      "    </looprow>",
      "",
      "  </loop>",
      "",
      "  <checkbox ",
      "    label=\"${1:[QID]}_after\"",
      "    ss:questionClassNames=\"hidden\"",
      "    where=\"survey,notdp\"",
      "    sst=\"0\">",
      "    <title>(HIDDEN)</title>",
      "    <style name=\"question.header\"><![CDATA[",
      "  </div>",
      "</div>",
      "<div id=\"question_\\${this.label}\" class=\"question \\${'disabledElement ' if why and gv.debug.qa else ''}\\${this.getName().lower()} label_\\${this.label} \\$(this.styles.ss.questionClassNames) \\$(hasError)\"\\${' role=\"radiogroup\" aria-labelledby=\"' + (this.label + '_' + ec.enabledCols[0].label if ec.haveColLegend else 'question_text_' + this.label) + '\"' if ec.simpleList else ''}>",
      "\\${v2_insertStyle('survey.question')}",
      "\\$(error)",
      "\\${v2_insertStyle('survey.question.instructions')}",
      "\\${v2_insertStyle('survey.question.answers.start')}",
      "]]></style>",
      "    <row label=\"DUMMY\" ss:rowClassNames=\"hidden\"/>",
      "  </checkbox>",
      "</block>",
      "",
      "<note>${1:[QID]}_block END</note>",
      "<suspend/>"
    ],
    "description": "CustomLoop/CustomCardLoopColumn"
  },

  "CustomCardLoopFlex_Snippet": {
    "prefix": "custom.loop.flex",
    "body": [
      "<block label=\"${1:[QID]}_block\">",
      "  <checkbox ",
      "    label=\"${1:[QID]}_title\"",
      "    ss:questionClassNames=\"custom-card-loop\"",
      "    sst=\"0\"",
      "    where=\"survey,notdp\">",
      "    <title>${2:[TITLE]}</title>",
      "    <style name=\"question.after\"><![CDATA[",
      "<div class=\"custom-card-loop\">",
      "    <div class=\"custom-card\">",
      "]]></style>",
      "    <row label=\"DUMMY\" ss:rowClassNames=\"hidden\"/>",
      "  </checkbox>",
      "",
      "  <loop label=\"${1:[QID]}_loop\" suspend=\"0\" vars=\"var1\">",
      "    <block label=\"${1:[QID]}_loop_block\">",
      "      <radio ",
      "        label=\"${1:[QID]}r[loopvar: label]\">",
      "        <title>[loopvar: var1]</title>",
      "        $0",
      "      </radio>",
      "    </block>",
      "",
      "    <looprow label=\"1\">",
      "      <loopvar name=\"var1\"></loopvar>",
      "    </looprow>",
      "",
      "    <looprow label=\"2\">",
      "      <loopvar name=\"var1\"></loopvar>",
      "    </looprow>",
      "",
      "  </loop>",
      "",
      "  <checkbox ",
      "    label=\"${1:[QID]}_after\"",
      "    ss:questionClassNames=\"hidden\"",
      "    sst=\"0\"",
      "    where=\"survey,notdp\">",
      "    <title>(HIDDEN)</title>",
      "    <style name=\"question.header\"><![CDATA[",
      "  </div>",
      "</div>",
      "<div id=\"question_\\${this.label}\" class=\"question \\${'disabledElement ' if why and gv.debug.qa else ''}\\${this.getName().lower()} label_\\${this.label} \\$(this.styles.ss.questionClassNames) \\$(hasError)\"\\${' role=\"radiogroup\" aria-labelledby=\"' + (this.label + '_' + ec.enabledCols[0].label if ec.haveColLegend else 'question_text_' + this.label) + '\"' if ec.simpleList else ''}>",
      "\\${v2_insertStyle('survey.question')}",
      "\\$(error)",
      "\\${v2_insertStyle('survey.question.instructions')}",
      "\\${v2_insertStyle('survey.question.answers.start')}",
      "]]></style>",
      "    <row label=\"DUMMY\" ss:rowClassNames=\"hidden\"/>",
      "  </checkbox>",
      "</block>",
      "",
      "<note>${1:[QID]}_block END</note>",
      "<suspend/>"
    ],
    "description": "CustomLoop/CustomCardLoopFlex"
  },

  "CustomRankSort_Snippet": {
    "prefix": "custom.rank",
    "body": [
      "<style label=\"custom_rank\" arg:colCnt=\"${1:1}\" arg:autoClick=\"true\" arg:autoContinue=\"false\" arg:ableNone=\"${2:2}\" arg:noneLabel=\"${3:r99}\" arg:showAnswers=\"true\" arg:ableSort=\"true\" arg:showGroups=\"false\" arg:toggle=\"false\" arg:showCnt=\"true\" name=\"question.after\"><![CDATA[",
      "\\@if len(this.cols) > 1",
      "<style>.label_\\$(this.label) .answers {display: none;}</style>",
      "<div class=\"custom-loader\"></div>",
      "<script type=\"text/babel\">",
      "const group_info = [",
      "\\@for eachRow in this.rows",
      "\\@if eachRow.group",
      "[\\${eachRow.index}, `\\${eachRow.group.label}`, `\\${eachRow.group.text}`],",
      "\\@endif",
      "\\@end",
      "];",
      "let thisAnswers = document.querySelector('.label_\\$(this.label) .answers');",
      "let loader = '.custom-loader';",
      "try {",
      "  SettingGridRankSort({",
      "    setRoot: '.label_\\$(this.label) .answers',",
      "    json: \\${jsexport()}, ",
      "    defaultValue: \\${[v.val for v in \\$(this.label).cols if not v.val == None and v.displayed]}, ",
      "    colCnt: \\$(colCnt),",
      "    showGroups : \\$(showGroups),",
      "    groups: group_info, ",
      "    ableNone : \\$(ableNone),",
      "    showAnswers : \\$(showAnswers),",
      "    noneIndex : \\${\\$(this.label).\\$(noneLabel).index if hasattr(\\$(this.label), '\\$(noneLabel)') else 'null'},",
      "    ableSort: \\$(ableSort),",
      "    loadingQuery : loader,",
      "    toggle: \\$(toggle),",
      "    showCnt: \\$(showCnt),",
      "    autoClick: \\$(autoClick),",
      "    autoContinue: \\$(autoContinue),",
      "  });",
      "  thisAnswers.style.display = 'table';",
      "} catch (error) {",
      "  console.error(\"Rendering error:\", error);",
      "  thisAnswers.style.display = 'table';",
      "  document.querySelector(loader)?.remove();",
      "}",
      "</script>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "CustomRank/CustomRankSort"
  },

  "CustomRankSortCenter_Snippet": {
    "prefix": "custom.rank.center",
    "body": ["ss:questionClassNames=\"rank-text-center\""],
    "description": "CustomRank/CustomRankSortCenter"
  },

  "CustomRankSortCopy_Snippet": {
    "prefix": "custom.rank.copy",
    "body": [
      "<style copy=\"custom_rank\" arg:autoClick=\"true\" arg:autoContinue=\"false\" arg:colCnt=\"1\" arg:noneLabel=\"null\" arg:ableNone=\"2\" arg:showAnswers=\"true\" arg:ableSort=\"true\" arg:showGroups=\"false\" arg:toggle=\"false\" arg:showCnt=\"true\" name=\"question.after\"/>"
    ],
    "description": "CustomRank/CustomRankSortCopy"
  },

  "CustomRankSortLeftGroupCSS_Snippet": {
    "prefix": "custom.rank.left",
    "body": [
      "<style label=\"custom_rank_grid_group\" name=\"page.head\"><![CDATA[",
      "<style>",
      ".custom-rank-sort {",
      "  display: grid;",
      "  grid-template-columns: 50% 50%;",
      "  gap: 10px;",
      "  max-width: 80% !important;",
      "}",
      "",
      ".custom-rank-rows {",
      "  display: flex !important;",
      "  flex-direction: column;",
      "}",
      "",
      ".rank-group {",
      "  display: grid;",
      "  grid-template-columns: 20% 80%;",
      "}",
      "",
      ".rank-group-title {",
      "  display: flex;",
      "  align-items: center;",
      "  justify-content: center;",
      "  text-align: center;",
      "}",
      "",
      "\\@media (max-width: 800px) {",
      "  .custom-rank-sort {",
      "    grid-template-columns: 100%;",
      "    max-width: 100% !important;",
      "  }",
      "  .rank-group {",
      "    grid-template-columns: 100%;",
      "  }",
      "  .rank-group-title {",
      "    display: block;",
      "    text-align: left;",
      "  }",
      "}",
      "</style>",
      "]]></style>"
    ],
    "description": "CustomRank/CustomRankSortLeftGroupCSS"
  },

  "CustomRankSortLeftGroupCSSCopy_Snippet": {
    "prefix": "custom.rank.left.copy",
    "body": ["<style copy=\"custom_rank_grid_group\" name=\"page.head\"/>"],
    "description": "CustomRank/CustomRankSortLeftGroupCSSCopy"
  },

  "CustomRankSortObserve_Snippet": {
    "prefix": "custom.rank.obs",
    "body": [
      "<style name=\"question.after\"><![CDATA[",
      "<script>",
      "const answers = document.querySelector(\".answers\");",
      "const otherHandler = ()=>{",
      "    const otherRow = document.querySelector(\".rank-row-r98\");",
      "    if( otherRow ){ ",
      "      const rank1 = document.querySelector(\".answer-rank-1\");  ",
      "      if( rank1 ){  ",
      "        otherRow.classList.remove(\"hidden\");",
      "      }else{  ",
      "        otherRow.classList.add(\"hidden\"); ",
      "      }",
      "    }",
      "}",
      "",
      "const observer = new MutationObserver(otherHandler);",
      "",
      "const config = { ",
      "    childList: true,",
      "    characterData: true,",
      "    subtree: true",
      "};",
      "",
      "observer.observe(answers, config);",
      "</script>",
      "]]></style>"
    ],
    "description": "CustomRank/CustomRankSortObserve"
  },

  "CustomLeftRight_Snippet": {
    "prefix": "custom.left.right",
    "body": [
      "<style copy=\"custom_rating\" arg:qmode=\"rating\" arg:autoContinue=\"false\" arg:autoNumber=\"true\" arg:btnDirection=\"row\" arg:leftText=\"${1:[LEFT_TEXT]}\" arg:rightText=\"${2:[RIGHT_TEXT]}\" arg:showArrow=\"true\" arg:showGroup=\"true\" arg:disableContinue=\"true\" arg:hold=\"0.5\" name=\"question.after\"/>"
    ],
    "description": "CustomRating/CustomLeftRight"
  },

  "CustomRating_Snippet": {
    "prefix": "custom.rate",
    "body": [
      "<style label=\"custom_rating\" arg:hold=\"0.5\" arg:qmode=\"rating\" arg:autoContinue=\"false\" arg:autoNumber=\"true\" arg:btnDirection=\"row\" arg:leftText=\"\" arg:rightText=\"\" arg:showArrow=\"false\" arg:showGroup=\"true\" arg:disableContinue=\"true\" name=\"question.after\"><![CDATA[",
      "\\@if (this.grouping.rows and len(this.rows) > 1) or (this.grouping.cols and len(this.cols) > 1)",
      "<style>.label_\\$(this.label) .answers {display: none;}</style>",
      "<div class=\"custom-loader\"></div>",
      "<script type=\"text/babel\">",
      "const groupInfo = {",
      "\\@if this.grouping.rows",
      "\\@for eachRow in this.rows",
      "\\@if eachRow.group",
      "  '\\${eachRow.label}': {'label': `\\${eachRow.group.label}`, 'text': `\\${eachRow.group.text}`},",
      "\\@endif",
      "\\@end",
      "\\@endif",
      "\\@if this.grouping.cols",
      "\\@for eachCol in this.cols",
      "\\@if eachCol.group",
      "  '\\${eachCol.label}': {'label': `\\${eachCol.group.label}`, 'text': `\\${eachCol.group.text}`},",
      "\\@endif",
      "\\@end",
      "\\@endif",
      "};",
      "",
      "let thisAnswers = document.querySelector('.label_\\$(this.label) .answers');",
      "let loader = '.custom-loader';",
      "try {",
      "  CustomRating({",
      "    setRoot: '.label_\\$(this.label) .answers',",
      "    json: \\${jsexport()},",
      "    mode: \"\\$(qmode)\",",
      "    leftText: `\\$(leftText)`,",
      "    rightText: `\\$(rightText)`,",
      "\\@if this.grouping.rows",
      "    answers: \\${dict([[x.label, x.val if x.val != None else 'null'] for x in \\$(this.label).rows if x.displayed])},",
      "\\@endif",
      "\\@if this.grouping.cols",
      "    answers: \\${dict([[x.label, x.val if x.val != None else 'null'] for x in \\$(this.label).cols if x.displayed])},",
      "\\@endif",
      "    hold: $(hold),",
      "    flexDirection: \"\\$(btnDirection)\",",
      "    disableContinue: \\$(disableContinue),",
      "    showGroup: \\$(showGroup),",
      "    groupInfo: groupInfo,",
      "    showArrow: \\$(showArrow),",
      "    autoContinue: \\$(autoContinue),",
      "    autoNumber: \\$(autoNumber),",
      "  });",
      "  thisAnswers.style.display = 'table';",
      "} catch (error) {",
      "  console.error(\"Rendering error:\", error);",
      "  thisAnswers.style.display = 'table';",
      "  document.querySelector(loader)?.remove();",
      "}",
      "</script>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "CustomRating/CustomRating"
  },

  "CustomRatingChangeColText_Snippet": {
    "prefix": "custom.rate.obs",
    "body": [
      "<style name=\"question.after\"><![CDATA[",
      "<script>",
      "const targetNode = document.querySelector('.answers');",
      "",
      "const config = {",
      "  childList: true, // 자식 요소의 변화를 감지",
      "  subtree: true   // 하위 요소 감지",
      "};",
      "",
      "const callback = function(mutationsList, observer) {",
      "  for(const mutation of mutationsList) {",
      "    if (mutation.type === 'childList') {",
      "      const groupCols = [",
      "        {",
      "          'rows': ['r103', 'r106'],",
      "          'cols': {",
      "            'c1': '너무 약하다',",
      "            'c2': '약하다',",
      "            'c3': '적당하다',",
      "            'c4': '강하다',",
      "            'c5': '너무 강하다',",
      "          },",
      "        },",
      "        {",
      "          'rows': ['r104'],",
      "          'cols': {",
      "            'c1': '너무 무르다',",
      "            'c2': '무르다',",
      "            'c3': '적당하다',",
      "            'c4': '질기다/딱딱하다',",
      "            'c5': '너무 질기다/너무 딱딱하다',",
      "          },",
      "        },",
      "        {",
      "          'rows': ['r108', 'r102'],",
      "          'cols': {",
      "            'c1': '너무 적다',",
      "            'c2': '적다',",
      "            'c3': '적당하다',",
      "            'c4': '많다',",
      "            'c5': '너무 많다',",
      "          },",
      "        },",
      "        {",
      "          'rows': ['r105'],",
      "          'cols': {",
      "            'c1': '너무 작다',",
      "            'c2': '작다',",
      "            'c3': '적당하다',",
      "            'c4': '크다',",
      "            'c5': '너무 크다',",
      "          }",
      "        },",
      "        {",
      "          'rows': ['r107'],",
      "          'cols': {",
      "            'c1': '너무 얇다',",
      "            'c2': '얇다',",
      "            'c3': '적당하다',",
      "            'c4': '두껍다',",
      "            'c5': '너무 두껍다',",
      "          }",
      "        },",
      "      ];",
      "",
      "      groupCols.forEach((gr) => {",
      "        const {rows, cols} = gr;",
      "        rows.forEach((r) => {",
      "          Object.entries(cols).forEach(([cl, txt], colIndex) => {",
      "            const btnLabelClass = document.querySelector('.sp-btn-' + r + '-' + cl);",
      "            if(btnLabelClass) {",
      "              const lb = btnLabelClass.querySelector('label');",
      "              const pTag = lb.querySelector('.sp-col-score');",
      "              const colText = document.createElement('p');",
      "      ",
      "              colText.classList.add('change-col-text');",
      "              const textFlag = lb.querySelector('.change-col-text')",
      "              if( !textFlag ){",
      "                pTag.innerText = '(' + (colIndex + 1) + ')';",
      "                lb.appendChild(colText);",
      "                colText.innerText = txt;",
      "              }",
      "            }",
      "          });",
      "        });",
      "      });",
      "    }",
      "  }",
      "};",
      "",
      "const observer = new MutationObserver(callback);",
      "observer.observe(targetNode, config);",
      "</script>",
      "]]></style>"
    ],
    "description": "CustomRating/CustomRatingChangeColText"
  },

  "CustomRatingCopy_Snippet": {
    "prefix": "custom.rate.copy",
    "body": [
      "<style copy=\"custom_rating\" arg:qmode=\"rating\" arg:autoContinue=\"false\" arg:autoNumber=\"true\" arg:btnDirection=\"row\" arg:leftText=\"\" arg:rightText=\"\" arg:showArrow=\"false\" arg:showGroup=\"true\" arg:disableContinue=\"true\" arg:hold=\"0.5\" name=\"question.after\"/>"
    ],
    "description": "CustomRating/CustomRatingCopy"
  },

  "CustomRatingLower_Snippet": {
    "prefix": "custom.rate.low",
    "body": [
      "<style copy=\"custom_rating\" arg:qmode=\"low\" arg:autoContinue=\"false\" arg:autoNumber=\"true\" arg:btnDirection=\"column\" arg:leftText=\"\" arg:rightText=\"\" arg:showArrow=\"true\" arg:showGroup=\"true\" arg:disableContinue=\"true\" arg:hold=\"0.5\" name=\"question.after\"/>"
    ],
    "description": "CustomRating/CustomRatingLower"
  },

  "CustomRatingUpper_Snippet": {
    "prefix": "custom.rate.up",
    "body": [
      "<style copy=\"custom_rating\" arg:qmode=\"up\" arg:autoContinue=\"false\" arg:autoNumber=\"true\" arg:btnDirection=\"column\" arg:leftText=\"\" arg:rightText=\"\" arg:showArrow=\"true\" arg:showGroup=\"true\" arg:disableContinue=\"true\" arg:hold=\"0.5\" name=\"question.after\"/>"
    ],
    "description": "CustomRating/CustomRatingUpper"
  },

  "Condition_Snippet": {
    "prefix": "cond",
    "body": ["cond=\"$0\""],
    "description": "DecipherOptions/Condition"
  },

  "CopyRows_Snippet": {
    "prefix": "copy",
    "body": ["onLoad=\"copy('${1:[QID]}', rows=True${2:, exclude=''}$0)\""],
    "description": "DecipherOptions/CopyRows"
  },

  "DoNotTranslate_Snippet": {
    "prefix": "dnt",
    "body": ["translateable=\"0\""],
    "description": "DecipherOptions/DoNotTranslate"
  },

  "ExclusizeRow_Snippet": {
    "prefix": "er",
    "body": ["exclusive=\"1\" randomize=\"0\" ss:rowClassNames=\"btn-bot\""],
    "description": "DecipherOptions/ExclusizeRow"
  },

  "InputMaxWidthMobile_Snippet": {
    "prefix": "mo.input",
    "body": ["ss:questionClassNames=\"input-max-width\""],
    "description": "DecipherOptions/InputMaxWidthMobile"
  },

  "Legends_Snippet": {
    "prefix": "legend",
    "body": [
      "colLegendRows=\"$0\"",
      "rowLegend=\"both\"",
      "colLegend=\"both\""
    ],
    "description": "DecipherOptions/Legends"
  },

  "ListDisplay_Snippet": {
    "prefix": "ld",
    "body": ["ss:listDisplay=\"0\""],
    "description": "DecipherOptions/ListDisplay"
  },

  "OpenEnd_Snippet": {
    "prefix": "oe",
    "body": ["open=\"1\" openSize=\"25\" randomize=\"0\""],
    "description": "DecipherOptions/OpenEnd"
  },

  "PostText_Snippet": {
    "prefix": "potext",
    "body": ["ss:postText=\"$0\""],
    "description": "DecipherOptions/PostText"
  },

  "PreText_Snippet": {
    "prefix": "prtext",
    "body": ["ss:preText=\"$0\""],
    "description": "DecipherOptions/PreText"
  },

  "Randomize_Snippet": {
    "prefix": "r.1",
    "body": ["randomize=\"1\""],
    "description": "DecipherOptions/Randomize"
  },

  "RandomizeChildren_Snippet": {
    "prefix": "r.child",
    "body": ["randomizeChildren=\"1\""],
    "description": "DecipherOptions/RandomizeChildren"
  },

  "RandomizeFixed_Snippet": {
    "prefix": "r.0",
    "body": ["randomize=\"0\""],
    "description": "DecipherOptions/RandomizeFixed"
  },

  "Rating_Snippet": {
    "prefix": "rating",
    "body": ["type=\"rating\""],
    "description": "DecipherOptions/Rating"
  },

  "Shuffle_Snippet": {
    "prefix": "sh",
    "body": ["shuffle=\"rows\""],
    "description": "DecipherOptions/Shuffle"
  },

  "ShuffleBy_Snippet": {
    "prefix": "shb",
    "body": ["shuffleBy=\"$0\""],
    "description": "DecipherOptions/ShuffleBy"
  },

  "SurveyDisplayDesktop_Snippet": {
    "prefix": "display.d",
    "body": ["surveyDisplay=\"desktop\""],
    "description": "DecipherOptions/SurveyDisplayDesktop"
  },

  "SurveyDisplayMobile_Snippet": {
    "prefix": "display.m",
    "body": ["surveyDisplay=\"mobile\""],
    "description": "DecipherOptions/SurveyDisplayMobile"
  },

  "Verify_Snippet": {
    "prefix": "verify",
    "body": ["verify=\"${1:range(0,100)}\"$0"],
    "description": "DecipherOptions/Verify"
  },

  "WhereExecute_Snippet": {
    "prefix": "execute",
    "body": ["where=\"execute\""],
    "description": "DecipherOptions/WhereExecute"
  },

  "WhereExecuteNotdp_Snippet": {
    "prefix": "en",
    "body": ["where=\"execute,survey,notdp\""],
    "description": "DecipherOptions/WhereExecuteNotdp"
  },

  "WhereNotdp_Snippet": {
    "prefix": "notdp",
    "body": ["where=\"notdp\""],
    "description": "DecipherOptions/WhereNotdp"
  },

  "WhereReport_Snippet": {
    "prefix": "rep",
    "body": ["where=\"report\""],
    "description": "DecipherOptions/WhereReport"
  },

  "AddressAnswerQuestion_Snippet": {
    "prefix": "address",
    "body": [
      "<text ",
      "  label=\"${1:[QID]}\"",
      "  size=\"40\">",
      "  <title>${2:[TITLE]}</title>",
      "<style name=\"page.head\"><![CDATA[",
      "<style>",
      ".address_title{",
      "  font-size: 1.4rem;",
      "  display: flex;",
      "  align-items: flex-end;",
      "  max-width: max-content;",
      "  gap: 5px;",
      "  margin-top: 10px;",
      "  margin-bottom: 10px;",
      "}",
      "",
      ".address_title svg {",
      "  color: #2d6df6;",
      "}",
      "",
      "#postcodify input[type=button]{",
      "  width: 100%;",
      "  margin: 0 auto;",
      "  background-color: #b7ceff;",
      "  padding: 8px;",
      "  border-radius: 5px;",
      "  border: 1px solid #ccc;",
      "  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);",
      "  transition: all 0.5s;",
      "}",
      "",
      "#postcodify input[type=button]:hover {",
      "  background-color: #2d6df6;",
      "  color: white;",
      "}",
      "",
      "#postcodify input[type=text]{",
      "  border-radius: 7px;",
      "  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);",
      "}",
      "",
      "\\@media all and (min-width: 750px){",
      "  #postcodify{",
      "    max-width: 240px;",
      "  }",
      "}",
      "</style>",
      "]]></style>",
      "    <style name=\"survey.question.instructions\"><![CDATA[",
      "<h2 title=\"@(instructions)\" class=\"instruction-text\">\\$(comment)",
      "<div class=\"address_title\">",
      "  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" style=\"width:25px; margin:0 auto;\">",
      "    <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />",
      "  </svg>",
      "  <div>검색 버튼을 통해 주소를 검색해주세요.</div>",
      "</div>",
      "</h2>",
      "<div id=\"postcodify\">",
      "</div>",
      "<!-- /.instruction-text -->",
      "]]></style>",
      "    <style name=\"question.after\"><![CDATA[",
      "<script src=\"//d1p7wdleee1q2z.cloudfront.net/post/search.min.js\"></script>",
      "<script>",
      "\\$ (\"#postcodify\").append('<input type=\"button\" id=\"postcodify_search_button\" value=\"검색\"/><br><br>');",
      "",
      "for( var i=0; i<\\$ (\".element\").length; i++ ){",
      "  \\$ (\"#postcodify\").append(\\$ (\".element\").eq(i));",
      "}",
      "\\$ (\".postcode input\").attr('readonly',true);",
      "\\$ (\".address input\").attr('readonly',true);",
      "\\$ (\".postcode input\").addClass('postcodify_postcode5');",
      "\\$ (\".address input\").addClass('postcodify_address');",
      "\\$ (\".details input\").addClass('postcodify_details');",
      "",
      "\\$ (function() { \\$ (\"#postcodify_search_button\").postcodifyPopUp(); });",
      "",
      "</script>",
      "]]></style>",
      "    <row label=\"r1\" ss:rowClassNames=\"postcode\" value=\"1\">우편번호</row>",
      "    <row label=\"r2\" ss:rowClassNames=\"address\" value=\"2\">주소</row>",
      "    <row label=\"r3\" ss:rowClassNames=\"details\" value=\"3\">상세주소</row>",
      "  </text>",
      "",
      "  <suspend/>"
    ],
    "description": "DecipherQuestions/AddressAnswerQuestion"
  },

  "AreaQuestionExample_Snippet": {
    "prefix": "area",
    "body": [
      "<select ",
      "  label=\"${1:[QID]}\">",
      "  <title>${2:[TITLE]}</title>",
      "  <validate>",
      "do = this.choices[this.r1.val].value",
      "gu = this.choices[this.r2.val].value // 100",
      "",
      "if not do == gu :",
      "  error(res.chk_plz, row=this.r2)",
      "  </validate>",
      "",
      "<style name=\"page.head\"><![CDATA[",
      "<style>",
      ".select-disabled{",
      "    opacity: 50%;",
      "    pointer-events: none;",
      "}",
      ".dropdown{",
      "  transition: opacity 0.5s;",
      "}",
      "</style>",
      "]]></style>",
      "<style name='el.select.header'> <![CDATA[",
      "\\@if row.label == 'r2'",
      "<select name=\"\\$(name)\" id=\"\\$(id)\" class=\"input dropdown \\${'' if \\$(this.label).attr(row.label).any else 'select-disabled'}\" \\$(extra)>",
      "\\@else",
      "<select name=\"\\$(name)\" id=\"\\$(id)\" class=\"input dropdown\" \\$(extra)>",
      "\\@endif",
      "]]></style>",
      "      <style name=\"el.select.element\" rows=\"r1\"><![CDATA[",
      "\\@if 'do' in choice.label",
      "<option value=\"\\$(value)\" \\$(selected) data-do=\"\\${choice.value}\" class=\"\\${choice.styles.ss.choiceClassNames if ec.choice else \"\"}\">\\$(text)</option>",
      "\\@endif",
      "]]></style>",
      "      <style name=\"el.select.element\" rows=\"r2\"><![CDATA[",
      "\\@if 'gu' in choice.label",
      "<option value=\"\\$(value)\" data-do=\"\\${choice.value//100}\" \\$(selected) class=\"\\${choice.styles.ss.choiceClassNames if ec.choice else \"\"}\">\\$(text)</option>",
      "\\@endif",
      "]]></style>",
      "      <style name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "const baseSelect = document.querySelector('.base-select');",
      "const base = baseSelect.querySelector('select');",
      "let baseSelected = base.selectedIndex;",
      "let baseCode = base.options[baseSelected].dataset.do;",
      "",
      "const mutateSelect = document.querySelector('.mutate-select');",
      "const mutate = mutateSelect.querySelector('select');",
      "const backUpMutate = [...mutate.options].slice(1).map((item)=>{",
      "  return item.cloneNode(true);",
      "})",
      "",
      "const selectHandle = ()=>{",
      "  baseCode = base.options[baseSelected].dataset.do;",
      "  ",
      "  if( baseCode === undefined || baseCode === null ){",
      "    return;",
      "  }",
      "",
      "  [...mutate.options].forEach((item, index)=>{",
      "    if( index === 0 ) return;",
      "    item.parentNode.removeChild(item);",
      "",
      "    [...backUpMutate].forEach((backupItem)=>{",
      "      if( backupItem.dataset.do === baseCode ){",
      "        mutate.appendChild(backupItem);",
      "      }",
      "    });",
      "  });",
      "}",
      "",
      "const selectOnChange = ()=>{",
      "  baseSelected = base.selectedIndex;",
      "  mutate.selectedIndex = 0;",
      "  if( baseSelected == 0 ){",
      "    mutate.classList.add('select-disabled');",
      "    return;",
      "  }else{",
      "    mutate.classList.remove('select-disabled');",
      "  }",
      "  selectHandle();",
      "}",
      "",
      "// default ",
      "if( base.selectedIndex != 0 ){",
      "  selectHandle();",
      "  mutate.classList.remove('select-disabled');",
      "}else{",
      "  mutate.classList.add('select-disabled');",
      "}",
      "",
      "baseSelect.onchange = selectOnChange;",
      "]]></style>",
      "  <row label=\"r1\" ss:rowClassNames=\"base-select\" value=\"1\">도/시</row>",
      "  <row label=\"r2\" ss:rowClassNames=\"mutate-select\" value=\"2\">군/구</row>",
      "  <choice label=\"do1\" value=\"1\">서울특별시</choice>",
      "  <choice label=\"do2\" value=\"2\">부산광역시</choice>",
      "  <choice label=\"do3\" value=\"3\">대구광역시</choice>",
      "  <choice label=\"do4\" value=\"4\">인천광역시</choice>",
      "  <choice label=\"do5\" value=\"5\">광주광역시</choice>",
      "  <choice label=\"do6\" value=\"6\">대전광역시</choice>",
      "  <choice label=\"do7\" value=\"7\">울산광역시</choice>",
      "  <choice label=\"do8\" value=\"8\">경기도</choice>",
      "  <choice label=\"do9\" value=\"9\">강원도</choice>",
      "  <choice label=\"do10\" value=\"10\">충청북도</choice>",
      "  <choice label=\"do11\" value=\"11\">충청남도</choice>",
      "  <choice label=\"do12\" value=\"12\">전라북도</choice>",
      "  <choice label=\"do13\" value=\"13\">전라남도</choice>",
      "  <choice label=\"do14\" value=\"14\">경상북도</choice>",
      "  <choice label=\"do15\" value=\"15\">경상남도</choice>",
      "  <choice label=\"do16\" value=\"16\">제주특별자치도</choice>",
      "  <choice label=\"gu101\" value=\"101\">종로구</choice>",
      "  <choice label=\"gu102\" value=\"102\">중구</choice>",
      "  <choice label=\"gu103\" value=\"103\">용산구</choice>",
      "  <choice label=\"gu104\" value=\"104\">성동구</choice>",
      "  <choice label=\"gu105\" value=\"105\">광진구</choice>",
      "  <choice label=\"gu106\" value=\"106\">동대문구</choice>",
      "  <choice label=\"gu107\" value=\"107\">중랑구</choice>",
      "  <choice label=\"gu108\" value=\"108\">성북구</choice>",
      "  <choice label=\"gu109\" value=\"109\">강북구</choice>",
      "  <choice label=\"gu110\" value=\"110\">도봉구</choice>",
      "  <choice label=\"gu111\" value=\"111\">노원구</choice>",
      "  <choice label=\"gu112\" value=\"112\">은평구</choice>",
      "  <choice label=\"gu113\" value=\"113\">서대문구</choice>",
      "  <choice label=\"gu114\" value=\"114\">마포구</choice>",
      "  <choice label=\"gu115\" value=\"115\">양천구</choice>",
      "  <choice label=\"gu116\" value=\"116\">강서구</choice>",
      "  <choice label=\"gu117\" value=\"117\">구로구</choice>",
      "  <choice label=\"gu118\" value=\"118\">금천구</choice>",
      "  <choice label=\"gu119\" value=\"119\">영등포구</choice>",
      "  <choice label=\"gu120\" value=\"120\">동작구</choice>",
      "  <choice label=\"gu121\" value=\"121\">관악구</choice>",
      "  <choice label=\"gu122\" value=\"122\">서초구</choice>",
      "  <choice label=\"gu123\" value=\"123\">강남구</choice>",
      "  <choice label=\"gu124\" value=\"124\">송파구</choice>",
      "  <choice label=\"gu125\" value=\"125\">강동구</choice>",
      "  <choice label=\"gu201\" value=\"201\">중구</choice>",
      "  <choice label=\"gu202\" value=\"202\">서구</choice>",
      "  <choice label=\"gu203\" value=\"203\">동구</choice>",
      "  <choice label=\"gu204\" value=\"204\">영도구</choice>",
      "  <choice label=\"gu205\" value=\"205\">부산진구</choice>",
      "  <choice label=\"gu206\" value=\"206\">동래구</choice>",
      "  <choice label=\"gu207\" value=\"207\">남구</choice>",
      "  <choice label=\"gu208\" value=\"208\">북구</choice>",
      "  <choice label=\"gu209\" value=\"209\">해운대구</choice>",
      "  <choice label=\"gu210\" value=\"210\">사하구</choice>",
      "  <choice label=\"gu211\" value=\"211\">금정구</choice>",
      "  <choice label=\"gu212\" value=\"212\">강서구</choice>",
      "  <choice label=\"gu213\" value=\"213\">연제구</choice>",
      "  <choice label=\"gu214\" value=\"214\">수영구</choice>",
      "  <choice label=\"gu215\" value=\"215\">사상구</choice>",
      "  <choice label=\"gu216\" value=\"216\">기장군</choice>",
      "  <choice label=\"gu301\" value=\"301\">중구</choice>",
      "  <choice label=\"gu302\" value=\"302\">동구</choice>",
      "  <choice label=\"gu303\" value=\"303\">서구</choice>",
      "  <choice label=\"gu304\" value=\"304\">남구</choice>",
      "  <choice label=\"gu305\" value=\"305\">북구</choice>",
      "  <choice label=\"gu306\" value=\"306\">수성구</choice>",
      "  <choice label=\"gu307\" value=\"307\">달서구</choice>",
      "  <choice label=\"gu308\" value=\"308\">달성군</choice>",
      "  <choice label=\"gu401\" value=\"401\">중구</choice>",
      "  <choice label=\"gu402\" value=\"402\">동구</choice>",
      "  <choice label=\"gu403\" value=\"403\">미추홀구</choice>",
      "  <choice label=\"gu404\" value=\"404\">연수구</choice>",
      "  <choice label=\"gu405\" value=\"405\">남동구</choice>",
      "  <choice label=\"gu406\" value=\"406\">부평구</choice>",
      "  <choice label=\"gu407\" value=\"407\">계양구</choice>",
      "  <choice label=\"gu408\" value=\"408\">서구</choice>",
      "  <choice label=\"gu409\" value=\"409\">강화군</choice>",
      "  <choice label=\"gu410\" value=\"410\">옹진군</choice>",
      "  <choice label=\"gu501\" value=\"501\">동구</choice>",
      "  <choice label=\"gu502\" value=\"502\">서구</choice>",
      "  <choice label=\"gu503\" value=\"503\">남구</choice>",
      "  <choice label=\"gu504\" value=\"504\">북구</choice>",
      "  <choice label=\"gu505\" value=\"505\">광산구</choice>",
      "  <choice label=\"gu601\" value=\"601\">동구</choice>",
      "  <choice label=\"gu602\" value=\"602\">중구</choice>",
      "  <choice label=\"gu603\" value=\"603\">서구</choice>",
      "  <choice label=\"gu604\" value=\"604\">유성구</choice>",
      "  <choice label=\"gu605\" value=\"605\">대덕구</choice>",
      "  <choice label=\"gu701\" value=\"701\">중구</choice>",
      "  <choice label=\"gu702\" value=\"702\">남구</choice>",
      "  <choice label=\"gu703\" value=\"703\">동구</choice>",
      "  <choice label=\"gu704\" value=\"704\">북구</choice>",
      "  <choice label=\"gu705\" value=\"705\">울주군</choice>",
      "  <choice label=\"gu801\" value=\"801\">수원시</choice>",
      "  <choice label=\"gu802\" value=\"802\">성남시</choice>",
      "  <choice label=\"gu803\" value=\"803\">의정부시</choice>",
      "  <choice label=\"gu804\" value=\"804\">안양시</choice>",
      "  <choice label=\"gu805\" value=\"805\">부천시</choice>",
      "  <choice label=\"gu806\" value=\"806\">광명시</choice>",
      "  <choice label=\"gu807\" value=\"807\">평택시</choice>",
      "  <choice label=\"gu808\" value=\"808\">동두천시</choice>",
      "  <choice label=\"gu809\" value=\"809\">안산시</choice>",
      "  <choice label=\"gu810\" value=\"810\">고양시</choice>",
      "  <choice label=\"gu811\" value=\"811\">과천시</choice>",
      "  <choice label=\"gu812\" value=\"812\">구리시</choice>",
      "  <choice label=\"gu813\" value=\"813\">남양주시</choice>",
      "  <choice label=\"gu814\" value=\"814\">오산시</choice>",
      "  <choice label=\"gu815\" value=\"815\">시흥시</choice>",
      "  <choice label=\"gu816\" value=\"816\">군포시</choice>",
      "  <choice label=\"gu817\" value=\"817\">의왕시</choice>",
      "  <choice label=\"gu818\" value=\"818\">하남시</choice>",
      "  <choice label=\"gu819\" value=\"819\">용인시</choice>",
      "  <choice label=\"gu820\" value=\"820\">파주시</choice>",
      "  <choice label=\"gu821\" value=\"821\">이천시</choice>",
      "  <choice label=\"gu822\" value=\"822\">안성시</choice>",
      "  <choice label=\"gu823\" value=\"823\">김포시</choice>",
      "  <choice label=\"gu824\" value=\"824\">화성시</choice>",
      "  <choice label=\"gu825\" value=\"825\">광주시</choice>",
      "  <choice label=\"gu826\" value=\"826\">양주시</choice>",
      "  <choice label=\"gu827\" value=\"827\">포천시</choice>",
      "  <choice label=\"gu828\" value=\"828\">여주시</choice>",
      "  <choice label=\"gu829\" value=\"829\">연천군</choice>",
      "  <choice label=\"gu830\" value=\"830\">가평군</choice>",
      "  <choice label=\"gu831\" value=\"831\">양평군</choice>",
      "  <choice label=\"gu901\" value=\"901\">춘천시</choice>",
      "  <choice label=\"gu902\" value=\"902\">원주시</choice>",
      "  <choice label=\"gu903\" value=\"903\">강릉시</choice>",
      "  <choice label=\"gu904\" value=\"904\">동해시</choice>",
      "  <choice label=\"gu905\" value=\"905\">태백시</choice>",
      "  <choice label=\"gu906\" value=\"906\">속초시</choice>",
      "  <choice label=\"gu907\" value=\"907\">삼척시</choice>",
      "  <choice label=\"gu908\" value=\"908\">홍천군</choice>",
      "  <choice label=\"gu909\" value=\"909\">횡성군</choice>",
      "  <choice label=\"gu910\" value=\"910\">영월군</choice>",
      "  <choice label=\"gu911\" value=\"911\">평창군</choice>",
      "  <choice label=\"gu912\" value=\"912\">정선군</choice>",
      "  <choice label=\"gu913\" value=\"913\">철원군</choice>",
      "  <choice label=\"gu914\" value=\"914\">화천군</choice>",
      "  <choice label=\"gu915\" value=\"915\">양구군</choice>",
      "  <choice label=\"gu916\" value=\"916\">인제군</choice>",
      "  <choice label=\"gu917\" value=\"917\">고성군</choice>",
      "  <choice label=\"gu918\" value=\"918\">양양군</choice>",
      "  <choice label=\"gu1001\" value=\"1001\">청주시</choice>",
      "  <choice label=\"gu1002\" value=\"1002\">충주시</choice>",
      "  <choice label=\"gu1003\" value=\"1003\">제천시</choice>",
      "  <choice label=\"gu1004\" value=\"1004\">보은군</choice>",
      "  <choice label=\"gu1005\" value=\"1005\">옥천군</choice>",
      "  <choice label=\"gu1006\" value=\"1006\">영동군</choice>",
      "  <choice label=\"gu1007\" value=\"1007\">증평군</choice>",
      "  <choice label=\"gu1008\" value=\"1008\">진천군</choice>",
      "  <choice label=\"gu1009\" value=\"1009\">괴산군</choice>",
      "  <choice label=\"gu1010\" value=\"1010\">음성군</choice>",
      "  <choice label=\"gu1011\" value=\"1011\">단양군</choice>",
      "  <choice label=\"gu1101\" value=\"1101\">천안시</choice>",
      "  <choice label=\"gu1102\" value=\"1102\">공주시</choice>",
      "  <choice label=\"gu1103\" value=\"1103\">보령시</choice>",
      "  <choice label=\"gu1104\" value=\"1104\">아산시</choice>",
      "  <choice label=\"gu1105\" value=\"1105\">서산시</choice>",
      "  <choice label=\"gu1106\" value=\"1106\">논산시</choice>",
      "  <choice label=\"gu1107\" value=\"1107\">계룡시</choice>",
      "  <choice label=\"gu1108\" value=\"1108\">당진시</choice>",
      "  <choice label=\"gu1109\" value=\"1109\">금산군</choice>",
      "  <choice label=\"gu1110\" value=\"1110\">부여군</choice>",
      "  <choice label=\"gu1111\" value=\"1111\">서천군</choice>",
      "  <choice label=\"gu1112\" value=\"1112\">청양군</choice>",
      "  <choice label=\"gu1113\" value=\"1113\">홍성군</choice>",
      "  <choice label=\"gu1114\" value=\"1114\">예산군</choice>",
      "  <choice label=\"gu1115\" value=\"1115\">태안군</choice>",
      "  <choice label=\"gu1201\" value=\"1201\">전주시</choice>",
      "  <choice label=\"gu1202\" value=\"1202\">군산시</choice>",
      "  <choice label=\"gu1203\" value=\"1203\">익산시</choice>",
      "  <choice label=\"gu1204\" value=\"1204\">정읍시</choice>",
      "  <choice label=\"gu1205\" value=\"1205\">남원시</choice>",
      "  <choice label=\"gu1206\" value=\"1206\">김제시</choice>",
      "  <choice label=\"gu1207\" value=\"1207\">완주군</choice>",
      "  <choice label=\"gu1208\" value=\"1208\">진안군</choice>",
      "  <choice label=\"gu1209\" value=\"1209\">무주군</choice>",
      "  <choice label=\"gu1210\" value=\"1210\">장수군</choice>",
      "  <choice label=\"gu1211\" value=\"1211\">임실군</choice>",
      "  <choice label=\"gu1212\" value=\"1212\">순창군</choice>",
      "  <choice label=\"gu1213\" value=\"1213\">고창군</choice>",
      "  <choice label=\"gu1214\" value=\"1214\">부안군</choice>",
      "  <choice label=\"gu1301\" value=\"1301\">목포시</choice>",
      "  <choice label=\"gu1302\" value=\"1302\">여수시</choice>",
      "  <choice label=\"gu1303\" value=\"1303\">순천시</choice>",
      "  <choice label=\"gu1304\" value=\"1304\">나주시</choice>",
      "  <choice label=\"gu1305\" value=\"1305\">광양시</choice>",
      "  <choice label=\"gu1306\" value=\"1306\">담양군</choice>",
      "  <choice label=\"gu1307\" value=\"1307\">곡성군</choice>",
      "  <choice label=\"gu1308\" value=\"1308\">구례군</choice>",
      "  <choice label=\"gu1309\" value=\"1309\">고흥군</choice>",
      "  <choice label=\"gu1310\" value=\"1310\">보성군</choice>",
      "  <choice label=\"gu1311\" value=\"1311\">화순군</choice>",
      "  <choice label=\"gu1312\" value=\"1312\">장흥군</choice>",
      "  <choice label=\"gu1313\" value=\"1313\">강진군</choice>",
      "  <choice label=\"gu1314\" value=\"1314\">해남군</choice>",
      "  <choice label=\"gu1315\" value=\"1315\">영암군</choice>",
      "  <choice label=\"gu1316\" value=\"1316\">무안군</choice>",
      "  <choice label=\"gu1317\" value=\"1317\">함평군</choice>",
      "  <choice label=\"gu1318\" value=\"1318\">영광군</choice>",
      "  <choice label=\"gu1319\" value=\"1319\">장성군</choice>",
      "  <choice label=\"gu1320\" value=\"1320\">완도군</choice>",
      "  <choice label=\"gu1321\" value=\"1321\">진도군</choice>",
      "  <choice label=\"gu1322\" value=\"1322\">신안군</choice>",
      "  <choice label=\"gu1401\" value=\"1401\">포항시</choice>",
      "  <choice label=\"gu1402\" value=\"1402\">경주시</choice>",
      "  <choice label=\"gu1403\" value=\"1403\">김천시</choice>",
      "  <choice label=\"gu1404\" value=\"1404\">안동시</choice>",
      "  <choice label=\"gu1405\" value=\"1405\">구미시</choice>",
      "  <choice label=\"gu1406\" value=\"1406\">영주시</choice>",
      "  <choice label=\"gu1407\" value=\"1407\">영천시</choice>",
      "  <choice label=\"gu1408\" value=\"1408\">상주시</choice>",
      "  <choice label=\"gu1409\" value=\"1409\">문경시</choice>",
      "  <choice label=\"gu1410\" value=\"1410\">경산시</choice>",
      "  <choice label=\"gu1411\" value=\"1411\">군위군</choice>",
      "  <choice label=\"gu1412\" value=\"1412\">의성군</choice>",
      "  <choice label=\"gu1413\" value=\"1413\">청송군</choice>",
      "  <choice label=\"gu1414\" value=\"1414\">영양군</choice>",
      "  <choice label=\"gu1415\" value=\"1415\">영덕군</choice>",
      "  <choice label=\"gu1416\" value=\"1416\">청도군</choice>",
      "  <choice label=\"gu1417\" value=\"1417\">고령군</choice>",
      "  <choice label=\"gu1418\" value=\"1418\">성주군</choice>",
      "  <choice label=\"gu1419\" value=\"1419\">칠곡군</choice>",
      "  <choice label=\"gu1420\" value=\"1420\">예천군</choice>",
      "  <choice label=\"gu1421\" value=\"1421\">봉화군</choice>",
      "  <choice label=\"gu1422\" value=\"1422\">울진군</choice>",
      "  <choice label=\"gu1423\" value=\"1423\">울릉군</choice>",
      "  <choice label=\"gu1501\" value=\"1501\">창원시</choice>",
      "  <choice label=\"gu1502\" value=\"1502\">진주시</choice>",
      "  <choice label=\"gu1503\" value=\"1503\">통영시</choice>",
      "  <choice label=\"gu1504\" value=\"1504\">사천시</choice>",
      "  <choice label=\"gu1505\" value=\"1505\">김해시</choice>",
      "  <choice label=\"gu1506\" value=\"1506\">밀양시</choice>",
      "  <choice label=\"gu1507\" value=\"1507\">거제시</choice>",
      "  <choice label=\"gu1508\" value=\"1508\">양산시</choice>",
      "  <choice label=\"gu1509\" value=\"1509\">의령군</choice>",
      "  <choice label=\"gu1510\" value=\"1510\">함안군</choice>",
      "  <choice label=\"gu1511\" value=\"1511\">창녕군</choice>",
      "  <choice label=\"gu1512\" value=\"1512\">고성군</choice>",
      "  <choice label=\"gu1513\" value=\"1513\">남해군</choice>",
      "  <choice label=\"gu1514\" value=\"1514\">하동군</choice>",
      "  <choice label=\"gu1515\" value=\"1515\">산청군</choice>",
      "  <choice label=\"gu1516\" value=\"1516\">함양군</choice>",
      "  <choice label=\"gu1517\" value=\"1517\">거창군</choice>",
      "  <choice label=\"gu1518\" value=\"1518\">합천군</choice>",
      "  <choice label=\"gu1601\" value=\"1601\">제주시</choice>",
      "  <choice label=\"gu1602\" value=\"1602\">서귀포시</choice>",
      "</select>",
      "",
      "<suspend/>"
    ],
    "description": "DecipherQuestions/AreaQuestionExample"
  },

  "FloatCustom_Snippet": {
    "prefix": "float.html",
    "body": [
      "<float ",
      "    label=\"${1:[QID]}\"",
      "    optional=\"0\"",
      "    range=\"${2:0.1},${3:99}\"",
      "    size=\"3\">",
      "      <title>${4:[TITLE]}</title>",
      "      <validate>",
      "#to_str = str(this.val)",
      "#if '.' in to_str :",
      "#  chk = to_str.split(\".\")[1]",
      "# one decimal only",
      "#  if len(chk) gt ${5:1} :",
      "#    error(\"\")",
      "      </validate>",
      "      <style name=\"el.text\"><![CDATA[",
      "\\@if row.styles.ss.preText or this.styles.ss.preText",
      "    \\${row.styles.ss.preText or this.styles.ss.preText or \"\"}&nbsp;",
      "\\@endif",
      "<input type=\"number\" min=\"${2:0.1}\" max=\"${3:99}\" step=\"${7:0.1}\" style=\"width: 80px\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"\\$(value)\" size=\"\\$(size)\" class=\"input text-input\" \\$(extra)/>",
      "\\@if row.styles.ss.postText or this.styles.ss.postText",
      "    &nbsp;\\${row.styles.ss.postText or this.styles.ss.postText or \"\"}",
      "\\@endif",
      "]]></style>",
      "      $0",
      "    </float>",
      "",
      "    <suspend/>"
    ],
    "description": "DecipherQuestions/FloatCustom"
  },

  "imageUploader_Snippet": {
    "prefix": "img.upload",
    "body": [
      "<image label=\"${1:[QID]}\" optional=\"0\" sst=\"0\" uses=\"imgupload.1\" ${3:imgupload:providenoanswer=\"0\"}>",
      "  <title>${2:[TITLE]}</title>",
      "  <comment></comment>",
      "  ${4:<noanswer label=\"na\">${5:[NA_TEXT]}</noanswer>}",
      "</image>",
      "",
      "<suspend/>"
    ],
    "description": "DecipherQuestions/imageUploader"
  },

  "MA_base_MA_Snippet": {
    "prefix": "mama",
    "body": [
      "<define label=\"${1:[DEFINE_LIST]}\">",
      "$0",
      "</define>",
      "",
      "<checkbox",
      "  label=\"${2:[QID1]}\"",
      "  atleast=\"1\"",
      "  shuffle=\"rows\"",
      "  ss:questionClassNames=\"sp-custom-btn${6: btn-mw-500 btn-cols-1}\">",
      "  <alt></alt>",
      "  <title><div class=\"q-name\">${2:[QID1]}</div> ${3:[QID1_TITLE]}</title>",
      "  <insert source=\"${1:[DEFINE_LIST]}\"/>",
      "  ${7:<row label=\"r98\" value=\"98\" open=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>}",
      "</checkbox>",
      "<suspend/>",
      "",
      "<checkbox",
      "  label=\"${4:[QID2]}\"",
      "  rowCond=\"${2:[QID1]}[row]\"",
      "  shuffle=\"rows\"",
      "  shuffleBy=\"${2:[QID1]}\"",
      "  atleast=\"1\"",
      "  ss:questionClassNames=\"sp-custom-btn${6: btn-mw-500 btn-cols-1}\">",
      "  <alt></alt>",
      "  <title><div class=\"q-name\">${4:[QID2]}</div> ${5:[QID2_TITLE]}</title>",
      "  <insert source=\"${1:[DEFINE_LIST]}\"/>",
      "  ${7:<row label=\"r98\" value=\"98\" randomize=\"0\">\\${${2:[QID1]}.r98.open}</row>}",
      "</checkbox>",
      "<suspend/>"
    ],
    "description": "DecipherQuestions/MA_base_MA"
  },

  "MA_base_Rank_Snippet": {
    "prefix": "mark",
    "body": [
      "<define label=\"${1:[DEFINE_LIST]}\">",
      "$0",
      "</define>",
      "",
      "<checkbox",
      "  label=\"${2:[QID1]}\"",
      "  atleast=\"1\"",
      "  shuffle=\"rows\"",
      "  ss:questionClassNames=\"sp-custom-btn${6: btn-mw-500 btn-cols-1}\">",
      "  <alt></alt>",
      "  <title><div class=\"q-name\">${2:[QID1]}</div> ${3:[QID1_TITLE]}</title>",
      "  <insert source=\"${1:[DEFINE_LIST]}\"/>",
      "  ${7:<row label=\"r98\" value=\"98\" open=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>}",
      "</checkbox>",
      "<suspend/>",
      "",
      "<radio",
      "  label=\"${4:[QID2]}\"",
      "  grouping=\"cols\"",
      "  unique=\"1\"",
      "  rowCond=\"${2:[QID1]}[row]\"",
      "  colCond=\"col.index lt ${2:[QID1]}.count\"",
      "  shuffle=\"rows\"",
      "  shuffleBy=\"${2:[QID1]}\"",
      "  ss:questionClassNames=\"niq-rk-question\">",
      "  <alt></alt>",
      "  <title><div class=\"q-name\">${2:[QID1]}</div> ${5:[QID2_TITLE]} ${8:\\${rankCnt(${4:[QID2]})}}</title>",
      "  <style copy=\"custom_rank\" arg:autoClick=\"true\" arg:autoContinue=\"false\" arg:colCnt=\"1\" arg:noneLabel=\"null\" arg:ableNone=\"2\" arg:showAnswers=\"true\" arg:ableSort=\"true\" arg:showGroups=\"false\" arg:toggle=\"false\" arg:showCnt=\"true\" name=\"question.after\"/>",
      "  <col label=\"c1\">1순위</col>",
      "  <col label=\"c2\">2순위</col>",
      "  <col label=\"c3\">3순위</col>",
      "  <insert source=\"${1:[DEFINE_LIST]}\"/>",
      "  ${7:<row label=\"r98\" value=\"98\" randomize=\"0\">\\${${2:[QID1]}.r98.open}</row>}",
      "</radio>",
      "<suspend/>"
    ],
    "description": "DecipherQuestions/MA_base_Rank"
  },

  "MA_base_SA_Snippet": {
    "prefix": "masa",
    "body": [
      "<define label=\"${1:[DEFINE_LIST]}\">",
      "$0",
      "</define>",
      "",
      "<checkbox",
      "  label=\"${2:[QID1]}\"",
      "  atleast=\"1\"",
      "  shuffle=\"rows\"",
      "  ss:questionClassNames=\"sp-custom-btn${6: btn-mw-500 btn-cols-1}\">",
      "  <alt></alt>",
      "  <title><div class=\"q-name\">${2:[QID1]}</div> ${3:[QID1_TITLE]}</title>",
      "  <insert source=\"${1:[DEFINE_LIST]}\"/>",
      "  ${7:<row label=\"r98\" value=\"98\" open=\"1\" openSize=\"25\" randomize=\"0\">기타 (구체적으로:)</row>}",
      "</checkbox>",
      "<suspend/>",
      "",
      "<radio",
      "  label=\"${4:[QID2]}\"",
      "  rowCond=\"${2:[QID1]}[row]\"",
      "  shuffle=\"rows\"",
      "  shuffleBy=\"${2:[QID1]}\"",
      "  ss:questionClassNames=\"sp-custom-btn${6: btn-mw-500 btn-cols-1}\">",
      "  <alt></alt>",
      "  <title><div class=\"q-name\">${4:[QID2]}</div> ${5:[QID2_TITLE]}</title>",
      "  <insert source=\"${1:[DEFINE_LIST]}\"/>",
      "  ${7:<row label=\"r98\" value=\"98\" randomize=\"0\">\\${${2:[QID1]}.r98.open}</row>}",
      "</radio>",
      "<suspend/>"
    ],
    "description": "DecipherQuestions/MA_base_SA"
  },

  "NetPromoterScore_Snippet": {
    "prefix": "nps",
    "body": [
      "<number ",
      "    label=\"${1:[QID]}\"",
      "    ignoreValues=\"99\"",
      "    optional=\"0\"",
      "    size=\"10\"",
      "    uses=\"nps.1\"",
      "    verify=\"range(0,10)\"",
      "    nps:leftLegend=\"${2:[LEFT_TEXT]}\"",
      "    nps:rightLegend=\"${3:[RIGHT_TEXT]}\">",
      "    <title>${4:[TITLE]}</title>",
      "    <comment></comment>",
      "    <net label=\"promoter\" values=\"9-10\">Promoter</net>",
      "    <net label=\"passive\" values=\"7-8\">Passive</net>",
      "    <net label=\"detractor\" values=\"0-6\">Detractor</net>",
      "</number>",
      "",
      "<suspend/>"
    ],
    "description": "DecipherQuestions/NetPromoterScore"
  },

  "NetPromoterScoreOptions_Snippet": {
    "prefix": "nps.opt",
    "body": [
      "nps:legendPosition=\"Below\"",
      "nps:leftLegend=\"\"",
      "nps:midLegend=\"\"",
      "nps:rightLegend=\"\""
    ],
    "description": "DecipherQuestions/NetPromoterScoreOptions"
  },

  "PageTimer_Snippet": {
    "prefix": "timer",
    "body": [
      "<checkbox ",
      "    label=\"${1:[QID]}\"",
      "    optional=\"1\"",
      "    where=\"survey,notdp\">",
      "    <title>$0</title>",
      "<style label=\"timer_head\" name='survey.question'><![CDATA[",
      "<h1 title=\"@(question)\" class=\"question-text\" id=\"question_text_\\${this.label}\">",
      "  <div class=\"comment-box\">\\${this.styles.html.showNumber and (str(number) + '. ') or ''}\\$(title)</div>",
      "</h1>",
      "<div class=\"timesec\"></div>",
      "<!-- /.question-text -->",
      "]]></style>",
      "<style label=\"timer_js\" arg:timer=\"${2:5}\" name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "const timeflag=true;",
      "",
      "let sec = \\$(timer);",
      "const timesec = document.querySelector(\".timesec\");",
      "let pageTime = setInterval( () => {",
      "  timesec.innerHTML = sec;",
      "  sec -= 1;",
      "}, 1000);",
      "",
      "if(timeflag){",
      "  const \\$submitbutton = \\$ (\"#btn_continue, #btn_finish\");",
      "  \\$submitbutton.prop(\"disabled\", true);",
      "  setTimeout( function() {",
      "  \\$submitbutton.prop(\"disabled\", false);",
      "  clearInterval(pageTime);",
      "  timesec.classList.add(\"hidden\");",
      "  }, (\\$(timer)+1) * 1000);",
      "}",
      "]]></style>",
      "    <row label=\"dummy\" ss:rowClassNames=\"hidden\"/>",
      "  </checkbox>",
      "<suspend/>"
    ],
    "description": "DecipherQuestions/PageTimer"
  },

  "PageTimerCopy_Snippet": {
    "prefix": "timer.copy",
    "body": [
      "<radio ",
      "  label=\"${1:[QID]}\"",
      "  optional=\"1\"",
      "  where=\"survey,notdp\">",
      "  <title>$0</title>",
      "  <style copy=\"timer_head\" name='survey.question'/>",
      "  <style copy=\"timer_js\" arg:timer=\"${2:5}\" name=\"question.after\" wrap=\"ready\"/>",
      "  <row label=\"dummy\" ss:rowClassNames=\"hidden\"/>",
      "</radio>",
      "<suspend/>"
    ],
    "description": "DecipherQuestions/PageTimerCopy"
  },

  "PhoneNumberAnswerQuestion_Snippet": {
    "prefix": "phone",
    "body": [
      "<text ",
      "    label=\"${1:[QID]}\"",
      "    optional=\"0\"",
      "    size=\"40\"",
      "    ss:questionClassNames=\"phone-number\">",
      "      <title>$0</title>",
      "      <validate>",
      "if this.any :",
      "  chk_value = this.unsafe_val.replace('-', '')",
      "  chk_value = this.unsafe_val.replace('.', '')",
      "  chk_value = chk_value.strip()",
      "  chk_value = chk_value.replace(' ', '')",
      "  this.val = chk_value",
      "  if len(chk_value) lt 10 :",
      "    error('<b>핸드폰 번호</b> 확인 부탁드립니다.')",
      "      </validate>",
      "<style name=\"el.text\"><![CDATA[",
      "<div style=\"display: flex; flex-direction: row;align-items: center;\">",
      "  <div class=\"f-highlight\" style=\"display: flex;\">",
      "    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" style=\"width:25px; margin:0 auto;\">",
      "      <path fill-rule=\"evenodd\" d=\"M7 2a2 2 0 00-2 2v12a2 2 0 002 2h6a2 2 0 002-2V4a2 2 0 00-2-2H7zm3 14a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />",
      "    </svg>",
      "  </div>",
      "  <div>",
      "  <input style=\"border-radius: 10px;box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);\" type=\"text\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"\\$(value)\" size=\"\\$(size)\" class=\"input text-input\" \\$(extra) placeholder=\"${row.styles.ss.preText or this.styles.ss.preText or ''}\"/>",
      "  </div>",
      "</div>",
      "]]></style>",
      "    <style name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "const onlyNumber = (event) => {",
      "    const cursor = event.target.selectionStart;",
      "    event.target.value = event.target.value.replace(/[^0-9]/g, '');",
      "};",
      "",
      "const phoneNumberInput = document.querySelector('.phone-number input');",
      "",
      "phoneNumberInput.addEventListener('input', onlyNumber);",
      "]]></style>",
      "</text>",
      "",
      "<suspend/>"
    ],
    "description": "DecipherQuestions/PhoneNumberAnswerQuestion"
  },

  "TranslateSet_Snippet": {
    "prefix": "tr.set",
    "body": [
      "<exec>",
      "qArray = []",
      "labelArray = []",
      "",
      "qidArray = [${1:[QIDS]}]",
      "",
      "for q in qidArray :",
      "  if q in allQuestions.keys():",
      "    base = allQuestions[q]",
      "    base_ko = allQuestions[\"%s_ko\"%q]",
      "    if base.val is not None:",
      "      qArray.append(base.val)",
      "      labelArray.append(base_ko.label)",
      "",
      "trData = dict(q=qArray, target=\"ko\", key=\"${2:[API_KEY]}\")",
      "</exec>",
      "",
      "  <logic label=\"trCall\" cond=\"not(gv.isSST()) \" api:method=\"POST\" api:params=\"trData\" api:url=\"https://translation.googleapis.com/language/translate/v2\" uses=\"api.1\">",
      "    <title>Translating the Open-end questions</title></logic>",
      "  <suspend/>",
      "",
      "  <exec>",
      "print \"Translate Start\"",
      "if trCall.status == 200:",
      "  rcount=0",
      "  try:",
      "    for tr in trCall.r['data']['translations']: ",
      "      allQuestions[labelArray[rcount]].val = trCall.r['data']['translations'][rcount]['translatedText'].encode('utf8')",
      "      rcount = rcount + 1",
      "    print \"Success\"",
      "  except:",
      "    print \"Failed\"",
      "    pass",
      "else:",
      "  allQuestions[labelArray[0]].val = trCall.status",
      "  print \"API call failed\"",
      "  </exec>",
      "",
      "  <suspend/>"
    ],
    "description": "DecipherQuestions/TranslateSet"
  },

  "TranslateVariable_Snippet": {
    "prefix": "tr.var",
    "body": [
      "<textarea ",
      "   label=\"${1:[QID]}_ko\"",
      "   translateable=\"0\"",
      "   where=\"execute,survey,report\">",
      "    <title>${1:[QID]} Korean Translate</title>",
      "  </textarea>"
    ],
    "description": "DecipherQuestions/TranslateVariable"
  },

  "Alt_Snippet": {
    "prefix": "alt",
    "body": ["<alt>$0</alt>"],
    "description": "DecipherTag/Alt"
  },

  "BlockTag_Snippet": {
    "prefix": "block",
    "body": [
      "<block label=\"${1:[TAB1]}\" cond=\"${2}\">",
      "",
      "$0",
      "",
      "</block>",
      "<note>${1:[TAB1]} END</note>",
      "<suspend/>"
    ],
    "description": "DecipherTag/BlockTag"
  },

  "CautionPage_Snippet": {
    "prefix": "cp",
    "body": [
      "<html label=\"${1:[QID]}\" where=\"survey\">",
      "<div class=\"caution-page\">",
      "$0",
      "</div>",
      "</html>",
      "",
      "<suspend/>"
    ],
    "description": "DecipherTag/CautionPage"
  },

  "CommentTag_Snippet": {
    "prefix": "comment",
    "body": ["<comment>$0</comment>"],
    "description": "DecipherTag/CommentTag"
  },

  "ConditionTag_Snippet": {
    "prefix": "condition",
    "body": [
      "<condition label=\"${1:[QID]}\" cond=\"${2:[COND]}\">$0</condition>"
    ],
    "description": "DecipherTag/ConditionTag"
  },

  "DefineList_Snippet": {
    "prefix": "define",
    "body": ["<define label=\"${1:[LIST_NAME]}\">", "$0", "</define>"],
    "description": "DecipherTag/DefineList"
  },

  "ExecTag_Snippet": {
    "prefix": "exec",
    "body": ["<exec>", "$0", "</exec>"],
    "description": "DecipherTag/ExecTag"
  },

  "GotoTag_Snippet": {
    "prefix": "goto",
    "body": ["<goto cond=\"${1}\" target=\"${2}\"/>$0"],
    "description": "DecipherTag/GotoTag"
  },

  "HtmlTag_Snippet": {
    "prefix": "html",
    "body": [
      "<html label=\"${1:[QID]}\" where=\"survey\">",
      "<div class=\"comment-box\">",
      "$0",
      "</div>",
      "</html>",
      "<suspend/>"
    ],
    "description": "DecipherTag/HtmlTag"
  },

  "ImageWaterMark_Snippet": {
    "prefix": "img.wm",
    "body": [
      "[image ${1:[FILE_NAME]}.png protected=1 value=\\${record} fontSize=70 placement=repeat color=#000000 alpha=10]"
    ],
    "description": "DecipherTag/ImageWaterMark"
  },

  "Insert_Snippet": {
    "prefix": "insert",
    "body": ["<insert source=\"${1:[DEFINE_LIST]}\"/>$0"],
    "description": "DecipherTag/Insert"
  },

  "Noanswer_Snippet": {
    "prefix": "noanswer",
    "body": ["<noanswer label=\"${1:na}\">$0</noanswer>"],
    "description": "DecipherTag/Noanswer"
  },

  "Note_Snippet": {
    "prefix": "note",
    "body": ["<note>$0</note>"],
    "description": "DecipherTag/Note"
  },

  "QCNote_Snippet": {
    "prefix": "qc",
    "body": [
      "<note sst=\"0\">",
      "## VER ${1:1}",
      "#### ${2:QID}",
      "- $0",
      "</note>"
    ],
    "description": "DecipherTag/QCNote"
  },

  "QuotaTag_Snippet": {
    "prefix": "quota",
    "body": [
      "<quota label=\"${1:[QUOTA]}\" sheet=\"${1:[QUOTA]}\"/>",
      "<suspend/>"
    ],
    "description": "DecipherTag/QuotaTag"
  },

  "ResTag_Snippet": {
    "prefix": "res",
    "body": ["<res label=\"${1:[RES]}\">$0</res>"],
    "description": "DecipherTag/ResTag"
  },

  "Screenout_Snippet": {
    "prefix": "scr",
    "body": [
      "<exec>",
      "status(${1:[COND]}, \"${2:[QID]}\")",
      "</exec>",
      "",
      "<term label=\"${2:[QID]}_Term\" cond=\"${1:[COND]}\">${2:[QID]} term</term>",
      "",
      "<suspend/>",
      "",
      "${0:<row label=\"${2:[QID]}\" value=\"${3:[VALUE]}\">${2:[QID]} ScreenOut</row>}"
    ],
    "description": "DecipherTag/Screenout"
  },

  "SuspendTag_Snippet": {
    "prefix": "su",
    "body": ["<suspend/>"],
    "description": "DecipherTag/SuspendTag"
  },

  "TermTag_Snippet": {
    "prefix": "term",
    "body": [
      "<term label=\"${1:[QID]}_Term\" cond=\"${2:[COND]}\">${1:[QID]} term</term>"
    ],
    "description": "DecipherTag/TermTag"
  },

  "ValidateTag_Snippet": {
    "prefix": "validate",
    "body": ["<validate>", "$0", "</validate>"],
    "description": "DecipherTag/ValidateTag"
  },

  "VarTag_Snippet": {
    "prefix": "var",
    "body": [
      "<var name=\"${0:[variablename]}\"${1: unique=\"1\"}${2: required=\"1\"}${3: filename=\"invited.txt\"} />"
    ],
    "description": "DecipherTag/VarTag"
  },

  "VirtualTag_Snippet": {
    "prefix": "virtual",
    "body": ["<virtual>", "$0", "</virtual>"],
    "description": "DecipherTag/VirtualTag"
  },

  "Captcha_Snippet": {
    "prefix": "captcha",
    "body": [
      "<logic",
      "  uses=\"recaptcha.1\"",
      "  label=\"${1:[QID]}\"/>",
      "",
      "<term cond=\"not ${1:[QID]}.human\" label=\"${1:[QID]}_Term\">Captcha fail</term>"
    ],
    "description": "LogicTag/Captcha"
  },

  "CrosstabsSend_Snippet": {
    "prefix": "crosstabs",
    "body": [
      "<logic label=\"crosstab_send\"",
      "    crosstabs:message=\"Today Crosstabs\"",
      "    crosstabs:recipients=\"${1}\"",
      "    crosstabs:saved=\"${2}\"",
      "    crosstabs:time=\"${3:09:00}\"",
      "    uses=\"crosstabs.1\">",
      "  <title>Share a Crosstabs Export</title></logic>"
    ],
    "description": "LogicTag/CrosstabsSend"
  },

  "ReportSend_Snippet": {
    "prefix": "report",
    "body": [
      "<logic label=\"report_send\"",
      "    fieldreport:message=\"Today Response Summary\"",
      "    fieldreport:recipients=\"sookbin.song@nielseniq.com,yoonri.kim@nielseniq.com${1}\"",
      "    fieldreport:time=\"${2:09:00}\"",
      "    fieldreport:split=\"${3}\"",
      "    fieldreport:tabs=\"completion,terminate,quota\"",
      "    uses=\"fieldreport.1\">",
      "  <title>Share a Response Summary Snapshot</title>",
      "</logic>"
    ],
    "description": "LogicTag/ReportSend"
  },

  "SFTPSend_Snippet": {
    "prefix": "ftp",
    "body": [
      "<logic",
      "  label=\"${1:[QID]}\" ",
      "  upload:cond=\"qualified\" ",
      "  upload:directory=\"/www/Decipher/\" ",
      "  upload:filename=\"data_%Y_%m_%d_%H_%M_%S.csv\" ",
      "  upload:format=\"csv\" ",
      "  upload:host=\"nielsenkor.cafe24.com\" ",
      "  upload:username=\"${2:[USERNAME]}\" ",
      "  upload:password=\"${3:[PASSWORD]}\" ",
      "  upload:layout=\"${4:[LAYOUT]}\" ",
      "  upload:protocol=\"ftp\" ",
      "  upload:time=\"10:30\" ",
      "  uses=\"upload.1\">",
      "  <title>ftp/sftp/ftps Transfer Data</title>",
      "</logic>"
    ],
    "description": "LogicTag/SFTPSend"
  },

  "Accordion_Snippet": {
    "prefix": "acco",
    "body": ["uses=\"accordion.2\""],
    "description": "DynamicQuestions/Accordion"
  },

  "AccordionJS_Snippet": {
    "prefix": "acco.js",
    "body": [
      "<res label=\"acco_error\"><div class=\"acco-err-rows\" data-rows=\"%s\"></div></res>",
      "",
      "<validate>",
      "# row index and str type",
      "row_errs = []",
      "if row_errs :",
      "    error(res.acco_error%(','.join(row_errs)))",
      "</validate>",
      "",
      "<style name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "const rowBase = \\${[]};",
      "const colBase = \\${[]};",
      "accordionHideEelement(rowBase, colBase);",
      "]]></style>"
    ],
    "description": "DynamicQuestions/AccordionJS"
  },

  "Atmable_Snippet": {
    "prefix": "atm",
    "body": ["uses=\"atmtable.6\""],
    "description": "DynamicQuestions/Atmable"
  },

  "AudioQuestion_Snippet": {
    "prefix": "audio",
    "body": [
      "<checkbox ",
      "  label=\"${1:[QID]}\"",
      "  audio:file=\"/survey/${gv.survey.path}/${2:[FILE_NAME]}.mp3\"",
      "  randomize=\"0\"",
      "  sst=\"0\"",
      "  uses=\"audio.3\"",
      "  where=\"survey,notdp\">",
      "  <title>${3:Please click the \"Play\" button below.}</title>",
      "</checkbox>",
      "",
      "<suspend/>",
      ""
    ],
    "description": "DynamicQuestions/AudioQuestion"
  },

  "Cardrating_Snippet": {
    "prefix": "cardrating",
    "body": [
      "uses=\"cardrating.1\"",
      "cardrating:animation=\"fast\"",
      "cardrating:completion=\"\\${res.cardrating_msg}\""
    ],
    "description": "DynamicQuestions/Cardrating"
  },

  "CardratingOptions_Snippet": {
    "prefix": "cardrating.opt",
    "body": [
      "${1:<res label=\"cardrating_msg\">'계속' 버튼을 눌러<br/>다음 질문에 응답해주세요.</res>}",
      "",
      "uses=\"cardrating.1\"",
      "cardrating:themename=\"vstack\"",
      "cardrating:animation=\"fast\"",
      "cardrating:completion=\"\\${res.cardrating_msg}\"",
      "cardrating:lrg_maxwidth=\"100px\"",
      "type=\"rating\""
    ],
    "description": "DynamicQuestions/CardratingOptions"
  },

  "Cardsort_Snippet": {
    "prefix": "cardsort",
    "body": [
      "cardsort:animationDuration=\"200\"",
      "cardsort:dragAndDrop=\"0\"",
      "cardsort:displayCounter=\"0\"",
      "uses=\"cardsort.7\""
    ],
    "description": "DynamicQuestions/Cardsort"
  },

  "CardsortAutoNext_Snippet": {
    "prefix": "cardsort.auto.next",
    "body": [
      "<note>기타 오픈을 제외하고 자동으로 넘기기</note>",
      "<style name=\"question.after\" wrap=\"ready\" label=\"cardsort_other_focus\"><![CDATA[",
      "const buckets = document.querySelectorAll(\".sq-cardsort-bucket\");",
      "const nextButton = document.querySelector(\".sq-cardsort-next\");",
      "",
      "const otherHandler = (event)=>{",
      " const inputCheck = event.target.querySelector('input[type=text]');",
      "",
      " if( inputCheck === null || inputCheck === undefined ){",
      "    nextButton.click();",
      "    return;",
      " }else{",
      "    inputCheck.focus();",
      " }",
      "}",
      "",
      "buckets.forEach((bucket)=>{",
      "  bucket.addEventListener('click', otherHandler);",
      "});",
      "]]></style>",
      "",
      "",
      "<note>특정 조건 시 자동으로 넘기기 (예시 샘플은 '없음(b99)' 또는 필수로 2개 응답시 자동으로 넘어가짐)</note>",
      "<style name=\"question.after\"><![CDATA[",
      "<script>",
      "document.addEventListener('DOMContentLoaded', () => {",
      "  const cardSortBucketView = document.querySelector('.sq-cardsort-buckets-view');",
      "  const nextButton = document.querySelector('.sq-cardsort-next');",
      "  const prevButton = document.querySelector('.sq-cardsort-previous');",
      "  const cardsort = document.querySelector('.sq-cardsort');",
      "  const completeAnswer = document.querySelector('.sq-cardsort-completion');",
      "  const contuneButton = document.querySelector('#btn_continue');",
      "",
      "  const noneBucket = document.querySelector('.sq-cardsort-bucket-b99');",
      "",
      "  let nextFlag = true;",
      "",
      "  prevButton.addEventListener('click', ()=>{",
      "    nextFlag = false;",
      "  });",
      "",
      "  nextButton.addEventListener('click', ()=>{",
      "    nextFlag = true;",
      "  });",
      "",
      "  noneBucket.addEventListener('click', ()=>{",
      "    nextButton.classList.remove('sq-cardsort-state-disabled');",
      "    nextButton.click();",
      "    nextFlag = true;",
      "  });",
      "",
      "  cardSortBucketView.addEventListener('click', ()=>{",
      "    const selected = cardSortBucketView.querySelectorAll('.sq-cardsort-state-selected');",
      "    ",
      "    if( !nextFlag ){",
      "      return;",
      "    }",
      "",
      "    if( selected.length >= 2 ){",
      "      nextButton.classList.remove('sq-cardsort-state-disabled');",
      "      nextButton.click();",
      "      nextFlag = true;",
      "    }else{",
      "      nextButton.classList.add('sq-cardsort-state-disabled');",
      "    }",
      "  });",
      "",
      "  contuneButton.disabled = true;",
      "  contuneButton.style.display = 'none';",
      "",
      "",
      "  const config = {",
      "      attributes: true,",
      "      childList: true,",
      "      subtree: true,",
      "      characterData: true",
      "  };",
      "",
      "  const checkAnswer = ()=>{",
      "    const flagStyle = completeAnswer.style.display;",
      "    if( flagStyle == 'list-item' ){",
      "      contuneButton.disabled = false;",
      "      contuneButton.style.display = '';",
      "    }",
      "  }",
      "",
      "  const callback = function(mutationsList, observer) {",
      "      checkAnswer();",
      "  };",
      "",
      "  const observer = new MutationObserver(callback);",
      "  observer.observe(cardsort, config);",
      "});",
      "</script>",
      "]]></style>"
    ],
    "description": "DynamicQuestions/CardsortAutoNext"
  },

  "CardsortChangeCurrentText_Snippet": {
    "prefix": "cardsort.show.text",
    "body": [
      "<style label=\"cardsort_current_card\" name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "/* <span class=\"cardsort-show-text\"> enter this tag in the title </span> */",
      "const setTextSpan = document.querySelector('.cardsort-show-text');",
      "",
      "const showText = ()=>{",
      "  console.log(1);",
      "  const cards = document.querySelectorAll('.sq-cardsort-card');",
      "  const progress = document.querySelector('.sq-cardsort-progress').innerText.split('/');",
      "  const currentCard = progress[0];",
      "  if( currentCard === '-' ){",
      "    return;",
      "  }",
      "",
      "  const currentCardIndex = parseInt(currentCard)-1;",
      "  const currentText = cards[currentCardIndex].querySelector('p').innerText;",
      "  setTextSpan.innerText = currentText.trim();",
      "}",
      "",
      "const observer = new MutationObserver(mutations => {",
      "  mutations.forEach(mutation => {",
      "    if (mutation.type === \"attributes\" && mutation.attributeName === \"style\") {",
      "      showText();",
      "    }",
      "  });",
      "});",
      "",
      "const config = {",
      "  attributes: true,",
      "  attributeFilter: [\"style\"],",
      "  subtree: true",
      "};",
      "",
      "observer.observe(document.querySelector('.label_\\$(this.label)'), config);",
      "]]></style>"
    ],
    "description": "DynamicQuestions/CardsortChangeCurrentText"
  },

  "CardsortChangeCurrentTextCopy_Snippet": {
    "prefix": "cardsort.show.text.copy",
    "body": [
      "<style copy=\"cardsort_current_card\" name=\"question.after\" wrap=\"ready\"/>"
    ],
    "description": "DynamicQuestions/CardsortChangeCurrentTextCopy"
  },

  "CardsortError_Snippet": {
    "prefix": "cardsort.err",
    "body": [
      "<res label=\"sys_check-error-atLeast-sing-row\">답변을 선택하세요.</res>",
      "<res label=\"sys_check-error-atMost-plur-row\">답변을 선택하세요.</res>",
      "<res label=\"sys_noAnswerSelected\">답변을 선택하세요.</res>"
    ],
    "description": "DynamicQuestions/CardsortError"
  },

  "CardsortHTML_Snippet": {
    "prefix": "cardsort.html",
    "body": [
      "cardsort:buttonNextHTML=\"\\${res.cardsort_next}\"",
      "cardsort:buttonPreviousHTML=\"\\${res.cardsort_prev}\"",
      "cardsort:completionHTML=\"\\${res.cardsort_completion}\""
    ],
    "description": "DynamicQuestions/CardsortHTML"
  },

  "CardsortRate_Snippet": {
    "prefix": "cardsort.rate",
    "body": [
      "cardsort:animationDuration=\"200\"",
      "cardsort:displayCounter=\"0\"",
      "cardsort:dragAndDrop=\"0\"",
      "cardsort:wrapBuckets=\"0\"",
      "ss:questionClassNames=\"cardsort-rating\"",
      "uses=\"cardsort.7\"",
      "type=\"rating\""
    ],
    "description": "DynamicQuestions/CardsortRate"
  },

  "CardsortRes_Snippet": {
    "prefix": "cardsort.res",
    "body": [
      "<res label=\"cardsort_next\">다음 &gt;&gt;</res>",
      "<res label=\"cardsort_prev\">&lt;&lt; 이전</res>",
      "<res label=\"cardsort_completion\">'계속' 버튼을 눌러 다음 질문에 응답해주세요.</res>"
    ],
    "description": "DynamicQuestions/CardsortRes"
  },

  "DatePicker_Snippet": {
    "prefix": "datepicker",
    "body": [
      "<text ",
      "  label=\"${1:[QID]}\"",
      "  optional=\"0\"",
      "  size=\"25\"",
      "  uses=\"fvdatepicker.1\"",
      "  verify=\"dateRange(yyyy/mm/dd, any, any)\">",
      "  <title><div class=\"q-name\">${1:[QID]}</div> ${2:[TITLE]}</title>",
      "  <comment></comment>",
      "</text>",
      "",
      "<suspend/>"
    ],
    "description": "DynamicQuestions/DatePicker"
  },

  "FlexAccordion_Snippet": {
    "prefix": "acco.flex",
    "body": [
      ".sq-accordion-answers{",
      "  margin-left: 0px !important;",
      "}",
      "",
      ".sq-accordion-answers{",
      "  display: flex;",
      "  justify-content: center;",
      "  align-items: stretch;",
      "}",
      "",
      ".sq-accordion-cell{",
      "  width: 100%;",
      "  text-align: center;",
      "  margin-bottom: auto;",
      "  padding-left: 10px !important;",
      "}",
      "",
      "\\@media all and (max-width: 750px){",
      "  .sq-accordion-cell{",
      "    font-size: 0.9rem;",
      "  }",
      "}"
    ],
    "description": "DynamicQuestions/FlexAccordion"
  },

  "OneRowAtaTime_Snippet": {
    "prefix": "onerow",
    "body": ["uses=\"onerowatatime.3\""],
    "description": "DynamicQuestions/OneRowAtaTime"
  },

  "RateSlider_Snippet": {
    "prefix": "sliderpoint",
    "body": [
      "<select ",
      "   label=\"${1:[QID]}\"",
      "   optional=\"0\"",
      "   uses=\"sliderpoints.3\">",
      "    <title><div class=\"q-name\">${1:[QID]}</div> ${2:[TITLE]}</title>",
      "    <comment></comment>",
      "    <choice label=\"ch1\" value=\"1\">(1)</choice>",
      "    <choice label=\"ch2\" value=\"2\">(2)</choice>",
      "    <choice label=\"ch3\" value=\"3\">(3)</choice>",
      "    <choice label=\"ch4\" value=\"4\">(4)</choice>",
      "    <choice label=\"ch5\" value=\"5\">(5)</choice>",
      "    <choice label=\"ch6\" value=\"6\">(6)</choice>",
      "    <choice label=\"ch7\" value=\"7\">(7)</choice>",
      "</select>",
      "<suspend/>"
    ],
    "description": "DynamicQuestions/RateSlider"
  },

  "SliderNumber_Snippet": {
    "prefix": "slidernumber",
    "body": ["uses=\"slidernumber.5\""],
    "description": "DynamicQuestions/SliderNumber"
  },

  "Sum100_Snippet": {
    "prefix": "sum100",
    "body": [
      "<number ",
      "    label=\"${1:[QID]}\"",
      "    amount=\"100\"",
      "    autosum:postText=\"%\"",
      "    optional=\"0\"",
      "    size=\"3\"",
      "    uses=\"autosum.5\"",
      "    verify=\"range(0,100)\">",
      "    <title><div class=\"q-name\">${1:[QID]}</div> ${2:[TITLE]}</title>",
      "<style name=\"page.head\"><![CDATA[",
      "<style>",
      ".grid-table-mode{",
      "  max-width: ${3:415}px !important;",
      "}",
      ".grid.grid-table-mode .row-legend{",
      "  text-align: center !important;",
      "}",
      "</style>",
      "]]></style>",
      "$0",
      "</number>",
      "",
      "<suspend/>"
    ],
    "description": "DynamicQuestions/Sum100"
  },

  "Tiled_Snippet": {
    "prefix": "tiled",
    "body": ["uses=\"atm1d.11\"", "atm1d:viewMode=\"Tiled\""],
    "description": "DynamicQuestions/Tiled"
  },

  "TiledError_Snippet": {
    "prefix": "tiled.err",
    "body": [
      "<res label=\"sys_check-error-atLeast-sing-column\">이 열에서 \\$(count)개 이상의 상자를 선택하십시오(\\$(actual)개 선택).</res>"
    ],
    "description": "DynamicQuestions/TiledError"
  },

  "VideoCapture_Snippet": {
    "prefix": "videocapture",
    "body": [
      "<textarea ",
      " label=\"${1:[QID]}\"",
      " height=\"10\"",
      " randomize=\"0\"",
      " sst=\"0\"",
      " uses=\"videocapture.2\"",
      " optional=\"0\"",
      " videocapture:providenoanswer=\"0\"",
      " width=\"50\">",
      "  <title><div class=\"q-name\">${1:[QID]}</div> ${2:[TITLE]}</title>",
      "  <comment></comment>",
      "</textarea>",
      "",
      "<suspend/>"
    ],
    "description": "DynamicQuestions/VideoCapture"
  },

  "VideoCaptureNoAnswer_Snippet": {
    "prefix": "videocapture.na",
    "body": [
      "<textarea ",
      "  label=\"${1:[QID]}\"",
      "  height=\"10\"",
      "  sst=\"0\"",
      "  uses=\"videocapture.2\"",
      "  width=\"50\">",
      "  <title><div class=\"q-name\">${1:[QID]}</div> ${2:[TITLE]}</title>",
      "  <comment></comment>",
      "  ${4:<noanswer label=\"na\">${3:NA}</noanswer>}",
      "</textarea>",
      "",
      "<suspend/>"
    ],
    "description": "DynamicQuestions/VideoCaptureNoAnswer"
  },

  "glbVerifyQuestion_Snippet": {
    "prefix": "glb.verify",
    "body": [
      "<radio ",
      "  label=\"GLB_verify\"",
      "  shuffle=\"rows\"",
      "  sst=\"0\">",
      "  <title><div class=\"comment-box\">현재 화면에 보이는 동물이 무엇인지 선택해주세요.</div></title>",
      "  <style label=\"glb_iframe\" arg:glbSrc=\"https://nielsenkor.cafe24.com/Decipher/TEST/GLB/FILES/verify.html\" arg:glbName=\"elephant\" name=\"survey.question\"><![CDATA[",
      "<style>",
      ".ftp-iframe {",
      "  width: 100%;",
      "  max-width: 924px;",
      "  min-height: 500px;",
      "}",
      "",
      "\\@media (max-width: 768px){",
      "  .ftp-iframe {",
      "    max-width: 100%;",
      "  }",
      "}",
      "</style>",
      "<iframe class=\"ftp-iframe\" src=\"\\$(glbSrc)?glbname=\\$(glbName)\"></iframe>",
      "<h1 title=\"@(question)\" class=\"question-text\" id=\"question_text_\\${this.label}\">\\${this.styles.html.showNumber and (str(number) + '. ') or ''}",
      "  \\$(title)",
      "</h1>",
      "  <!-- /.question-text -->",
      "]]></style>",
      "  <row label=\"r1\" value=\"1\">사자</row>",
      "  <row label=\"r2\" value=\"2\">개</row>",
      "  <row label=\"r3\" value=\"3\">침팬지</row>",
      "  <row label=\"r4\" value=\"4\">코끼리</row>",
      "  <row label=\"r5\" value=\"5\">말</row>",
      "  <row label=\"r6\" value=\"6\">새</row>",
      "  <row label=\"r7\" value=\"7\">고양이</row>",
      "</radio>",
      "",
      "<suspend/>",
      "",
      "<term label=\"Scr_GLB\" cond=\"not GLB_verify.r4\" sst=\"0\">Scr_Video</term>",
      "",
      "<suspend/>"
    ],
    "description": "GLB/glbVerifyQuestion"
  },

  "glbXML_Snippet": {
    "prefix": "glb.xml",
    "body": [
      "<style label=\"glb_iframe\" arg:glbSrc=\"${1:[modelviewer.html URL]}\" arg:glbName=\"${2:[glb File name]}\" name=\"survey.question\"><![CDATA[",
      "<style>",
      ".ftp-iframe {",
      "  width: 100%;",
      "  max-width: 924px;",
      "  min-height: 500px;",
      "}",
      "",
      "\\@media (max-width: 768px){",
      "  .ftp-iframe {",
      "    max-width: 100%;",
      "  }",
      "}",
      "</style>",
      "<iframe class=\"ftp-iframe\" src=\"\\$(glbSrc)?glbname=\\$(glbName)\"></iframe>",
      "<h1 title=\"@(question)\" class=\"question-text\" id=\"question_text_\\${this.label}\">\\${this.styles.html.showNumber and (str(number) + '. ') or ''}",
      "  \\$(title)",
      "</h1>",
      "  <!-- /.question-text -->",
      "]]></style>"
    ],
    "description": "GLB/glbXML"
  },

  "glbXMLCopy_Snippet": {
    "prefix": "glb.copy",
    "body": [
      "<style arg:glbSrc=\"${1:\\${imgdr}/modelViewer.html}\" arg:glbName=\"$2\" copy=\"glb_iframe\" name=\"survey.question\"/>"
    ],
    "description": "GLB/glbXMLCopy"
  },

  "Br1_Snippet": {
    "prefix": "br",
    "body": ["<br/>"],
    "description": "HTML/Br1"
  },

  "Br2_Snippet": {
    "prefix": "br2",
    "body": ["<br/><br/>"],
    "description": "HTML/Br2"
  },

  "CommentBox_Snippet": {
    "prefix": "cb",
    "body": ["<div class=\"comment-box\">$0</div>"],
    "description": "HTML/CommentBox"
  },

  "ImgTag_Snippet": {
    "prefix": "img",
    "body": ["<img src=\"\\${imgdr}/$0.png\"/>"],
    "description": "HTML/ImgTag"
  },

  "AutoSumSliderJS_Snippet": {
    "prefix": "autosum",
    "body": [
      "<number ",
      "    label=\"${1:[QID]}\"",
      "    amount=\"${3:100}\"",
      "    optional=\"0\"",
      "    size=\"3\"",
      "    verify=\"range(0,100)\">",
      "    <title><div class=\"q-name\">${1:[QID]}</div> ${2:[TITLE]}</title>",
      "    <style label=\"autosumDrag\" arg:columns=\"2\" arg:dragRange=\"1\" arg:goalValue=\"100\" arg:limitActivate=\"true\" arg:maxValue=\"100\" arg:minValue=\"0\" arg:needDragCount=\"0\" arg:postText=\"\" arg:totalText=\"\\${res.autosumDrag_totalText}\" arg:viewDivision=\":\" arg:viewOrigin=\"false\" name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "fnAutosum(\\$(viewOrigin), \\$(limitActivate), \\$(dragRange), \\$(columns), \\$(goalValue), \\$(minValue), \\$(maxValue), '\\$(viewDivision)', '\\$(totalText)', '\\$(postText)', '\\${this.label}', \\$(needDragCount));",
      "]]></style>",
      "$0",
      "</number>",
      "",
      "<suspend/>"
    ],
    "description": "JavaScriptLibrary/AutoSumSliderJS"
  },

  "DisableCopyPasteOnInputs_Snippet": {
    "prefix": "dont.cv",
    "body": [
      "// .dont-cv에 적용",
      "const disableCopyPasteOnInputs = () => {",
      "    const inputs = document.querySelectorAll('.dont-cv input[type=\"text\"]');",
      "",
      "    inputs.forEach(input => {",
      "        // 마우스 오른쪽 클릭 차단",
      "        input.addEventListener('contextmenu', event => {",
      "            event.preventDefault();",
      "            //alert(\"복사 및 붙여넣기가 비활성화되었습니다.\");",
      "        });",
      "",
      "        // 키보드 단축키 차단",
      "        input.addEventListener('keydown', event => {",
      "            if (",
      "                (event.ctrlKey || event.metaKey) &&",
      "                (event.key === 'c' || event.key === 'v' || ",
      "                 event.key === 'x' || event.key === 'a' || event.key === 'u')",
      "            ) {",
      "                event.preventDefault();",
      "                //alert(\"이 작업은 허용되지 않습니다.\");",
      "            }",
      "        });",
      "",
      "        // 텍스트 드래그 방지",
      "        input.addEventListener('selectstart', event => {",
      "            event.preventDefault();",
      "        });",
      "",
      "        // 모바일용 터치 홀드 방지",
      "        input.addEventListener('touchstart', event => {",
      "            if (event.touches.length > 1) {",
      "                event.preventDefault();",
      "            }",
      "        });",
      "    });",
      "}",
      "",
      "window.addEventListener(\"DOMContentLoaded\", function(){",
      "    disableCopyPasteOnInputs();",
      "});"
    ],
    "description": "JavaScriptLibrary/DisableCopyPasteOnInputs"
  },

  "FloatDecimalKeyUp_Snippet": {
    "prefix": "float.js",
    "body": [
      "<style name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "document.querySelectorAll('.input-float').forEach(input => {",
      "  input.addEventListener('keyup', function() {",
      "    // 입력 값이 소수점 두 자리 이상이면 제거",
      "    if (input.value.includes('.') && input.value.split('.')[1].length > 1) {",
      "      input.value = parseFloat(input.value).toFixed(1);",
      "    }",
      "  });",
      "});",
      "]]></style>"
    ],
    "description": "JavaScriptLibrary/FloatDecimalKeyUp"
  },

  "ImagePopup_Snippet": {
    "prefix": "popup",
    "body": [
      "document.addEventListener('DOMContentLoaded', (event) => {",
      "    const imgDiv = document.querySelector('.img-div');",
      "    if (imgDiv) {",
      "        imgDiv.addEventListener('click', (event) => {",
      "            if (event.target.tagName.toLowerCase() === 'img') {",
      "                window.open(event.target.src, '_blank');",
      "            }",
      "        });",
      "    }",
      "});"
    ],
    "description": "JavaScriptLibrary/ImagePopup"
  },

  "ImageZoomClass_Snippet": {
    "prefix": "zoom",
    "body": ["${1:zoom pos_cursor pWidth_350 pHeight_350 redDot}"],
    "description": "JavaScriptLibrary/ImageZoomClass"
  },

  "ImageZoomHint_Snippet": {
    "prefix": "zoom.hint",
    "body": [
      "# zoom",
      "default class ",
      "",
      "# zoom position",
      "pos_left",
      "pos_right",
      "pos_top",
      "pos_bottom",
      "pos_cursor # the zoom area follows the mouse cursor",
      "pos_fix",
      "",
      "# zoom PC width, height",
      "pWidth_350 / pHeight_350",
      "",
      "# zoom mobile width, height",
      "mWidth_350 / mHeight_350",
      "",
      "# zoom factor (default 3.0)",
      "sight_3.0",
      "",
      "# zoom cursor show pointer",
      "redDot",
      "",
      "# JavaScript",
      "fnImageZoom();"
    ],
    "description": "JavaScriptLibrary/ImageZoomHint"
  },

  "ImageZoomJS_Snippet": {
    "prefix": "zoom.js",
    "body": [
      "<script>",
      "window.addEventListener(\"DOMContentLoaded\", function(){",
      "  fnImageZoom();",
      "});",
      "</script>"
    ],
    "description": "JavaScriptLibrary/ImageZoomJS"
  },

  "JavaScriptOnerowatatime_Snippet": {
    "prefix": "js.onerow",
    "body": [
      "<style label=\"js_onerowatatime\" arg:completeWord=\"default\" arg:multiControl=\"true\" arg:nextControl=\"true\" arg:resultPosFix=\"true\" arg:resultView=\"true\" arg:scrollMove=\"true\" name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "onerowatatime(\"\\${this.label}\", \\${len([eachRow.label for eachRow in \\$(this.label).rows if eachRow.displayed and not eachRow.disabled])}, \\${len([eachCol.label for eachCol in \\$(this.label).cols if eachCol.displayed and not eachCol.disabled])}, \\${len([eachRow.label for eachRow in \\$(this.label).rows if eachRow.any])}, \\$(resultView), \\$(scrollMove), \\$(nextControl), \\$(multiControl), \"\\$(completeWord)\", \\$(resultPosFix));",
      "]]></style>"
    ],
    "description": "JavaScriptLibrary/JavaScriptOnerowatatime"
  },

  "JavaScriptOnerowatatimeCopy_Snippet": {
    "prefix": "js.onerow.copy",
    "body": [
      "<style copy=\"js_onerowatatime\" arg:completeWord=\"default\" arg:multiControl=\"true\" arg:nextControl=\"true\" arg:resultPosFix=\"true\" arg:resultView=\"true\" arg:scrollMove=\"true\" name=\"question.after\" wrap=\"ready\"/>"
    ],
    "description": "JavaScriptLibrary/JavaScriptOnerowatatimeCopy"
  },

  "MonthHandler_Snippet": {
    "prefix": "month.handler",
    "body": [
      "<style name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "const monthHanler = (yearSelector, monthSeletor)=>{",
      "  const yearValue = yearSelector.value;",
      "  const monthValue = monthSeletor.value;",
      "  const currentYear = new Date().getFullYear();",
      "  const opts = monthSeletor.querySelectorAll('option');",
      "",
      "  let maxMonth = 12;",
      "",
      "  if( yearValue == currentYear ){",
      "    maxMonth = new Date().getMonth() + 1;",
      "  }",
      "",
      "  const months = [...Array(maxMonth).keys()].map(i => i + 1);",
      "",
      "  [...opts].forEach((opt,index)=>{",
      "    if( index === 0 ) return;",
      "    opt.parentNode.removeChild(opt);",
      "  });",
      "",
      "  months.forEach((mon)=>{",
      "    const optElement = document.createElement('option');",
      "    optElement.value = mon;",
      "    optElement.text = mon;",
      "",
      "    if( mon === parseInt(monthValue) ){",
      "      console.log(monthValue);",
      "      optElement.setAttribute('selected', 'selected');",
      "    }",
      "",
      "    monthSeletor.appendChild(optElement);",
      "  });",
      "}",
      "",
      "const yearSelector = document.querySelectorAll('.year-selector');",
      "const monthSeletor = document.querySelectorAll('.month-selector');",
      "",
      "[...yearSelector].forEach((item,index)=>{",
      "  monthHanler(item, monthSeletor[index]);",
      "  item.addEventListener('change', ()=>{",
      "    monthHanler(item, monthSeletor[index]);",
      "  });",
      "});",
      "]]></style>"
    ],
    "description": "JavaScriptLibrary/MonthHandler"
  },

  "MutationObserver_Snippet": {
    "prefix": "observer",
    "body": [
      "const ${1:[VAR_NAME]} = document.querySelector(\"${2:[SELECTOR]}\");",
      "",
      "const observer = new MutationObserver(${3:[FUNCTION]});",
      "const config = { ",
      "    childList: true,",
      "    characterData: true,",
      "    subtree: true",
      "};",
      "observer.observe(${1:[VAR_NAME]}, config);"
    ],
    "description": "JavaScriptLibrary/MutationObserver"
  },

  "OnlyNumberKeyUp_Snippet": {
    "prefix": "only.num.js",
    "body": [
      "<style name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "document.querySelectorAll('.only-number').forEach(input => {",
      "  input.addEventListener('keydown', function(event) {",
      "    if (!/[0-9]/.test(event.key) && ",
      "        !['Backspace', 'Tab', 'Enter', 'ArrowLeft', 'ArrowRight', 'Delete'].includes(event.key)) {",
      "      event.preventDefault();",
      "    }",
      "  });",
      "",
      "  input.addEventListener('input', function(event) {",
      "    if (this.value.match(/[^0-9]/g)) {",
      "      this.value = this.value.replace(/[^0-9]/g, '');",
      "    }",
      "  });",
      "});",
      "]]></style>"
    ],
    "description": "JavaScriptLibrary/OnlyNumberKeyUp"
  },

  "QuestionFocusExample_Snippet": {
    "prefix": "focus.ex",
    "body": [
      "<style name=\"question.after\"><![CDATA[",
      "<style>",
      "* {",
      "  scroll-behavior: smooth;",
      "}",
      "</style>",
      "<script>",
      "window.addEventListener('DOMContentLoaded', ()=>{",
      "    const questions = document.querySelectorAll('.question');",
      "    const continueBtn = document.querySelector('#btn_continue');",
      "",
      "    const questionFocus = ()=>{",
      "      const questionAnswer = [...questions].filter((qu)=>{",
      "        const checkAnswer = qu.querySelectorAll('input[type=radio]:checked');",
      "        if( checkAnswer.length > 0 ){",
      "          return true;",
      "        }else{",
      "          return false;",
      "        }",
      "      });",
      "",
      "      if( questionAnswer.length > 0 ){",
      "        const questionNoAnswer = [...questions].filter((qu)=>{",
      "          const checkAnswer = qu.querySelectorAll('input[type=radio]:checked');",
      "          if( checkAnswer.length == 0 ){",
      "            return true;",
      "          }else{",
      "            return false;",
      "          }",
      "        });",
      "",
      "        if( questionNoAnswer.length > 0 ){",
      "          questionNoAnswer[0].focus();",
      "        }else{",
      "          continueBtn.focus();",
      "        }",
      "      }",
      "    }",
      "",
      "    questions.forEach((qu, index)=>{",
      "      qu.setAttribute('tabindex', index);",
      "      qu.onchange = ()=>{",
      "        questionFocus();",
      "      };",
      "      const answers = qu.querySelector('.answers');",
      "      answers.addEventListener('click', questionFocus);",
      "    });",
      "});",
      "</script>",
      "]]></style>"
    ],
    "description": "JavaScriptLibrary/QuestionFocusExample"
  },

  "SlideshowHTML_Snippet": {
    "prefix": "slideshow.html",
    "body": [
      "<res label=\"slideshow_force_text\">모든 슬라이드를 확인해주세요.</res>",
      "",
      "<style name=\"survey.question\" label=\"slideshow_title\"><![CDATA[",
      "<div class='slideshow-div'></div>",
      "<h1 title=\"@(question)\" class=\"question-text\" id=\"question_text_\\${this.label}\">\\${this.styles.html.showNumber and (str(number) + '. ') or ''}\\$(title)</h1>",
      "<!-- /.question-text -->",
      "<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css\"/>",
      "]]></style>",
      "<style name=\"question.after\" wrap=\"ready\" label=\"slideshow_html\" arg:holdPageSec=\"0\"><![CDATA[",
      "slideShowSetting({",
      "    mode : 'html',",
      "    slides: [$0],",
      "    force: true,",
      "    forceText: '\\${res.slideshow_force_text}',",
      "    holdPageSec: \\$(holdPageSec),",
      "})",
      "]]></style>"
    ],
    "description": "JavaScriptLibrary/SlideshowHTML"
  },

  "SlideshowHTMLCopy_Snippet": {
    "prefix": "slideshow.html.copy",
    "body": [
      "<style name=\"survey.question\" copy=\"slideshow_title\"/>",
      "<style name=\"question.after\" wrap=\"ready\" copy=\"slideshow_html\" arg:holdPageSec=\"0\"/>"
    ],
    "description": "JavaScriptLibrary/SlideshowHTMLCopy"
  },

  "SlideshowImage_Snippet": {
    "prefix": "slideshow.image",
    "body": [
      "<res label=\"slideshow_force_text\">모든 슬라이드를 확인해주세요.</res>",
      "",
      "<style name=\"survey.question\" label=\"slideshow_title\"><![CDATA[",
      "<div class='slideshow-div'></div>",
      "<h1 title=\"@(question)\" class=\"question-text\" id=\"question_text_\\${this.label}\">\\${this.styles.html.showNumber and (str(number) + '. ') or ''}\\$(title)</h1>",
      "<!-- /.question-text -->",
      "]]></style>",
      "<style name=\"question.after\" wrap=\"ready\" label=\"slideshow_image\" arg:holdPageSec=\"0\"><![CDATA[",
      "slideShowSetting({",
      "    mode : 'image',",
      "    slides: [$0],",
      "    imagePath: '\\${imgdr}',",
      "    imageClassName: 'slideshow-image',",
      "    force: true,",
      "    forceText: '\\${res.slideshow_force_text}',",
      "    holdPageSec: \\$(holdPageSec),",
      "})",
      "]]></style>"
    ],
    "description": "JavaScriptLibrary/SlideshowImage"
  },

  "SlideshowImageCopy_Snippet": {
    "prefix": "slideshow.image.copy",
    "body": [
      "<style name=\"survey.question\" copy=\"slideshow_title\"/>",
      "<style name=\"question.after\" wrap=\"ready\" copy=\"slideshow_image\" arg:holdPageSec=\"0\"/>"
    ],
    "description": "JavaScriptLibrary/SlideshowImageCopy"
  },

  "ThisOrThat_Snippet": {
    "prefix": "thisorthat",
    "body": [
      "ss:rowClassNames=\"this-or-that ${1:base1}-this\"",
      "ss:rowClassNames=\"this-or-that ${1:base1}-that\""
    ],
    "description": "JavaScriptLibrary/ThisOrThat"
  },

  "WidthOnly_Snippet": {
    "prefix": "width.only",
    "body": [
      "<res label=\"mobile_only_width\">본 문항은 가로 모드로 설문에 응답해주세요</res>",
      "",
      "<style label=\"width_only\" name=\"question.after\"><![CDATA[",
      "<style>",
      ".width-only{",
      "  background-color: white;",
      "  position: fixed;",
      "  top: 0;",
      "  width: 100%;",
      "  left: 0;",
      "  height: 100%;",
      "  display: flex;",
      "  flex-direction: column;",
      "  justify-content: center;",
      "  pointer-events: none;",
      "}",
      ".width-only svg{",
      "  width: 100px;",
      "}",
      "",
      ".width-only img{",
      "  width: 250px;",
      "}",
      "",
      ".width-only-cells{",
      "  display: flex;",
      "  flex-direction: column;",
      "  justify-content: center;",
      "  font-size: 2.5rem;",
      "  font-weight: bold;",
      "  width: 80%;",
      "  margin: 0 auto;",
      "  height: 80%;",
      "  text-align: center;",
      "  padding: 5px;",
      "  margin-bottom: 15px;",
      "  border: 1px solid #ccc;",
      "  border-radius: 15px;",
      "  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);",
      "}",
      "</style>",
      "<script>",
      "window.addEventListener(\"DOMContentLoaded\", function(){",
      "  /** Mobile width only **/",
      "  if(document.querySelector('.width-only')){",
      "      const only_width = () => {",
      "        const widthOnly = document.querySelector('.width-only');",
      "        const btns = document.querySelector('.survey-buttons');",
      "        if( window.orientation !== undefined ){",
      "          if(window.orientation == -90 || window.orientation == 90) {",
      "            widthOnly.classList.add('hidden');",
      "            btns.classList.remove('hidden');",
      "          } else {",
      "            widthOnly.classList.remove('hidden');",
      "            btns.classList.add('hidden');",
      "          }",
      "        }",
      "      }",
      "      only_width();",
      "      window.addEventListener(\"orientationchange\", only_width, false);",
      "  }",
      "});",
      "</script>",
      "<div class=\"width-only hidden\">",
      "  <div class=\"width-only-cells\">",
      "    <div class=\"width-only-text\">",
      "      <div><img src=\"/survey/selfserve/nielseniq.png\" class=\"logo-image\" alt=\"Nielsen Consumer LLC\"></div>",
      "      <div>\\${res.mobile_only_width}</div>",
      "    </div>",
      "    <div>",
      "    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\">",
      "      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99\" />",
      "    </svg>",
      "    </div>",
      "  </div>",
      "</div>",
      "]]></style>"
    ],
    "description": "JavaScriptLibrary/WidthOnly"
  },

  "YearMonthRange_Snippet": {
    "prefix": "month.range",
    "body": [
      "<style arg:minDate=\"${1:2000-01}\" arg:maxDate=\"${2:2099-12}\" arg:yearDescending=\"true\" label=\"year_month_range\" name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "selectDateRange({",
      "    minDate: '\\$(minDate)', ",
      "    maxDate: '\\$(maxDate)',",
      "    descending: \\$(yearDescending),",
      "});",
      "]]></style>"
    ],
    "description": "JavaScriptLibrary/YearMonthRange"
  },

  "YearMonthRangeCopy_Snippet": {
    "prefix": "month.range.copy",
    "body": [
      "<style arg:minDate=\"${1:2000-01}\" arg:maxDate=\"${2:2099-12}\" arg:yearDescending=\"true\" copy=\"year_month_range\" name=\"question.after\" wrap=\"ready\"/>"
    ],
    "description": "JavaScriptLibrary/YearMonthRangeCopy"
  },

  "MaxDiffCSS_Snippet": {
    "prefix": "maxdiff.css",
    "body": [
      ".maxdiff tr.maxdiff-header-legend {",
      "    background-color: transparent;",
      "}",
      "",
      ".maxdiff tr.maxdiff-header-legend th.legend {",
      "    background-color: transparent;",
      "    border: none;",
      "}",
      "",
      ".maxdiff tr.maxdiff-row td.element {",
      "    border-left: none;",
      "    border-right: none;",
      "    border-top: none;",
      "    border-bottom: 1px solid #d9d9d9;",
      "    text-align: center;",
      "}",
      "",
      ".maxdiff tr.maxdiff-row th.row-legend {",
      "    background-color: transparent;",
      "    border-left: none;",
      "    border-right: none;",
      "    border-top: none;",
      "    border-bottom: 1px solid #d9d9d9;",
      "    text-align: center;",
      "}"
    ],
    "description": "MaxDiff/MaxDiffCSS"
  },

  "MaxDiffExec_Snippet": {
    "prefix": "maxdiff.exec",
    "body": [
      "def setupMaxDiffFile(fname, fileDelimiter=\"\t\"):",
      "    try:",
      "        f = open(\"%s/%s\" % (gv.survey.path, fname))",
      "        mdObj = [ line.strip(\"\r\n\").split(fileDelimiter) for line in f.readlines() ]",
      "        d = dict( (\"v%s_t%s\" % (row[0], row[1]), row[2:]) for row in mdObj )",
      "    except IOError:",
      "        d = {}",
      "    return d",
      "",
      "def setupMaxDiffItemsA(d, vt, question, parentLabel):",
      "    items = d[vt]",
      "",
      "    print \"*****STAFF ONLY*****\"",
      "    print \"Version_Task: %s\" % vt",
      "    for r in question.rows:",
      "        r.text = res[ \"%s_item%s\" % (parentLabel, items[r.index]) ]",
      "        print \"Item %s: %s\" % (r.index+1, items[r.index])"
    ],
    "description": "MaxDiff/MaxDiffExec"
  },

  "MaxDiffQuestion_Snippet": {
    "prefix": "maxdiff.question",
    "body": [
      "<block label=\"${1:[QID]}_maxdiff_block\">",
      "    <quota label=\"${2:[QUOTA]}_label\" overquota=\"noqual\" sheet=\"${2:[QUOTA]}\"/>",
      "    ",
      "    <number label=\"${1:[QID]}_Version\" size=\"3\" optional=\"1\" verify=\"range(1,16)\" where=\"execute\">",
      "      <title>${1:[QID]} - MaxDiff Version</title>",
      "      <exec>",
      "print p.markers",
      "for x in p.markers:",
      "    if \"/${2:[QUOTA]}/MD_ver_\" in x:",
      "        ${1:[QID]}_Version.val = int(x.split(\"_\")[-1])",
      "        break",
      "      </exec>",
      "    </number>",
      "    <suspend/>",
      "    ",
      "    <exec>p.startTime = timeSpent()</exec>",
      "",
      "    <loop label=\"${1:[QID]}_md_loop\" vars=\"task\" randomizeChildren=\"0\">",
      "      <block label=\"${1:[QID]}_md_block\" randomize=\"1\">",
      "",
      "        <radio label=\"${1:[QID]}_[loopvar: task]\" adim=\"cols\" grouping=\"cols\" unique=\"1\" ss:questionClassNames=\"maxdiff\">",
      "          <title><div class=\"q-name\">${1:[QID]}-[loopvar: task]</div>  ${3:[TITLE]}</title>",
      "          <comment></comment>",
      "          <exec>",
      "${1:[QID]}_md = setupMaxDiffFile(\"${4:[DAT_FILE]}.dat\")",
      "setupMaxDiffItemsA( ${1:[QID]}_md, \"v%d_t%d\" % (${1:[QID]}_Version.val, [loopvar: task]), ${1:[QID]}_[loopvar: task], \"${1:[QID]}\")",
      "p.MDcount = str(${1:[QID]}_md_loop_expanded.order.index([loopvar: task]-1)+1)",
      "          </exec>",
      "",
      "          <col label=\"best\">${5:Most Important}</col>",
      "          <col label=\"worst\">${6:Least Important}</col>",
      "          $7<row label=\"item1\">Item 1</row>",
      "          <row label=\"item2\">Item 2</row>",
      "          <row label=\"item3\">Item 3</row>",
      "          <row label=\"item4\">Item 4</row>",
      "<style name=\"question.top-legend\"><![CDATA[",
      "\\@if ec.simpleList",
      "    \\$(legends)",
      "\\@else",
      "    <\\$(tag) class=\"maxdiff-header-legend row row-col-legends row-col-legends-top \\${\"mobile-top-row-legend \" if mobileOnly else \"\"}\\${\"GtTenColumns \" if ec.colCount > 10 else \"\"}colCount-\\$(colCount)\">",
      "        \\${\"%s%s\" % (legends.split(\"</th>\")[0],\"</th>\")}",
      "       \\$(left)",
      "        \\${\"%s%s\" % (legends.split(\"</th>\")[1],\"</th>\")}",
      "    </\\$(tag)>",
      "    \\@if not simple",
      "  </tbody>",
      "  <tbody>",
      "    \\@endif",
      "\\@endif",
      "]]></style>",
      "<style name=\"question.row\"><![CDATA[",
      "\\@if ec.simpleList",
      "    \\$(elements)",
      "\\@else",
      "    <\\$(tag) class=\"maxdiff-row row row-elements \\$(style) colCount-\\$(colCount)\">",
      "        \\${\"%s%s\" % (elements.split(\"</td>\")[0],\"</td>\")}",
      "        \\$(left)",
      "        \\${\"%s%s\" % (elements.split(\"</td>\")[1],\"</td>\")}",
      "    </\\$(tag)>",
      "\\@endif",
      "]]></style>",
      "",
      "  </radio>",
      "      </block>",
      "      ",
      "      <looprow label=\"1\">",
      "        <loopvar name=\"task\">1</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"2\">",
      "        <loopvar name=\"task\">2</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"3\">",
      "        <loopvar name=\"task\">3</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"4\">",
      "        <loopvar name=\"task\">4</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"5\">",
      "        <loopvar name=\"task\">5</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"6\">",
      "        <loopvar name=\"task\">6</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"7\">",
      "        <loopvar name=\"task\">7</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"8\">",
      "        <loopvar name=\"task\">8</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"9\">",
      "        <loopvar name=\"task\">9</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"10\">",
      "        <loopvar name=\"task\">10</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"11\">",
      "        <loopvar name=\"task\">11</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"12\">",
      "        <loopvar name=\"task\">12</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"13\">",
      "        <loopvar name=\"task\">13</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"14\">",
      "        <loopvar name=\"task\">14</loopvar>",
      "      </looprow>",
      "      ",
      "      <looprow label=\"15\">",
      "        <loopvar name=\"task\">15</loopvar>",
      "      </looprow>",
      "    $0",
      "    </loop>",
      "    ",
      "    <float label=\"${1:[QID]}_Timer\" size=\"15\" where=\"execute\">",
      "      <title>${1:[QID]} - MaxDiff Timer (Minutes)</title>",
      "      <exec>${1:[QID]}_Timer.val = (timeSpent() - p.startTime) / 60.0</exec>",
      "    </float>",
      "</block>",
      "<note>${1:[QID]}_maxdiff_block END</note>",
      "<suspend/>"
    ],
    "description": "MaxDiff/MaxDiffQuestion"
  },

  "MaxDiffRes_Snippet": {
    "prefix": "maxdiff.res",
    "body": [
      "<res label=\"${1:[QID]}_mditem1\">$0</res>",
      "<res label=\"${1:[QID]}_mditem2\"></res>",
      "<res label=\"${1:[QID]}_mditem3\"></res>",
      "<res label=\"${1:[QID]}_mditem4\"></res>",
      "<res label=\"${1:[QID]}_mditem5\"></res>",
      "<res label=\"${1:[QID]}_mditem6\"></res>",
      "<res label=\"${1:[QID]}_mditem7\"></res>",
      "<res label=\"${1:[QID]}_mditem8\"></res>",
      "<res label=\"${1:[QID]}_mditem9\"></res>"
    ],
    "description": "MaxDiff/MaxDiffRes"
  },

  "OCEAN_Snippet": {
    "prefix": "ocean",
    "body": [
      "<res label=\"ocean_left_legend\">왼쪽에 가깝다</res>",
      "<res label=\"ocean_right_legend\">오른쪽에 가깝다</res>",
      "",
      "<note>!!! 한글 버전 및 제과/식품 관련 문항으로 되어 있음</note>",
      "<note>!!! 프로젝트 카테고리에 따라 항목의 워딩을 변경될 수 있음</note>",
      "<note>!!! 각 변수명 및 타이틀은 설문지에 맞춰서 변경</note>",
      "<note>!!! 중복 선언된 함수가 있을 수 있으니 주의</note>",
      "<exec when=\"init\">",
      "def soft_Err(cond, str, high_rows=[], high_cols=[]):",
      "  if cond :",
      "    if p.chk==0 :",
      "      p.chk=1",
      "    else :",
      "      p.chk=0",
      "      if high_rows :",
      "        for each in high_rows :",
      "          error(str, row=each)",
      "",
      "      elif high_cols :",
      "        for each in high_cols :",
      "          error(str, col=each)",
      "      else :",
      "        error(str)",
      "  else :",
      "    p.chk=1",
      "",
      "def samegrid():",
      "  qid = allQuestions[this.label]",
      "  checkAnswer = [i.label for i in qid.rows if not i.val == None]",
      "  if len(checkAnswer) gt 1 :",
      "    if len(set(qid.val)-set([None])) == 1:",
      "      soft_Err(True, \"%s&lt;br /&gt;%s\"%(res.samegrid, res.softerr))",
      "    else :",
      "      p.chk=1",
      "  else :",
      "    p.chk=1",
      "",
      "def OCEAN_soft_err() :",
      "  group_rows = {x.label: [r for r in this.rows if r.group.label == x.label] for x in this.rows.groups}",
      "",
      "  focus_rows = []",
      "  for gr, rw in group_rows.items() :",
      "    check_sum = sum([this.cols[this.attr(each.label).val].value for each in rw])",
      "    if check_sum in [2, 3, 13, 14] :",
      "      focus_rows = sum([focus_rows, rw], [])",
      "",
      "  if focus_rows :",
      "    soft_Err(focus_rows, res.softerr, high_rows=focus_rows)",
      "  else :",
      "    samegrid()",
      "</exec>",
      "",
      "<block label=\"OCEAN_BLOCK\">",
      "  <radio ",
      "   label=\"OB1\"",
      "   averages=\"cols\"",
      "   shuffle=\"rows,groups\"",
      "   type=\"rating\"",
      "   uses=\"atmtable.6\">",
      "    <title><div class=\"q-name\">OB1</div> OCEAN - OB1</title>",
      "    <alt>OCEAN - OB1</alt>",
      "    <validate>",
      "OCEAN_soft_err()",
      "    </validate>",
      "",
      "    <style arg:autoContinue=\"false\" arg:autoNumber=\"false\" arg:btnDirection=\"row\" arg:disableContinue=\"false\" arg:leftText=\"${res.ocean_left_legend}\" arg:qmode=\"rating\" arg:rightText=\"${res.ocean_right_legend}\" arg:showArrow=\"true\" arg:showGroup=\"false\" copy=\"custom_rating\" name=\"question.after\"/>",
      "    <group label=\"g1\" where=\"none\">Block EXT</group>",
      "    <row label=\"r1\" groups=\"g1\" legend=\"both\" rightLegend=\"사람이 많은 모임이나 파티를 좋아하지 않는다\" value=\"1\">파티나 모임에서 분위기 메이커이다</row>",
      "    <row label=\"r2\" groups=\"g1\" legend=\"both\" rightLegend=\"내가 먼저 대화를 시작한다\" value=\"2\">말을 많이 하지 않는다</row>",
      "    <row label=\"r3\" groups=\"g1\" legend=\"both\" rightLegend=\"좋은 친구 몇 명과 어울리는 것을 선호한다\" value=\"3\">새로운 사람을 만나거나 친구 사귀는 것이 좋다</row>",
      "    <group label=\"g2\" where=\"none\">Block NEU</group>",
      "    <row label=\"r4\" groups=\"g2\" legend=\"both\" rightLegend=\"평정심을 거의 잃지 않는다\" value=\"4\">기분이 좋지 않을 때가 자주 있다</row>",
      "    <row label=\"r5\" groups=\"g2\" legend=\"both\" rightLegend=\"스트레스를 쉽게 받는다\" value=\"5\">거의 언제나 느긋하다</row>",
      "    <row label=\"r6\" groups=\"g2\" legend=\"both\" rightLegend=\"미래에 대해 언제나 긍정적이다\" value=\"6\">최악의 경우에 대한 두려움을 자주 느낀다</row>",
      "    <group label=\"g3\" where=\"none\">Block AGR</group>",
      "    <row label=\"r7\" groups=\"g3\" legend=\"both\" rightLegend=\"다른 사람을 돕는 것을 좋아한다\" value=\"7\">사람들은 혼자 힘으로 자립해야 한다고 믿는다</row>",
      "    <row label=\"r8\" groups=\"g3\" legend=\"both\" rightLegend=\"다른 사람 문제에 대해 관심이 없다\" value=\"8\">다른 사람 기분에 공감한다</row>",
      "    <row label=\"r9\" groups=\"g3\" legend=\"both\" rightLegend=\"나는 인정 많은 사람이다\" value=\"9\">사람들에게 솔직한 것이 최선이라고 생각한다</row>",
      "    <group label=\"g4\" where=\"none\">Block CON</group>",
      "    <row label=\"r10\" groups=\"g4\" legend=\"both\" rightLegend=\"나는 즉흥적이다\" value=\"10\">내가 선택한 길을 고수한다</row>",
      "    <row label=\"r11\" groups=\"g4\" legend=\"both\" rightLegend=\"별로 신경쓰지 않는다\" value=\"11\">디테일에 집중한다</row>",
      "    <row label=\"r12\" groups=\"g4\" legend=\"both\" rightLegend=\"일정을 따르는 것을 좋아한다\" value=\"12\">급하게 계획을 세우는 경우가 자주 있다</row>",
      "    <group label=\"g5\" where=\"none\">Block OPN</group>",
      "    <row label=\"r13\" groups=\"g5\" legend=\"both\" rightLegend=\"상상력이 풍부하지 않다\" value=\"13\">상상력이 활발하다</row>",
      "    <row label=\"r14\" groups=\"g5\" legend=\"both\" rightLegend=\"어려운 주제에 관여하고 싶지 않다\" value=\"14\">복잡한 문제를 해결하는 것을 좋아한다</row>",
      "    <row label=\"r15\" groups=\"g5\" legend=\"both\" rightLegend=\"새롭고 창의적인 아이디어가 가득하다\" value=\"15\">창의적인 아이디어를 만드는데 약하다</row>",
      "    <col label=\"c7\" value=\"7\">(7)</col>",
      "    <col label=\"c6\" value=\"6\">(6)</col>",
      "    <col label=\"c5\" value=\"5\">(5)</col>",
      "    <col label=\"c4\" value=\"4\">(4)</col>",
      "    <col label=\"c3\" value=\"3\">(3)</col>",
      "    <col label=\"c2\" value=\"2\">(2)</col>",
      "    <col label=\"c1\" value=\"1\">(1)</col>",
      "  </radio>",
      "",
      "  <suspend/>",
      "",
      "  <radio ",
      "   label=\"CI1\"",
      "   averages=\"cols\"",
      "   shuffle=\"rows\"",
      "   type=\"rating\"",
      "   uses=\"atmtable.6\">",
      "    <title><div class=\"q-name\">CI1</div> OCEAN - CI1</title>",
      "    <alt>OCEAN - CI1</alt>",
      "    <validate>",
      "samegrid()",
      "    </validate>",
      "",
      "    <style arg:autoContinue=\"false\" arg:autoNumber=\"false\" arg:btnDirection=\"row\" arg:disableContinue=\"false\" arg:leftText=\"${res.ocean_left_legend}\" arg:qmode=\"rating\" arg:rightText=\"${res.ocean_right_legend}\" arg:showArrow=\"true\" arg:showGroup=\"true\" copy=\"custom_rating\" name=\"question.after\"/>",
      "    <row label=\"r1\" legend=\"both\" rightLegend=\"어떤 제과 제품을 선택해야 할지 잘 모르겠다\" value=\"1\">어떤 제과 제품이 나에게 좋은지 알고 있습니다</row>",
      "    <row label=\"r2\" legend=\"both\" rightLegend=\"나는 제과 제품을 매우 까다롭게 고른다\" value=\"2\">대부분의 제과 제품은 비슷하다고 생각한다</row>",
      "    <row label=\"r3\" legend=\"both\" rightLegend=\"나는 다른 카테고리에 비해 제과 제품을 구매할 때 가끔 부담 없이 구매할 수 있다\" value=\"3\">다른 카테고리에 비해 제과 제품을 고를 때 더 신중하다</row>",
      "    <row label=\"r4\" legend=\"both\" rightLegend=\"나는 프리미엄 제과 제품을 위해 추가 비용을 지불할 의향이 있다.\" value=\"4\">나는 예산 범위 내에서 선택할 수 있는 제과 제품을 선호한다</row>",
      "    <row label=\"r5\" legend=\"both\" rightLegend=\"나는 내 취향/상황에 따라 여러 제품을 번갈아 구입한다\" value=\"5\">나는 보통 한 가지 제품만 구입한다</row>",
      "    <col label=\"c5\" value=\"5\">(5)</col>",
      "    <col label=\"c4\" value=\"4\">(4)</col>",
      "    <col label=\"c3\" value=\"3\">(3)</col>",
      "    <col label=\"c2\" value=\"2\">(2)</col>",
      "    <col label=\"c1\" value=\"1\">(1)</col>",
      "  </radio>",
      "",
      "  <suspend/>",
      "",
      "  <radio ",
      "   label=\"BI1\"",
      "   averages=\"cols\"",
      "   shuffle=\"rows\"",
      "   type=\"rating\"",
      "   uses=\"atmtable.6\">",
      "    <title><div class=\"q-name\">BI1</div> OCEAN - BI1</title>",
      "    <alt>OCEAN - BI1</alt>",
      "    <validate>",
      "samegrid()",
      "    </validate>",
      "",
      "    <style arg:autoContinue=\"false\" arg:autoNumber=\"false\" arg:btnDirection=\"row\" arg:disableContinue=\"false\" arg:leftText=\"${res.ocean_left_legend}\" arg:qmode=\"rating\" arg:rightText=\"${res.ocean_right_legend}\" arg:showArrow=\"true\" arg:showGroup=\"true\" copy=\"custom_rating\" name=\"question.after\"/>",
      "    <row label=\"r1\" legend=\"both\" rightLegend=\"제과 제품 브랜드에 크게 신경 쓰지 않는다\" value=\"1\">나는 항상 잘 알려진 브랜드의 제과 제품을 구입한다.</row>",
      "    <row label=\"r2\" legend=\"both\" rightLegend=\"프로모션으로 인해 제과 제품 브랜드 선택이 거의 바뀌지 않는다.\" value=\"2\">나는 프로모션 중인 제과 제품 브랜드만 구매한다.</row>",
      "    <row label=\"r3\" legend=\"both\" rightLegend=\"매번 같은 브랜드의 제과 제품을 구입한다.\" value=\"3\">나는 항상 다른 브랜드의 제과 제품을 구입하게 된다.</row>",
      "    <row label=\"r4\" legend=\"both\" rightLegend=\"제과 제품의 브랜드는 나에게 매우 중요하다.\" value=\"4\">내가 필요한 것을 얻는 한 제과 제품의 브랜드는 중요하지 않다.</row>",
      "    <row label=\"r5\" legend=\"both\" rightLegend=\"나는 매장에서 제과 제품 브랜드를 결정하는 경향이 있다.\" value=\"5\">매장에 가기 전에 어떤 브랜드의 제과 제품을 사야 할지 정확히 알고 있다.</row>",
      "    <col label=\"c5\" value=\"5\">(5)</col>",
      "    <col label=\"c4\" value=\"4\">(4)</col>",
      "    <col label=\"c3\" value=\"3\">(3)</col>",
      "    <col label=\"c2\" value=\"2\">(2)</col>",
      "    <col label=\"c1\" value=\"1\">(1)</col>",
      "  </radio>",
      "",
      "  <suspend/>",
      "",
      "  <radio ",
      "   label=\"PS1\"",
      "   averages=\"cols\"",
      "   shuffle=\"rows\"",
      "   type=\"rating\"",
      "   uses=\"atmtable.6\">",
      "    <title><div class=\"q-name\">PS1</div> OCEAN - PS1</title>",
      "    <alt>OCEAN - PS1</alt>",
      "    <validate>",
      "samegrid()",
      "    </validate>",
      "",
      "    <style arg:autoContinue=\"false\" arg:autoNumber=\"false\" arg:btnDirection=\"row\" arg:disableContinue=\"false\" arg:leftText=\"${res.ocean_left_legend}\" arg:qmode=\"rating\" arg:rightText=\"${res.ocean_right_legend}\" arg:showArrow=\"true\" arg:showGroup=\"true\" copy=\"custom_rating\" name=\"question.after\"/>",
      "    <row label=\"r1\" legend=\"both\" rightLegend=\"저렴한 가격이라면 제과 브랜드가 무엇이든 구매할 것이다\" value=\"1\">제과 제품을 가장 싸게 구입하기 위해 많은 시간을 들인다</row>",
      "    <row label=\"r2\" legend=\"both\" rightLegend=\"제과 제품 가격을 매우 잘 알고 있다\" value=\"2\">제과 제품 가격에 대해 전혀 모른다</row>",
      "    <row label=\"r3\" legend=\"both\" rightLegend=\"제과 제품 구입 시 가격비교를 거의 하지 않는다\" value=\"3\">제과 제품 구입 전 여러 브랜드 가격을 항상 비교한다</row>",
      "    <row label=\"r4\" legend=\"both\" rightLegend=\"프로모션 때문에 제과 브랜드 선택이 달라지지 않는다\" value=\"4\">프로모션을 하는 제과 제품 브랜드만 구입한다</row>",
      "    <col label=\"c5\" value=\"5\">(5)</col>",
      "    <col label=\"c4\" value=\"4\">(4)</col>",
      "    <col label=\"c3\" value=\"3\">(3)</col>",
      "    <col label=\"c2\" value=\"2\">(2)</col>",
      "    <col label=\"c1\" value=\"1\">(1)</col>",
      "  </radio>",
      "",
      "  <suspend/>",
      "</block>",
      "",
      "<suspend/>"
    ],
    "description": "Module Questions/OCEAN"
  },

  "OfflineScreenout_Snippet": {
    "prefix": "scr.off",
    "body": [
      "<validate>",
      "scrErr(${1:[COND]})",
      "</validate>",
      "",
      "<exec>",
      "status(${1:[COND]}, \"${2:[QID]}\")",
      "</exec>",
      "",
      "<term label=\"${2:[QID]}_Term\" cond=\"${1:[COND]}\">${2:[QID]} term</term>",
      "",
      "<suspend/>",
      "",
      "${0:<row label=\"${2:[QID]}\" value=\"${3:[TAB3]}\">${2:[QID]} ScreenOut</row>}"
    ],
    "description": "Offline/OfflineScreenout"
  },

  "OfflineScreenoutError_Snippet": {
    "prefix": "off.err",
    "body": ["def scrErr(cond) :", "  if cond :", "    error(res.chk_plz)"],
    "description": "Offline/OfflineScreenoutError"
  },

  "PasswordDef_Snippet": {
    "prefix": "password.def",
    "body": [
      "<res label=\"invalid_password\">잘못된 패스워드입니다. 확인 부탁드립니다.</res>",
      "",
      "def password_check(password) :",
      "  if not str(this.val) == str(password) :",
      "    error(res.invalid_password)"
    ],
    "description": "Offline/PasswordDef"
  },

  "PasswordQuestion_Snippet": {
    "prefix": "password",
    "body": [
      "<text",
      "  label=\"${1:[QID]}\"",
      "  size=\"40\"",
      "  optional=\"0\">",
      "  <title><div class=\"comment-box\">${2:[TITLE]}</div></title>",
      "<style name='el.text'> <![CDATA[",
      "\\@if row.styles.ss.preText or this.styles.ss.preText",
      "    \\${row.styles.ss.preText or this.styles.ss.preText or \"\"}&nbsp;",
      "\\@endif",
      "<div style=\"width: 110px; display: flex; flex-direction: row; justify-content: center;\">",
      "  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\" style=\"width:30px; margin:0 auto;\">",
      "      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />",
      "  </svg>",
      "  <input type=\"password\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"\\$(value)\" class=\"input text-input\" \\$(extra) style=\"width:80px\"/>",
      "</div>",
      "\\@if row.styles.ss.postText or this.styles.ss.postText",
      "    &nbsp;\\${row.styles.ss.postText or this.styles.ss.postText or \"\"}",
      "\\@endif",
      "]]></style>",
      "  <validate>",
      "password_check(${3:[PASSWORD]})",
      "  </validate>",
      "</text>",
      "<suspend/>"
    ],
    "description": "Offline/PasswordQuestion"
  },

  "RespData_Snippet": {
    "prefix": "respdata",
    "body": [
      "<text",
      "  label=\"RespData\"",
      "  size=\"40\"",
      "  optional=\"0\">",
      "  <title><strong>응답자 정보</strong></title>",
      "  <comment></comment>",
      "<style name='el.text' rows=\"name\"> <![CDATA[",
      "<div style=\"display: flex; flex-direction: row;\">",
      "  <div>",
      "    <span class=\"f-highlight\">",
      "      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" style=\"width:25px; margin:0 auto;\">",
      "        <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clip-rule=\"evenodd\" />",
      "      </svg>",
      "    </span>",
      "  </div>",
      "  <div>",
      "    <input type=\"text\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"\\$(value)\" size=\"\\$(size)\" class=\"input text-input\" \\$(extra) placeholder=\"\\${row.styles.ss.preText or this.styles.ss.preText or ''}\"/>",
      "  </div>",
      "</div>",
      "]]></style>",
      "<style name='el.text' rows=\"phone\"> <![CDATA[",
      "<div style=\"display: flex; flex-direction: row;\">",
      "  <div>",
      "    <span class=\"f-highlight\">",
      "      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" style=\"width:25px; margin:0 auto;\">",
      "        <path fill-rule=\"evenodd\" d=\"M7 2a2 2 0 00-2 2v12a2 2 0 002 2h6a2 2 0 002-2V4a2 2 0 00-2-2H7zm3 14a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />",
      "      </svg>",
      "    </span>",
      "  </div>",
      "  <div>",
      "    <input type=\"text\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"\\$(value)\" size=\"\\$(size)\" class=\"input text-input\" \\$(extra) placeholder=\"\\${row.styles.ss.preText or this.styles.ss.preText or ''}\"/>",
      "  </div>",
      "</div>",
      "]]></style>",
      "<style name='el.text' rows=\"address\"> <![CDATA[",
      "<div style=\"display: flex; flex-direction: row;\">",
      "  <div>",
      "    <span class=\"f-highlight\">",
      "      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" style=\"width:25px; margin:0 auto;\">",
      "        <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />",
      "      </svg>",
      "    </span>",
      "  </div>",
      "  <div>",
      "    <input type=\"text\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"\\$(value)\" size=\"\\$(size)\" class=\"input text-input\" \\$(extra) placeholder=\"\\${row.styles.ss.preText or this.styles.ss.preText or ''}\"/>",
      "  </div>",
      "</div>",
      "]]></style>",
      "<style name=\"el.text\" rows=\"interviewer\"><![CDATA[",
      "  <div style=\"display: flex; flex-direction: row;\">",
      "    <div>",
      "      <span class=\"f-highlight\">",
      "        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" style=\"width:25px; margin:0 auto;\">",
      "          <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />",
      "          <path fill-rule=\"evenodd\" d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" clip-rule=\"evenodd\" />",
      "        </svg>",
      "      </span>",
      "    </div>",
      "    <div>",
      "      <input type=\"text\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"\\$(value)\" size=\"\\$(size)\" class=\"input text-input\" \\$(extra) placeholder=\"\\${row.styles.ss.preText or this.styles.ss.preText or ''}\"/>",
      "    </div>",
      "  </div>",
      "]]></style>",
      "  <row label=\"name\" ss:preText=\"이름\"/>",
      "  <row label=\"phone\" verify=\"number\" ss:preText=\"전화번호\"/>",
      "  <row label=\"address\" ss:preText=\"주소\"/>",
      "  <row label=\"interviewer\" ss:preText=\"면접원 이름\"/>",
      "</text>",
      "<suspend/>"
    ],
    "description": "Offline/RespData"
  },

  "BadTextValidate_Snippet": {
    "prefix": "badtext",
    "body": [
      "def badtext() :",
      "  text_answer = [unicode(i, 'utf-8').replace(\" \",\"\") for i in this.values if not i==None]",
      "  badhan = (res.badhan)",
      "  badhan = [unicode(t, 'utf-8') for t in badhan.split(',')]",
      "",
      "  badspa = (res.badspa)",
      "  badspa = [unicode(t, 'utf-8') for t in badspa.split(',')]",
      "",
      "",
      "  for ans in text_answer :",
      "    ans_len=len(ans)",
      "    for j in range(0, ans_len) :",
      "      if ans[j] in badhan :",
      "        if decLang == 'korean' or LQ.korean :",
      "         error(res.badhan_err)",
      "",
      "      if ans[j] in badspa :",
      "        error(res.badspa_err)"
    ],
    "description": "PythonLibrary/BadTextValidate"
  },

  "CheckDuplicatesValidate_Snippet": {
    "prefix": "checkdupe",
    "body": [
      "def checkDuplicates(Qid) :",
      "  # before Q",
      "  Arr=[]",
      "  ",
      "  # Curret Q",
      "  Brr=[]",
      "  ",
      "  # Label Array",
      "  Crr=[]",
      "  ",
      "  vls=allQuestions[Qid].values",
      "",
      "  for i in vls:",
      "    if not i == None :",
      "      Arr.append(i.upper())",
      "      Crr.append(i)",
      "",
      "  for j in this.values:",
      "    if not j == None :",
      "      Brr.append(j.upper())",
      "",
      "",
      "  if len(Arr) gt 0 and len(Brr) gt 0:",
      "    if (Brr[0]!=\"\"):",
      "      for i in range(0,len(Brr)):",
      "        preText=Brr[i]",
      "        for j in range(0,len(Arr)):",
      "          currentText=Arr[j]",
      "          if preText!=\"\" and currentText!=\"\":",
      "            if preText==currentText:",
      "              errstr=Crr[j]+'-'+res.err2050",
      "              error(errstr)",
      "              break"
    ],
    "description": "PythonLibrary/CheckDuplicatesValidate"
  },

  "CheckOpenValidate_Snippet": {
    "prefix": "checkopen",
    "body": [
      "def checkOpen():",
      "  str_1=res.err2010",
      "  str_2=res.err2011",
      "  str_3=res.err2012",
      "",
      "  set_list=[]",
      "  ",
      "  vals=[i.val for i in this.rows if not i.val == None]",
      "  for s in vals:",
      "    if s != \"\" :",
      "      flag=True",
      "      set_list.append(s.upper())",
      "",
      "",
      "  if not set_list :",
      "    error(str_1)",
      "  else :",
      "    for j in range(0,len(set_list)-1):",
      "        preval=this.rows[j].val",
      "        st=j+1",
      "        for i in range(st,len(set_list)):",
      "            postval=this.rows[i].val",
      "            if preval != \"\" and postval != \"\" :",
      "              if preval==postval:",
      "                  error(str_2)",
      "",
      "    for k in range(0,len(set_list)):",
      "      if this.rows[k].val==\"\":",
      "        error(str_3)"
    ],
    "description": "PythonLibrary/CheckOpenValidate"
  },

  "Date_Snippet": {
    "prefix": "datetime",
    "body": [
      "import datetime",
      "now = datetime.datetime.now()",
      "cYear=int(now.year)",
      "cMonth=int(now.month)",
      "cDay=int(now.day)",
      "cHour=int(now.hour)",
      "cHour=cHour-1",
      "cMinute=int(now.minute)",
      "cSecond=int(now.second)"
    ],
    "description": "PythonLibrary/Date"
  },

  "DatFileToDict_Snippet": {
    "prefix": "dat.dict",
    "body": [
      "def dat_to_dict(file_name, unique_col_name) :",
      "  try :",
      "    f = open(\"%s/%s\"%(gv.survey.path, file_name))",
      "    lines = f.readlines()",
      "    col_name = [each.strip() for each in lines[0].strip('\r\n').split('\t')]",
      "",
      "    if not unique_col_name in col_name :",
      "      raise ValueError('unique_col_name is not in col_name')",
      "",
      "    if not len(col_name) == len(set(col_name)) :",
      "      raise ValueError('There are duplicate variables in dat file')",
      "",
      "    set_list = [{col_name[idx]: d if not d == '' else None for idx, d in enumerate(each.strip('\r\n').split('\t')) } for each in lines[1:]]",
      "",
      "    set_dict = {}",
      "    for each in set_list :",
      "      copy_each = each.copy()",
      "      key_id = copy_each[unique_col_name]",
      "      del copy_each[unique_col_name]",
      "",
      "      if key_id in set_dict :",
      "        raise ValueError('There are duplicate values in unique ID')",
      "        break",
      "",
      "      set_dict[key_id] = copy_each",
      "",
      "    return set_dict",
      "",
      "  except ValueError as e:",
      "    print('ERROR : %s'%(str(e)))",
      "    return {}"
    ],
    "description": "PythonLibrary/DatFileToDict"
  },

  "DatFileToList_Snippet": {
    "prefix": "dat.list",
    "body": [
      "def dat_to_list(file_name) :",
      "  try :",
      "    f = open(\"%s/%s\"%(gv.survey.path, file_name))",
      "    lines = f.readlines()",
      "    col_name = [each.strip() for each in lines[0].strip('\r\n').split('\t')]",
      "    set_list = [{col_name[idx]: d if not d == '' else None for idx, d in enumerate(each.strip('\r\n').split('\t')) } for each in lines[1:]]",
      "",
      "    return set_list",
      "  except IOError:",
      "    return []"
    ],
    "description": "PythonLibrary/DatFileToList"
  },

  "DisabledControl_Snippet": {
    "prefix": "disabled.control",
    "body": [
      "def reset_disabled(question) :",
      "  for each in question.rows :",
      "    each.disabled = False",
      "",
      "def disabled_labels(question, condition, *labels) :",
      "  if condition :",
      "    for label in labels :",
      "      question.attr(label).disabled = True",
      "  else :",
      "    for label in labels :",
      "      question.attr(label).disabled = False"
    ],
    "description": "PythonLibrary/DisabledControl"
  },

  "DontAnswerNumber_Snippet": {
    "prefix": "dont.num",
    "body": [
      "def number_answer_error() :",
      "  for each in this.rows :",
      "    if each.unsafe_val.isdigit() :",
      "      error(res.chk_plz, row=each)"
    ],
    "description": "PythonLibrary/DontAnswerNumber"
  },

  "GetQuota_Snippet": {
    "prefix": "get.quota",
    "body": ["quotas = gv.survey.root.quota.getQuotaCells()"],
    "description": "PythonLibrary/GetQuota"
  },

  "GetUuidLoadRecord_Snippet": {
    "prefix": "get.uuid",
    "body": [
      "<text ",
      "  label=\"RawID\"",
      "  size=\"40\"",
      "  where=\"execute,survey,report\">",
      "  <title>(HIDDEN) Get uuid : Only Online Panel Survey</title>",
      "  <exec>",
      "panel_list = {",
      "  '11' : 'eid',",
      "  '2' : 'gid',",
      "  '9' : 'UID',",
      "  '12' : 'seq',",
      "  '13' : 'dsid',",
      "  '105' : 'psid',",
      "}",
      "",
      "if list in panel_list.keys() :",
      "  panel_label = panel_list[list]",
      "  rec = loadRecord(\"selfserve/548/${1:[TAB1]}\", panel_label, eval(panel_label))",
      "  if rec:",
      "    RawID.val = rec.panelist_param.val",
      "  </exec>",
      "",
      "</text>",
      "",
      "<suspend/>"
    ],
    "description": "PythonLibrary/GetUuidLoadRecord"
  },

  "GetVerify_Snippet": {
    "prefix": "get.verify",
    "body": [
      "# example",
      "# minv, masv = get_verify(Q1)",
      "def get_verify(qid) :",
      "  [verify] = re.findall('\\(([^)]+)', qid.o.verify)",
      "  minv, maxv = map(lambda x : int(x), verify.split(\",\"))",
      "",
      "  return [minv, maxv]",
      "",
      "def get_placeholder(qid) :",
      "    minv, maxv = get_verify(qid)",
      "    return '%s-%s'%(minv, maxv)"
    ],
    "description": "PythonLibrary/GetVerify"
  },

  "GroupRowsDef_Snippet": {
    "prefix": "group.rows",
    "body": [
      "def group_rows(question, grouped_rows):",
      "    first_item_index = None",
      "",
      "    shuffle_order = [row.index for row in question.rows.order]",
      "",
      "    for index, row in enumerate( shuffle_order ):",
      "        if question.rows[row].label in grouped_rows:",
      "            if first_item_index == None:",
      "                first_item_index = index",
      "            else:",
      "                # As we continue iterating through the shuffle order",
      "                # each time we reach a row that is in the set of",
      "                # rows to be grouped together, increment our index",
      "                # value and move this row into the new position",
      "                first_item_index += 1",
      "                shuffle_order.insert( first_item_index, shuffle_order.pop(index) )",
      "",
      "    question.rows.order = shuffle_order"
    ],
    "description": "PythonLibrary/GroupRowsDef"
  },

  "HangleLengthDef_Snippet": {
    "prefix": "oe.len",
    "body": [
      "def oe_length(num) :",
      "  txt = str(this.unsafe_val).replace(' ', '')",
      "  utxt = unicode(txt, 'utf-8') ",
      "  curr_val = len(utxt)",
      "  ",
      "  if num gt curr_val :",
      "    error(this.lget(\"lenAtLeast\", min=num, count=curr_val))"
    ],
    "description": "PythonLibrary/HangleLengthDef"
  },

  "HtmlListTagSettingDefine_Snippet": {
    "prefix": "html.list",
    "body": [
      "<exec when=\"init\">",
      "def set_ol(li_list=[], ol_type=1):",
      "  # ol type = 1(default), 'a', 'A', 'i', 'I'",
      "",
      "  if not ol_type in [1, 'a', 'A', 'i', 'I'] :",
      "    return \"OL TYPE ERROR\"",
      "",
      "  if not li_list :",
      "    return \"LI UNDEFINED\"",
      "",
      "  ol = \"&lt;ol type=\"%s\"&gt;%s&lt;/ol&gt;\"",
      "  li = \"&lt;li&gt;%s&lt;/li&gt;\"",
      "",
      "  lis = [li%(each) for each in li_list]",
      "",
      "  f_ol = ol%(str(ol_type), ''.join(lis))",
      "  return f_ol",
      "",
      "def set_ul(li_list=[]) :",
      "  ul = \"&lt;ul&gt;%s&lt;/ul&gt;\"",
      "  li = \"&lt;li&gt;%s&lt;/li&gt;\"",
      "",
      "  if not li_list :",
      "    return \"LI UNDEFINED\"",
      "",
      "  lis = [li%(each) for each in li_list]",
      "  f_ul = ul%(''.join(lis))",
      "  return f_ul",
      "</exec>"
    ],
    "description": "PythonLibrary/HtmlListTagSettingDefine"
  },

  "IsAll_Snippet": {
    "prefix": "isall",
    "body": ["isall(${1:[QID]}, [$0])"],
    "description": "PythonLibrary/IsAll"
  },

  "IsIn_Snippet": {
    "prefix": "isin",
    "body": ["isin(${1:[QID]}, [$0])"],
    "description": "PythonLibrary/IsIn"
  },

  "IsIn_IsAll_Snippet": {
    "prefix": "is",
    "body": [
      "def isin(qid, codes, base_label='r') :",
      "  return any(getattr(qid, '%s%d'%(base_label, x)) for x in codes)",
      "",
      "def isall(qid, codes, base_label='r') :",
      "  return all(getattr(qid, '%s%d'%(base_label, x)) for x in codes)"
    ],
    "description": "PythonLibrary/IsIn_IsAll"
  },

  "LoadRecord_Snippet": {
    "prefix": "rec",
    "body": [
      "rec = loadRecord(\"selfserve/548/${1:[PID]}\", \"${2:[KEY]}\", ${2:[KEY]})",
      "if rec:",
      "  $0"
    ],
    "description": "PythonLibrary/LoadRecord"
  },

  "NumberComma_Snippet": {
    "prefix": "comma",
    "body": ["'{:,}'.format(${1:[NUM]})"],
    "description": "PythonLibrary/NumberComma"
  },

  "QuotaControl_Snippet": {
    "prefix": "quota.control",
    "body": [
      "def quota_control(quota_sheet, unfied_define_label=\"R\", defines=[]) :",
      "    # exmaple",
      "    # quota_sheet : \"/HQ15_Quotas\"",
      "    # unfied_define_label = \"HQ15R\" | \"Q1R\" ",
      "    # defines : It's a list  | [1, 2, 3]",
      "    # unfied_define_label=\"\", defines=[\"male\", \"female\"]",
      "",
      "    quotas = gv.survey.root.quota.getQuotaCells()",
      "",
      "    if len(defines) == 1 :",
      "        print('!!! Defines has only one property !!!')",
      "        quota_cell = \"%s/%s%s\"%(quota_sheet, unfied_define_label, defines[0])",
      "        current, limit, overquota = quotas[quota_cell]",
      "",
      "        if (limit == 0) or (current ge limit):",
      "            return None",
      "        else :",
      "            return defines[0]",
      "    try :",
      "        cells = {}",
      "        for define in defines :",
      "            quota_cell = \"%s/%s%s\"%(quota_sheet, unfied_define_label, define)",
      "            cells[define] = quota_cell",
      "",
      "        if cells :",
      "            print(cells)",
      "            # check quota cell limit or Overquota",
      "            checked_cells = {}",
      "            for define, cell in cells.items() :",
      "                current, limit, overquota = quotas[cell]",
      "",
      "                if limit == 0 :",
      "                    continue",
      "                elif current ge limit :",
      "                    continue",
      "                else :",
      "                    checked_cells[define] = {\"cell\" : cell, \"current\": current, \"limit\": limit, \"overquota\": overquota}",
      "",
      "            if checked_cells :",
      "                print(checked_cells)",
      "",
      "                keys = checked_cells.keys()",
      "                keys_len = len(keys)",
      "",
      "                if keys_len gt 1 :",
      "                    current_by_key = [(key, value[\"cell\"], value[\"current\"]) for key, value in checked_cells.items()]",
      "                    currents = [k[2] for k in current_by_key]",
      "",
      "                    min_current = min(currents)",
      "",
      "                    final_cells = [k for k in current_by_key if k[2] == min_current]",
      "",
      "                    print(final_cells)",
      "",
      "                    fc_len = len(final_cells)",
      "                    return_value = None",
      "",
      "                    if fc_len gt 1 :",
      "                        print(\"Random Assignment Among Insufficient Cells\")",
      "                        random_cell = random.choice(final_cells)",
      "                        return_value = random_cell[0]",
      "",
      "                    else :",
      "                        print(\"Assign to Insufficient Cells\")",
      "                        return_value = final_cells[0][0]",
      "",
      "                    if not return_value == None :",
      "                        print(\"Cell : %s / define : %s\"%( checked_cells[return_value][\"cell\"], return_value ))",
      "                        return return_value",
      "                    else :",
      "                        print(\"return_value is identified\")",
      "                        return None",
      "",
      "                else :",
      "                    return_value = keys[0]",
      "                    print(\"One cell is identified\")",
      "                    print(\"Cell : %s / define : %s\"%( checked_cells[return_value][\"cell\"], return_value ))",
      "                    return return_value",
      "",
      "            else :",
      "                print(\"!!! checked_cells is not verified !!!\")",
      "                return None",
      "",
      "        else :",
      "            print(\"!!! cells is empty !!!\")",
      "            return None",
      "    except :",
      "        print(\"!!! An error has occurred !!!\")",
      "        return None"
    ],
    "description": "PythonLibrary/QuotaControl"
  },

  "RankAbleAnswerCount_Snippet": {
    "prefix": "rank.cnt",
    "body": [
      "def rankCnt(this_qid) :",
      "  show_cols = [eachCol for eachCol in this_qid.cols if eachCol.displayed]",
      "  return len(show_cols)"
    ],
    "description": "PythonLibrary/RankAbleAnswerCount"
  },

  "RowImageSetting_Snippet": {
    "prefix": "row.img",
    "body": [
      ".card-img {",
      "  display: flex;",
      "  flex-direction: column;",
      "  gap: 5px;",
      "  align-items: center;",
      "  justify-content: center;",
      "}",
      "",
      ".card-img p {",
      "  width: 100%;",
      "  text-align: center;",
      "}",
      "",
      ".card-img img {",
      "  width: 100%;",
      "}",
      "",
      ".f-highlight .card-img {",
      "  display: inline!important;",
      "}",
      "",
      ".f-highlight .card-img p {",
      "  display: inline-block!important;",
      "  width:unset!important;",
      "  text-align:unset!important;",
      "}",
      "",
      ".f-highlight .card-img img {",
      "  display: none!important;",
      "}",
      "",
      "",
      "<res label=\"img_div\"><div class=\"card-img\"><p>%s</p><p><img src=\"%s\"/></p></div></res>",
      "",
      "def row_img_setting(qid, text_base, base_path, diff_value=[], img_format=\"png\", img_class=\"row-element-img\", img_div=None) :",
      "  for x in qid.rows :",
      "    if (x.value in diff_value) or (not x.displayed):",
      "      continue",
      "",
      "    img_path = \"%s/%s.%s\"%(base_path, x.value, img_format)",
      "    div = res.img_div if img_div is None else img_div",
      "    x.text = div%(text_base.attr(x.label).text, img_path)",
      "    ",
      "    if img_class is not None :",
      "      class_names = x.styles.ss.rowClassNames",
      "      if class_names is None :",
      "        x.styles.ss.rowClassNames = img_class",
      "      ",
      "      elif not img_class in class_names :",
      "        x.styles.ss.rowClassNames = \"%s %s\"%(class_names, img_class)"
    ],
    "description": "PythonLibrary/RowImageSetting"
  },

  "SameGridCountHandler_Snippet": {
    "prefix": "samegrid.cnt",
    "body": [
      "<res label=\"same_cnt_err\">동일한 응답을 %d개 연속으로 응답할 수 없습니다.</res>",
      "",
      "def grid_same_answer(max_cnt) :",
      "  cnt = 0",
      "  order_row = this.rows.order",
      "  error_row = []",
      "  for idx, eachRow in enumerate(order_row) :",
      "    chk_rows = order_row[idx:idx+max_cnt]",
      "    if len(chk_rows) lt max_cnt :",
      "      continue",
      "",
      "    chk_value = set([this.cols[each.val].label for each in chk_rows])",
      "    if len(chk_value) == 1 :",
      "      error_row.append(chk_rows)",
      "",
      "  high_err = sum(error_row, [])",
      "  if high_err :",
      "    for eachRow in high_err :",
      "      error(res.same_cnt_err%(max_cnt), row=eachRow)"
    ],
    "description": "PythonLibrary/SameGridCountHandler"
  },

  "SameGridValidate_Snippet": {
    "prefix": "samegrid",
    "body": [
      "def samegrid():",
      "  qid = allQuestions[this.label]",
      "  checkAnswer = [i.label for i in qid.rows if not i.val == None]",
      "  if len(checkAnswer) gt 1 :",
      "    if len(set(qid.val)-set([None])) == 1:",
      "      soft_Err(True, \"%s&lt;br /&gt;%s\"%(res.samegrid, res.softerr))",
      "    else :",
      "      p.chk=1",
      "  else :",
      "    p.chk=1"
    ],
    "description": "PythonLibrary/SameGridValidate"
  },

  "SoftErrorValidate_Snippet": {
    "prefix": "soft.err",
    "body": [
      "def soft_Err(cond, str, high_rows=[], high_cols=[]):",
      "  if cond :",
      "    if p.chk==0 :",
      "      p.chk=1",
      "    else :",
      "      p.chk=0",
      "      if high_rows :",
      "        for each in high_rows :",
      "          error(str, row=each)",
      "",
      "      elif high_cols :",
      "        for each in high_cols :",
      "          error(str, col=each)",
      "      else :",
      "        error(str)",
      "  else :",
      "    p.chk=1"
    ],
    "description": "PythonLibrary/SoftErrorValidate"
  },

  "TypingTool_Snippet": {
    "prefix": "typing.tool",
    "body": [
      "<exec when=\"init\">",
      "def algorithmSetup(fname, fDelimiter=\"\t\"):",
      "    try:",
      "        f = open(\"%s/%s\" % (gv.survey.path, fname))",
      "        algObj = [ line.strip(\"\r\n\").split(fDelimiter) for line in f.readlines() ]",
      "",
      "        algorithmObj = {}",
      "",
      "        #Number of Segments",
      "        algorithmObj['segments'] = len(algObj[0])",
      "",
      "        #Create segment:[coefficient + constant]",
      "        for s in range(algorithmObj['segments']):",
      "            algorithmObj[s+1] = [float(row[s]) for row in algObj[1:]]",
      "",
      "        return algorithmObj",
      "    except IOError:",
      "        algorithmObj = {}",
      "    return algorithmObj",
      "",
      "def algorithmCalculation(resp_answers, segment_coeff):",
      "    return sum(i*j for i,j in zip(resp_answers, segment_coeff)) + segment_coeff[-1]",
      "",
      "def algorithmRaw(answers, algorithmObj):",
      "    computation = [ algorithmCalculation(answers, algorithmObj[c]) for c in range(1, algorithmObj['segments'] + 1) ]",
      "    return computation",
      "",
      "def algorithmCompute(answers, algorithmObj):",
      "    computation = [ algorithmCalculation(answers, algorithmObj[c]) for c in range(1, algorithmObj['segments'] + 1) ]",
      "    maxValue = max(computation)",
      "    return computation.index(maxValue) + 1",
      "",
      "",
      "myalg = algorithmSetup(\"${1:[DAT_FILE]}.dat\")",
      "</exec>",
      "",
      "<suspend/>",
      "",
      "<exec>",
      "p.resp_answers = [row.map(c1=1, c2=2, c3=3, c4=4, c5=5) for row in ${2:[QID]}.rows]",
      "print \"Participant Answers: %s\" % p.resp_answers",
      "",
      "#Populate the Raw Calculations",
      "for i,x in enumerate(algorithmRaw(p.resp_answers, myalg)):",
      "    ${2:[QID]}_RAW.rows[i].val = str(x)",
      "",
      "#Populate the Segment Assigned",
      "${2:[QID]}_SEG.val = algorithmCompute(p.resp_answers, myalg) - 1",
      "</exec>",
      "",
      "<define label=\"${2:[QID]}_seg_list\">",
      "${3:[DEFILE_LIST]}",
      "</define>",
      "",
      "<text ",
      "label=\"${2:[QID]}_RAW\"",
      "size=\"40\"",
      "where=\"execute,survey,notdp\">",
      "  <title>(HIDDEN) Typing Tool RAW</title>",
      "  <insert source=\"${2:[QID]}_seg_list\"/>",
      "</text>",
      "",
      "<radio ",
      "label=\"${2:[QID]}_SEG\"",
      "optional=\"1\"",
      "where=\"execute,survey,report\">",
      "  <title>(HIDDEN) Typing Tool SEG</title>",
      "  <insert source=\"${2:[QID]}_seg_list\"/>",
      "</radio>",
      "",
      "<suspend/>",
      "",
      "$0"
    ],
    "description": "PythonLibrary/TypingTool"
  },

  "Rank2_Snippet": {
    "prefix": "rk2",
    "body": [
      "<radio ",
      "  label=\"${1:[QID]}\"",
      "  grouping=\"cols\"",
      "  shuffle=\"rows\"",
      "  unique=\"1\"",
      "  ss:questionClassNames=\"niq-rk-question sp-custom-btn\">",
      "  <title><div class=\"q-name\">${1:[QID]}</div> ${2:TITLE]}</title>",
      "  <style copy=\"custom_rank\" arg:autoClick=\"true\" arg:autoContinue=\"false\" arg:colCnt=\"${3:1}\" arg:ableNone=\"${5:1}\" arg:noneLabel=\"${6:null}\" arg:showAnswers=\"true\" arg:ableSort=\"true\" arg:showGroups=\"false\" arg:toggle=\"false\" arg:showCnt=\"true\" name=\"question.after\"/>",
      "  <col label=\"c1\">1순위</col>",
      "  <col label=\"c2\">2순위</col>",
      "  $0",
      "  ${4:<row label=\"r99\" okUnique=\"1\" randomize=\"0\" ss:rowClassNames=\"exclusive\" value=\"99\">없음</row>}",
      "</radio>",
      "",
      "<suspend/>"
    ],
    "description": "RankQuestion/Rank2"
  },

  "Rank3_Snippet": {
    "prefix": "rk3",
    "body": [
      "<radio ",
      "  label=\"${1:[QID]}\"",
      "  grouping=\"cols\"",
      "  shuffle=\"rows\"",
      "  unique=\"1\"",
      "  ss:questionClassNames=\"niq-rk-question sp-custom-btn\">",
      "  <title><div class=\"q-name\">${1:[QID]}</div> ${2:[TITLE]}</title>",
      "  <style copy=\"custom_rank\" arg:autoClick=\"true\" arg:autoContinue=\"false\" arg:colCnt=\"${3:1}\" arg:ableNone=\"${5:1}\" arg:noneLabel=\"${6:null}\" arg:showAnswers=\"true\" arg:ableSort=\"true\" arg:showGroups=\"false\" arg:toggle=\"false\" arg:showCnt=\"true\" name=\"question.after\"/>",
      "  <col label=\"c1\">1순위</col>",
      "  <col label=\"c2\">2순위</col>",
      "  <col label=\"c3\">3순위</col>",
      "  $0",
      "  ${4:<row label=\"r99\" okUnique=\"1\" randomize=\"0\" ss:rowClassNames=\"exclusive\" value=\"99\">없음</row>}",
      "</radio>",
      "",
      "<suspend/>"
    ],
    "description": "RankQuestion/Rank3"
  },

  "Rank5_Snippet": {
    "prefix": "rk5",
    "body": [
      "<radio ",
      "  label=\"${1:[QID]}\"",
      "  grouping=\"cols\"",
      "  shuffle=\"rows\"",
      "  unique=\"1\"",
      "  ss:questionClassNames=\"niq-rk-question sp-custom-btn\">",
      "  <title><div class=\"q-name\">${1:[QID]}</div> ${2:[TITLE]}</title>",
      "  <style copy=\"custom_rank\" arg:autoClick=\"true\" arg:autoContinue=\"false\" arg:colCnt=\"${3:1}\" arg:ableNone=\"${5:1}\" arg:noneLabel=\"${6:null}\" arg:showAnswers=\"true\" arg:ableSort=\"true\" arg:showGroups=\"false\" arg:toggle=\"false\" arg:showCnt=\"true\" name=\"question.after\"/>",
      "  <col label=\"c1\">1순위</col>",
      "  <col label=\"c2\">2순위</col>",
      "  <col label=\"c3\">3순위</col>",
      "  <col label=\"c4\">4순위</col>",
      "  <col label=\"c5\">5순위</col>",
      "  $0",
      "  ${4:<row label=\"r99\" okUnique=\"1\" randomize=\"0\" ss:rowClassNames=\"exclusive\" value=\"99\">없음</row>}",
      "</radio>",
      "",
      "<suspend/>"
    ],
    "description": "RankQuestion/Rank5"
  },

  "RankExclusiveCheck_Snippet": {
    "prefix": "rk.chk",
    "body": [
      "def rank_exclusive_chk(okUnique=[]) :",
      "  if okUnique :",
      "    this_cols = [each for each in this.cols]",
      "    this_cols.reverse()",
      "    for idx, each_col in enumerate(this_cols[:-1]) :",
      "      nxt_col = this_cols[idx+1]",
      "      for u in okUnique :",
      "        if not getattr(each_col, u) and getattr(nxt_col, u) :",
      "          error(res.chk_plz, col=each_col)"
    ],
    "description": "RankQuestion/RankExclusiveCheck"
  },

  "RankNone_Snippet": {
    "prefix": "rk.none",
    "body": [
      "<row label=\"r$0\" randomize=\"0\" value=\"$0\" okUnique=\"1\">없음</row>"
    ],
    "description": "RankQuestion/RankNone"
  },

  "RankNoneHandler_Snippet": {
    "prefix": "rank.none.handler",
    "body": [
      "<res label=\"rank_none_err\">You can't respond with None.</res>",
      "",
      "def rank_none_answer_chk(none_label='r99', labels=['c1']) :",
      "  for eachCol in labels :",
      "    if getattr(this.attr(eachCol), none_label) :",
      "      error(res.rank_none_err, col=this.attr(eachCol), row=this.attr(none_label))",
      "",
      "  for idx, eachCol in enumerate(this.cols) :",
      "    if idx == 0 : continue",
      "    before_col = this.cols[idx-1]",
      "    if eachCol.any and not getattr(eachCol, none_label) and getattr(before_col, none_label) :",
      "      error(res.chk_plz, col=eachCol)",
      "      error(res.chk_plz, col=before_col, row=this.attr(none_label))"
    ],
    "description": "RankQuestion/RankNoneHandler"
  },

  "RateBaseRank_Snippet": {
    "prefix": "rate.rank",
    "body": [
      "<define label=\"${1:[DEFINE_LIST]}\">",
      "$0",
      "</define>",
      "",
      "<radio",
      "  label=\"${2:[QID1]}\"",
      "  shuffle=\"rows\"",
      "  uses=\"atmtable.6\">",
      "  <alt></alt>",
      "  <title><div class=\"q-name\">${2:[QID1]}</div> ${4:[QID1_TITLE]}</title>",
      "  <comment></comment>",
      "  <exec>",
      "base = ${2:[QID1]}",
      "# base.rows.order = [x.index for x in base.rows]",
      "  </exec>",
      "  <style copy=\"custom_rating\" arg:qmode=\"rating\" arg:autoContinue=\"false\" arg:autoNumber=\"true\" arg:btnDirection=\"row\" arg:leftText=\"\" arg:rightText=\"\" arg:showArrow=\"false\" arg:showGroup=\"true\" name=\"question.after\"/>",
      "  <col label=\"c1\" value=\"1\">(1)</col>",
      "  <col label=\"c2\" value=\"2\">(2)</col>",
      "  <col label=\"c3\" value=\"3\">(3)</col>",
      "  <col label=\"c4\" value=\"4\">(4)</col>",
      "  <col label=\"c5\" value=\"5\">(5)</col>",
      "  <col label=\"c6\" value=\"6\">(6)</col>",
      "  <col label=\"c7\" value=\"7\">(7)</col>",
      "  <insert source=\"${1:[DEFINE_LIST]}\" />",
      "</radio>",
      "",
      "<suspend/>",
      "",
      "<exec>",
      "auto_rows = scale_rank_items(${2:[QID1]}, ${3:[QID2]})['auto']",
      "scale_rank_auto(${3:[QID2]}, auto_rows)",
      "</exec>",
      "",
      "<suspend/>",
      "",
      "<radio",
      "  label=\"${3:[QID2]}\"",
      "  unique=\"1\"",
      "  shuffle=\"rows\"",
      "  cond=\"not scale_rank_items(${2:[QID1]}, ${3:[QID2]})['skip']\"",
      "  rowCond=\"row.label in scale_rank_items(${2:[QID1]}, ${3:[QID2]})['show']\"",
      "  colCond=\"col.index lt len(scale_rank_items(${2:[QID1]}, ${3:[QID2]})['show'])\"",
      "  grouping=\"cols\"",
      "  ss:questionClassNames=\"niq-rk-question sp-custom-btn\">",
      "  <alt></alt>",
      "  <title><div class=\"q-name\">${3:[QID2]}</div> ${5:[QID2_TITLE]}</title>",
      "  <comment></comment>",
      "  <exec>",
      "rate_show_score(${2:[QID1]}, ${3:[QID2]})",
      "auto_rows = scale_rank_items(${2:[QID1]}, ${3:[QID2]})['auto']",
      "  </exec>",
      "  <validate>",
      "scale_rank_vali(${2:[QID1]})",
      "  </validate>",
      "<style arg:ableNone=\"1\" arg:autoClick=\"true\" arg:autoContinue=\"false\" arg:ableSort=\"true\" arg:colCnt=\"2\" arg:noneLabel=\"null\" arg:showAnswers=\"true\" arg:showCnt=\"true\" arg:showGroups=\"true\" arg:toggle=\"false\" copy=\"custom_rank\" name=\"question.after\"/>",
      "<style name=\"page.head\"><![CDATA[",
      "<style>",
      "\\@for rank, x in auto_rows",
      ".answer-rank-\\${rank+1} {",
      "  pointer-events: none !important;",
      "}",
      "",
      ".answer-rank-\\${rank+1} svg {",
      "  pointer-events: none !important;",
      "  visibility: hidden;",
      "}",
      "",
      ".rank-row-\\${x} {",
      "  pointer-events: none !important;",
      "}",
      "\\@if rank == len(auto_rows)",
      ".answer-rank-\\${rank+2} .rk-up {",
      "  pointer-events: none !important;",
      "  display: none;",
      "}",
      "",
      ".answer-rank-\\${rank+2} .ans-hd-grid {",
      "  display: block !important;",
      "}",
      "\\@endif",
      "\\@end",
      "",
      ".rank-score {",
      "  display: flex;",
      "  gap: 10px;",
      "  align-items: center;",
      "}",
      "</style>",
      "]]></style>",
      "  <col label=\"c1\">1순위</col>",
      "  <col label=\"c2\">2순위</col>",
      "  <col label=\"c3\">3순위</col>",
      "  <insert source=\"${1:[DEFINE_LIST]}\" />",
      "</radio>",
      "<suspend/>"
    ],
    "description": "RankQuestion/RateBaseRank"
  },

  "RateBaseRankSetting_Snippet": {
    "prefix": "rate.rank.def",
    "body": [
      "<res label=\"rate_show_score_text\"><b>(%s점)</b> %s</res>",
      "<res label=\"rank_order_err\">점수가 높은 순서로 응답 부탁드립니다.</res>",
      "<res label=\"rank_rv_order_err\">점수가 낮은 순서로 응답 부탁드립니다.</res>",
      "<res label=\"rank_remain_err\">아직 높은 점수로 답변한 항목이 있습니다. 답변을 다시 확인해 주세요.</res>",
      "<res label=\"rank_rv_remain_err\">아직 낮은 점수로 답변한 항목이 있습니다. 답변을 다시 확인해 주세요.</res>",
      "<exec when=\"init\">",
      "def rate_show_score(scale_qid, rank_qid):",
      "  for row in rank_qid.rows:",
      "    if scale_qid.attr(row.label).any:",
      "      row.text = res.rate_show_score_text % (scale_qid.cols[scale_qid.attr(row.label).val].value, scale_qid.attr(row.label).text)",
      "",
      "def scale_rank_items(scale_qid, rank_qid, reverse=True):",
      "  if gv.isSST():",
      "    return {",
      "      'show': [x.label for x in rank_qid.rows],",
      "      'skip': False,",
      "      'auto': [],",
      "      'low': []",
      "    }",
      "",
      "  try:",
      "    scale_answer = {x.label: x.val for x in scale_qid.rows.order if x.any}",
      "    sorted_list = sorted(scale_answer.items(), key=lambda item: item[1], reverse=reverse)",
      "    rank_cols = [each for each in rank_qid.cols]",
      "    if not reverse:",
      "      rank_cols.reverse()",
      "",
      "    sort_rows = []",
      "    current_value = None",
      "    current_group = []",
      "    for item in sorted_list:",
      "      key, value = item",
      "      if value != current_value:",
      "        if current_group:",
      "          sort_rows.append(current_group)",
      "        current_group = [key]",
      "        current_value = value",
      "      else:",
      "        current_group.append(key)",
      "    if current_group:",
      "      sort_rows.append(current_group)",
      "",
      "    rank_able_answer = []",
      "    auto_rows = []",
      "    rowCond = []",
      "    for idx, eachCol in enumerate(rank_cols):",
      "      if idx ge len(sort_rows):",
      "        continue",
      "      row_label = sort_rows[idx]",
      "      rank_able_answer.append(row_label)",
      "      if len(rowCond) ge len(rank_cols):",
      "        continue",
      "      for x in row_label:",
      "        rowCond.append(x)",
      "",
      "    if str(rank_qid.o.shuffle).strip() == 'rows':",
      "      rank_qid.rows.order = [scale_qid.attr(each).index for each in sum(sort_rows, [])]",
      "",
      "    skip_cond = all(len(row) == 1 for row in rank_able_answer)",
      "    for idx, row_list in enumerate(rank_able_answer):",
      "      if len(row_list) == 1:",
      "        auto_rows.append([idx, row_list[0]])",
      "      else:",
      "        break",
      "",
      "    last_label = []",
      "    if not skip_cond:",
      "      row_score_dict = {x: int(scale_qid.cols[scale_qid.attr(x).val].value) for x in rowCond}",
      "      score_list = row_score_dict.values()",
      "      if len(score_list) == len(rank_qid.cols):",
      "        score_flag = min(score_list) if reverse else max(score_list)",
      "        min_rows = [lb for lb, ans in row_score_dict.items() if ans == score_flag]",
      "        chk_cnt = 1",
      "        while True:",
      "          if len(min_rows) == 1:",
      "            low_attr = min_rows[0]",
      "            rowCond.remove(low_attr)",
      "            last_label.append(low_attr)",
      "            row_score_dict = {x: int(scale_qid.cols[scale_qid.attr(x).val].value) for x in rowCond}",
      "            score_list = row_score_dict.values()",
      "            score_flag = min(score_list)",
      "            min_rows = [lb for lb, ans in row_score_dict.items() if ans == score_flag]",
      "            chk_cnt += 1",
      "          else:",
      "            break",
      "",
      "    return {",
      "      'show': rowCond,",
      "      'skip': skip_cond,",
      "      'auto': auto_rows,",
      "      'low': last_label",
      "    }",
      "  except:",
      "    return {",
      "      'show': [x.label for x in rank_qid.rows],",
      "      'skip': False,",
      "      'auto': [],",
      "      'low': []",
      "    }",
      "",
      "def scale_rank_auto(rank_qid, auto_list):",
      "  for idx, lb in auto_list:",
      "    rank_qid.cols[idx].val = rank_qid.attr(lb).index",
      "",
      "def scale_rank_vali(scale_qid, reverse=True):",
      "  if gv.isSST():",
      "    return",
      "",
      "  err_flag = False",
      "  remain_answer = [r for r in this.rows if not r and scale_qid.attr(r.label).any]",
      "  remain_rows = [r for r in scale_qid.rows if r.any and this.attr(r.label).displayed and this.attr(r.label).count == 0]",
      "",
      "  for idx, eachCol in enumerate(this.cols):",
      "    if not eachCol.displayed:",
      "      continue",
      "    if (not hasattr(scale_qid, this.rows[eachCol.val].label)) or (scale_qid.attr(this.rows[eachCol.val].label).val is None):",
      "      continue",
      "    if idx == (len([c for c in this.cols if c.displayed]) - 1):",
      "      continue",
      "    curr = eachCol",
      "    next = this.cols[idx + 1]",
      "    curr_value = scale_qid.rows[curr.val].val",
      "    next_value = scale_qid.rows[next.val].val",
      "",
      "    if any([curr_value is None, next_value is None]):",
      "      continue",
      "",
      "    if ((reverse) and (next_value gt curr_value)) or ((not reverse) and (next_value lt curr_value)):",
      "      for x in [curr, next]:",
      "        if reverse:",
      "          error(res.rank_order_err, col=x)",
      "        else:",
      "          error(res.rank_rv_order_err, col=x)",
      "        err_flag = True",
      "",
      "    answer_value = scale_qid.cols[scale_qid.attr(this.rows[eachCol.val].label).val].value",
      "    error_answer = []",
      "",
      "    if reverse:",
      "      error_answer = [r.label for r in remain_rows if scale_qid.cols[r.val].value > answer_value]",
      "    else:",
      "      error_answer = [r.label for r in remain_rows if scale_qid.cols[r.val].value < answer_value]",
      "",
      "    if error_answer:",
      "      err_flag = True",
      "      for err in error_answer:",
      "        high_row = this.attr(err)",
      "        if reverse:",
      "          error(res.rank_remain_err, row=high_row)",
      "        else:",
      "          error(res.rank_rv_remain_err, row=high_row)",
      "</exec>"
    ],
    "description": "RankQuestion/RateBaseRankSetting"
  },

  "RateBaseReverseRank_Snippet": {
    "prefix": "rate.rank.rv",
    "body": [
      "<define label=\"${1:[DEFINE_LIST]}\">",
      "$0",
      "</define>",
      "",
      "<radio",
      "  label=\"${2:[QID1]}\"",
      "  shuffle=\"rows\"",
      "  uses=\"atmtable.6\">",
      "  <alt></alt>",
      "  <title><div class=\"q-name\">${2:[QID1]}</div> ${4:[QID1_TITLE]}</title>",
      "  <comment></comment>",
      "  <exec>",
      "base = ${2:[QID1]}",
      "# base.rows.order = [x.index for x in base.rows]",
      "  </exec>",
      "  <style copy=\"custom_rating\" arg:qmode=\"rating\" arg:autoContinue=\"false\" arg:autoNumber=\"true\" arg:btnDirection=\"row\" arg:leftText=\"\" arg:rightText=\"\" arg:showArrow=\"false\" arg:showGroup=\"true\" name=\"question.after\"/>",
      "  <col label=\"c1\" value=\"1\">(1)</col>",
      "  <col label=\"c2\" value=\"2\">(2)</col>",
      "  <col label=\"c3\" value=\"3\">(3)</col>",
      "  <col label=\"c4\" value=\"4\">(4)</col>",
      "  <col label=\"c5\" value=\"5\">(5)</col>",
      "  <col label=\"c6\" value=\"6\">(6)</col>",
      "  <col label=\"c7\" value=\"7\">(7)</col>",
      "  <insert source=\"${1:[DEFINE_LIST]}\" />",
      "</radio>",
      "",
      "<suspend/>",
      "",
      "<exec>",
      "auto_rows = scale_rank_items(${2:[QID1]}, ${3:[QID2]}, reverse=False)['auto']",
      "scale_rank_auto(${3:[QID2]}, auto_rows)",
      "</exec>",
      "",
      "<suspend/>",
      "",
      "<radio",
      "  label=\"${3:[QID2]}\"",
      "  unique=\"1\"",
      "  shuffle=\"rows\"",
      "  cond=\"not scale_rank_items(${2:[QID1]}, ${3:[QID2]}, reverse=False)['skip']\"",
      "  rowCond=\"row.label in scale_rank_items(${2:[QID1]}, ${3:[QID2]}, reverse=False)['show']\"",
      "  colCond=\"col.index lt len([x for x in ${3:[QID2]}.rows if x.displayed])\"",
      "  grouping=\"cols\"",
      "  ss:questionClassNames=\"niq-rk-question sp-custom-btn\">",
      "  <alt></alt>",
      "  <title><div class=\"q-name\">${3:[QID2]}</div> ${5:[QID2_TITLE]}</title>",
      "  <comment></comment>",
      "  <exec>",
      "rate_show_score(${2:[QID1]}, ${3:[QID2]})",
      "auto_rows = scale_rank_items(${2:[QID1]}, ${3:[QID2]}, reverse=False)['auto']",
      "  </exec>",
      "  <validate>",
      "scale_rank_vali(${2:[QID1]}, reverse=False)",
      "  </validate>",
      "<style arg:ableNone=\"1\" arg:autoClick=\"true\" arg:autoContinue=\"false\" arg:ableSort=\"true\" arg:colCnt=\"2\" arg:noneLabel=\"null\" arg:showAnswers=\"true\" arg:showCnt=\"true\" arg:showGroups=\"true\" arg:toggle=\"false\" copy=\"custom_rank\" name=\"question.after\"/>",
      "<style name=\"page.head\"><![CDATA[",
      "<style>",
      "\\@for rank, x in auto_rows",
      ".answer-rank-\\${rank+1} {",
      "  pointer-events: none !important;",
      "}",
      "",
      ".answer-rank-\\${rank+1} svg {",
      "  pointer-events: none !important;",
      "  visibility: hidden;",
      "}",
      "",
      ".rank-row-\\${x} {",
      "  pointer-events: none !important;",
      "}",
      "\\@if rank == len(auto_rows)",
      ".answer-rank-\\${rank+2} .rk-up {",
      "  pointer-events: none !important;",
      "  display: none;",
      "}",
      "",
      ".answer-rank-\\${rank+2} .ans-hd-grid {",
      "  display: block !important;",
      "}",
      "\\@endif",
      "\\@end",
      "",
      ".rank-score {",
      "  display: flex;",
      "  gap: 10px;",
      "  align-items: center;",
      "}",
      "</style>",
      "]]></style>",
      "  <col label=\"c1\">1순위</col>",
      "  <col label=\"c2\">2순위</col>",
      "  <col label=\"c3\">3순위</col>",
      "  <insert source=\"${1:[DEFINE_LIST]}\" />",
      "</radio>",
      "<suspend/>"
    ],
    "description": "RankQuestion/RateBaseReverseRank"
  },

  "RateBaseSA_Snippet": {
    "prefix": "rate.sa",
    "body": [
      "<define label=\"${1:[DEFINE_LIST]}\">",
      "$0",
      "</define>",
      "",
      "<radio",
      "  label=\"${2:[QID1]}\"",
      "  shuffle=\"rows\"",
      "  uses=\"atmtable.6\">",
      "  <alt></alt>",
      "  <title><div class=\"q-name\">${2:[QID1]}</div> ${4:[QID1_TITLE]}</title>",
      "  <comment></comment>",
      "  <exec>",
      "base = ${2:[QID1]}",
      "# base.rows.order = [x.index for x in base.rows]",
      "  </exec>",
      "  <style copy=\"custom_rating\" arg:qmode=\"rating\" arg:autoContinue=\"false\" arg:autoNumber=\"true\" arg:btnDirection=\"row\" arg:leftText=\"\" arg:rightText=\"\" arg:showArrow=\"false\" arg:showGroup=\"true\" name=\"question.after\"/>",
      "  <col label=\"c1\" value=\"1\">(1)</col>",
      "  <col label=\"c2\" value=\"2\">(2)</col>",
      "  <col label=\"c3\" value=\"3\">(3)</col>",
      "  <col label=\"c4\" value=\"4\">(4)</col>",
      "  <col label=\"c5\" value=\"5\">(5)</col>",
      "  <col label=\"c6\" value=\"6\">(6)</col>",
      "  <col label=\"c7\" value=\"7\">(7)</col>",
      "  <insert source=\"${1:[DEFINE_LIST]}\" />",
      "</radio>",
      "",
      "<suspend/>",
      "",
      "<radio",
      "  label=\"${3:[QID2]}\"",
      "  shuffle=\"rows\"",
      "  shuffleBy=\"${2:[QID1]}\"",
      "  rowCond=\"row.label in scale_rank_items(${2:[QID1]}, ${3:[QID2]})['show']\"",
      "  ss:questionClassNames=\"sp-custom-btn ${6:btn-mw-500 btn-cols-1}\">",
      "  <alt></alt>",
      "  <title><div class=\"q-name\">${3:[QID2]}</div> ${5:[QID2_TITLE]}</title>",
      "  <comment></comment>",
      "  <exec>",
      "# rate_show_score(${2:[QID1]}, ${3:[QID2]})",
      "  </exec>",
      "  <insert source=\"${1:[DEFINE_LIST]}\" />",
      "</radio>",
      "<suspend/>"
    ],
    "description": "RankQuestion/RateBaseSA"
  },

  "Cint_Snippet": {
    "prefix": "cint",
    "body": [
      "<samplesource list=\"14\">",
      "  <title>Cint</title>",
      "  <invalid>URL에 정보가 누락되었습니다. 기존의 초대받은 URL을 확인해 주시기 바랍니다.</invalid>",
      "  <completed>귀하께서는 이미 본 설문에 접속 하신 것으로 확인 됩니다.</completed>",
      "  <var name=\"CO\" required=\"1\" values=\"GB,DE,IT,ES,FR,KR\"/>",
      "  <var name=\"GUID\" unique=\"1\"/>",
      "  <var name=\"ctTerm\" required=\"1\"/>",
      "  <var name=\"ctComp\" required=\"1\"/>",
      "  <exit cond=\"terminated\" url=\"https://s.cint.com/Survey/EarlyScreenOut?ProjectToken=\\${ctTerm}&amp;GUID=\\${GUID}\"/>",
      "  <exit cond=\"overquota\" url=\"https://s.cint.com/Survey/QuotaFull?ProjectToken=\\${ctTerm}&amp;GUID=\\${GUID}\"/>",
      "  <exit cond=\"qualified\" url=\"https://s.cint.com/Survey/Complete?ProjectToken=\\${ctComp}&amp;GUID=\\${GUID}\"/>",
      "</samplesource>"
    ],
    "description": "SampleSource/Cint"
  },

  "Dataspring_Snippet": {
    "prefix": "dataspring",
    "body": [
      "<samplesource list=\"13\">",
      "  <title>DataSpring</title>",
      "  <invalid>URL에 정보가 누락되었습니다. 기존의 초대받은 URL을 확인해 주시기 바랍니다.</invalid>",
      "  <completed>귀하께서는 이미 본 설문에 접속 하신 것으로 확인 됩니다.</completed>",
      "  <var name=\"CO\" required=\"1\" values=\"GB,DE,IT,ES,FR,KR\"/>",
      "  <var name=\"dsid\" unique=\"1\"/>",
      "  <var name=\"dskey\" required=\"1\"/>",
      "  <exit cond=\"terminated\" url=\"https://d8aspring.post-survey.com/ans/back/?key=\\${dskey}&amp;status=scrout\"/>",
      "  <exit cond=\"overquota\" url=\"https://d8aspring.post-survey.com/ans/back/?key=\\${dskey}&amp;status=quotafull\"/>",
      "  <exit cond=\"qualified\" url=\"https://d8aspring.post-survey.com/ans/back/?key=\\${dskey}&amp;status=comp\"/>",
      "</samplesource>",
      "",
      "<samplesource list=\"23\">",
      "  <title>DataSpring MCP</title>",
      "  <invalid>URL에 정보가 누락되었습니다. 기존의 초대받은 URL을 확인해 주시기 바랍니다.</invalid>",
      "  <completed>귀하께서는 이미 본 설문에 접속 하신 것으로 확인 됩니다.</completed>",
      "  <var name=\"CO\" required=\"1\" values=\"GB,DE,IT,ES,FR,KR\"/>",
      "  <var name=\"dsmcpKEY\" required=\"1\"/>",
      "  <var name=\"dsmcpID\" unique=\"1\"/>",
      "  <exit cond=\"terminated\" url=\"https://survey1.datadata.co.kr/?ACCESS_KEY=\\${dsmcpKEY}&amp;grpid=&amp;Q=STID&amp;UID=\\${dsmcpID}&amp;status=scrout\"/>",
      "  <exit cond=\"overquota\" url=\"https://survey1.datadata.co.kr/?ACCESS_KEY=\\${dsmcpKEY}&amp;grpid=&amp;Q=STID&amp;UID=\\${dsmcpID}&amp;status=quotafull\"/>",
      "  <exit cond=\"qualified\" url=\"https://survey1.datadata.co.kr/?ACCESS_KEY=\\${dsmcpKEY}&amp;grpid=&amp;Q=STID&amp;UID=\\${dsmcpID}&amp;status=comp\"/>",
      "</samplesource>"
    ],
    "description": "SampleSource/Dataspring"
  },

  "Dynata_Snippet": {
    "prefix": "dynata",
    "body": [
      "<samplesource keyring=\"sys/dynata\" list=\"105\" sign=\"out,in\">",
      "  <title>Dynata</title>",
      "  <invalid>URL에 정보가 누락되었습니다. 기존의 초대받은 URL을 확인해 주시기 바랍니다.</invalid>",
      "  <completed>귀하께서는 이미 본 설문에 접속 하신 것으로 확인 됩니다.</completed>",
      "  <var name=\"CO\" required=\"1\" values=\"GB,DE,IT,ES,FR,KR\"/>",
      "  <var name=\"psid\" unique=\"1\"/>",
      "  <exit cond=\"terminated and hasMarker('Auto_QCScreen_On') and hasMarker('QC_Failed') and not gv.isSST()\" url=\"https://dkr1.ssisurveys.com/projects/end?rst=2&amp;_d=\\${gv.survey.path}&amp;qflag=3&amp;psid=\\${psid}\"/>",
      "  <exit cond=\"terminated\" url=\"https://dkr1.ssisurveys.com/projects/end?rst=2&amp;_d=\\${gv.survey.path}&amp;psid=\\${psid}\"/>",
      "  <exit cond=\"overquota\" url=\"https://dkr1.ssisurveys.com/projects/end?rst=3&amp;_d=\\${gv.survey.path}&amp;psid=\\${psid}\"/>",
      "  <exit cond=\"qualified\" url=\"https://dkr1.ssisurveys.com/projects/end?rst=1&amp;_d=\\${gv.survey.path}&amp;psid=\\${psid}\"/>",
      "</samplesource>"
    ],
    "description": "SampleSource/Dynata"
  },

  "MarketLink_Snippet": {
    "prefix": "marketlink",
    "body": [
      "<samplesource list=\"12\">",
      "    <title>MarketLink</title>",
      "    <invalid>URL에 정보가 누락되었습니다. 기존의 초대받은 URL을 확인해 주시기 바랍니다.</invalid>",
      "    <completed>귀하께서는 이미 본 설문에 접속 하신 것으로 확인 됩니다.</completed>",
      "    <var name=\"CO\" required=\"1\" values=\"GB,DE,IT,ES,FR,KR\"/>",
      "    <var name=\"mlTerm\" required=\"1\"/>",
      "    <var name=\"mlOver\" required=\"1\"/>",
      "    <var name=\"mlQual\" required=\"1\"/>",
      "    <var name=\"seq\" unique=\"1\"/>",
      "    <exit cond=\"terminated\" url=\"https://join.cloudpanel.co.kr/join/resultDirect?KEY=\\${mlTerm}&amp;PANEL_SEQ=\\${seq}\"/>",
      "    <exit cond=\"overquota\" url=\"https://join.cloudpanel.co.kr/join/resultDirect?KEY=\\${mlOver}&amp;PANEL_SEQ=\\${seq}\"/>",
      "    <exit cond=\"qualified\" url=\"https://join.cloudpanel.co.kr/join/resultDirect?KEY=\\${mlQual}&amp;PANEL_SEQ=\\${seq}\"/>",
      "  </samplesource>"
    ],
    "description": "SampleSource/MarketLink"
  },

  "Openlink_Snippet": {
    "prefix": "openlink",
    "body": [
      "<samplesource list=\"0\">",
      "  <title>Open Survey</title>",
      "  <invalid>URL에 정보가 누락되었습니다. 기존의 초대받은 URL을 확인해 주시기 바랍니다.</invalid>",
      "  <completed>귀하께서는 이미 본 설문에 접속 하신 것으로 확인 됩니다.</completed>",
      "  <var name=\"test\"/>",
      "  <var name=\"CO\" required=\"1\" values=\"GB,DE,IT,ES,FR,KR\"/>",
      "  <var name=\"testLive\"/>",
      "  <var name=\"skipTerm\"/>",
      "  <exit cond=\"terminated\"><span style='font-size: 18pt;'><span class='bold'>본 조사에 참여해주셔서 감사합니다.</span><br/><br/>본격적으로 조사를 시작하기 전에, 귀하가 본 조사에 적합한 응답 대상인지 알아보기 위해 몇 가지의 질문을 드렸습니다.<br/><br/>죄송합니다. 귀하께서는 본 조사의 응답 대상이 아니십니다.<br/><br/>차후에 다른 온라인 조사에 참여해주시면 감사하겠습니다.<br/><br/>귀하의 소중한 의견은 더 나은 제품과 서비스를 개발하는데 좋은 정보가 될 것입니다.</span></exit>",
      "  <exit cond=\"qualified\"><span style='font-size: 18pt;'><span class='bold'>이로써 설문이 완료되었습니다. </span><br/><br/><span class='bold'>귀한 시간 내주셔서 대단히 감사드립니다.</span></span></exit>",
      "  <exit cond=\"overquota\"><span style='font-size: 18pt;'><span class='bold'>본 조사에 참여해 주셔서 감사합니다. </span><br/><br/>안타깝게도, 귀하께서 해당하시는 조사 대상 그룹의 조사는 이미 종료되었습니다.<br/><br/>다음에 참여해 주시기 바랍니다.</span></exit>",
      "</samplesource>"
    ],
    "description": "SampleSource/Openlink"
  },

  "Tillion_Snippet": {
    "prefix": "tillion",
    "body": [
      "<samplesource list=\"11\">",
      "  <title>Tillion</title>",
      "  <invalid>URL에 정보가 누락되었습니다. 기존의 초대받은 URL을 확인해 주시기 바랍니다.</invalid>",
      "  <completed>귀하께서는 이미 본 설문에 접속 하신 것으로 확인 됩니다.</completed>",
      "  <var name=\"CO\" required=\"1\" values=\"GB,DE,IT,ES,FR,KR\"/>",
      "  <var name=\"sid\" required=\"1\"/>",
      "  <var name=\"eid\" unique=\"1\"/>",
      "  <exit cond=\"terminated\" url=\"http://out.pmirnc.com/?sid=\\${sid}&amp;eid=\\${eid}&amp;st=S&amp;stdt=SO1\"/>",
      "  <exit cond=\"overquota\" url=\"http://out.pmirnc.com/?sid=\\${sid}&amp;eid=\\${eid}&amp;st=Q&amp;stdt=QO\"/>",
      "  <exit cond=\"qualified\" url=\"http://out.pmirnc.com/?sid=\\${sid}&amp;eid=\\${eid}&amp;st=C&amp;stdt=CO1\"/>",
      "</samplesource>"
    ],
    "description": "SampleSource/Tillion"
  },

  "Toluna_Snippet": {
    "prefix": "toluna",
    "body": [
      "<samplesource list=\"2\">",
      "  <title>Toluna</title>",
      "  <invalid>URL에 정보가 누락되었습니다. 기존의 초대받은 URL을 확인해 주시기 바랍니다.</invalid>",
      "  <completed>귀하께서는 이미 본 설문에 접속 하신 것으로 확인 됩니다.</completed>",
      "  <var name=\"CO\" required=\"1\" values=\"GB,DE,IT,ES,FR,KR\"/>",
      "  <var name=\"gid\" unique=\"1\"/>",
      "  <var name=\"sname\" required=\"1\"/>",
      "  <var name=\"test\"/>",
      "  <exit cond=\"terminated and not gv.isSST()\" url=\"https://ups.surveyrouter.com/trafficui/mscui/SOTerminated.aspx?sname=\\${sname}&amp;gid=\\${gid}\"/>",
      "  <exit cond=\"overquota and not gv.isSST()\" url=\"https://ups.surveyrouter.com/trafficui/mscui/SOQuotafull.aspx?sname=\\${sname}&amp;gid=\\${gid}\"/>",
      "  <exit cond=\"qualified and not gv.isSST()\" url=\"https://ups.surveyrouter.com/trafficui/mscui/SOQualified.aspx?TolunaEnc=\\${p.TolunaEncKey}&amp;sname=\\${sname}&amp;gid=\\${gid}\"/>",
      "</samplesource>",
      "",
      "<samplesource list=\"22\">",
      "  <title>Kurundata</title>",
      "  <invalid>URL에 정보가 누락되었습니다. 기존의 초대받은 URL을 확인해 주시기 바랍니다.</invalid>",
      "  <completed>귀하께서는 이미 본 설문에 접속 하신 것으로 확인 됩니다.</completed>",
      "  <var name=\"CO\" required=\"1\" values=\"GB,DE,IT,ES,FR,KR\"/>",
      "  <var name=\"qquid\" unique=\"1\"/>",
      "  <var name=\"test\"/>",
      "  <exit cond=\"terminated and not gv.isSST()\" url=\"https://transfer.sumpanel.com/surveypc/end.aspx?qquid=\\${qquid}&amp;menu=S\"/>",
      "  <exit cond=\"overquota and not gv.isSST()\" url=\"https://transfer.sumpanel.com/surveypc/end.aspx?qquid=\\${qquid}&amp;menu=Q\"/>",
      "  <exit cond=\"qualified and not gv.isSST()\" url=\"https://transfer.sumpanel.com/surveypc/end.aspx?qquid=\\${qquid}&amp;menu=C\"/>",
      "</samplesource>"
    ],
    "description": "SampleSource/Toluna"
  },

  "Uidlink_Snippet": {
    "prefix": "uid.link",
    "body": [
      "<samplesource list=\"9\">",
      "  <title>UserIdSampleSource</title>",
      "  <invalid>URL에 정보가 누락되었습니다. 기존의 초대받은 URL을 확인해 주시기 바랍니다.</invalid>",
      "  <completed>귀하께서는 이미 본 설문에 접속 하신 것으로 확인 됩니다.</completed>",
      "  <var name=\"CO\" required=\"1\" values=\"KR\"/>",
      "  <var name=\"UID\" unique=\"1\"/>",
      "  <exit cond=\"terminated\"><span style='font-size: 18pt;'><span class='bold'>본 조사에 참여해주셔서 감사합니다.</span><br/><br/>본격적으로 조사를 시작하기 전에, 귀하가 본 조사에 적합한 응답 대상인지 알아보기 위해 몇 가지의 질문을 드렸습니다.<br/><br/>죄송합니다. 귀하께서는 본 조사의 응답 대상이 아니십니다.<br/><br/>차후에 다른 온라인 조사에 참여해주시면 감사하겠습니다.<br/><br/>귀하의 소중한 의견은 더 나은 제품과 서비스를 개발하는데 좋은 정보가 될 것입니다.</span></exit>",
      "  <exit cond=\"qualified\"><span style='font-size: 18pt;'><span class='bold'>이로써 설문이 완료되었습니다. </span><br/><br/><span class='bold'>귀한 시간 내주셔서 대단히 감사드립니다.</span></span></exit>",
      "  <exit cond=\"overquota\"><span style='font-size: 18pt;'><span class='bold'>본 조사에 참여해 주셔서 감사합니다. </span><br/><br/>안타깝게도, 귀하께서 해당하시는 조사 대상 그룹의 조사는 이미 종료되었습니다.<br/><br/>다음에 참여해 주시기 바랍니다.</span></exit>",
      "</samplesource>"
    ],
    "description": "SampleSource/Uidlink"
  },

  "StepByStepQuestion_Snippet": {
    "prefix": "sbs",
    "body": [
      "<block label=\"${1:[BLOCK_NAME]}\">",
      "    <select ",
      "    label=\"${2:[QID1]}\"",
      "    grouping=\"rows\"",
      "    ss:questionClassNames=\"sbs-question\"",
      "    surveyDisplay=\"mobile\">",
      "      <title><div class=\"q-name\">${2:[QID1]}</div> ${5:[QID1_title]}</title>",
      "      <style name=\"el.select.header\" label=\"sbs_select_header\" arg:step=\"1\" arg:stepBase=\"\" arg:stepKey=\"\"><![CDATA[",
      "<select name=\"\\$(name)\" id=\"\\$(id)\" class=\"input dropdown step-by-step step-\\$(step)\" data-stepbase=\"\\$(stepBase)\" data-stepkey=\"\\$(stepKey)\" \\$(extra)>",
      "]]></style>",
      "      <style arg:stepName=\"${3:[step name]}\" name=\"el.select.default\" label=\"sbs_select_default\"><![CDATA[",
      "<option value=\"-1\" \\$(selected)>\\$(stepName)</option>",
      "]]></style>",
      "      <style name=\"el.select.element\"><![CDATA[",
      "<option value=\"\\$(value)\" data-base=\"\\${choice.value}\" \\$(selected) class=\"\\${choice.styles.ss.choiceClassNames if ec.choice else \"\"}\" data-open=\"\\${1 if choice.open else 0}\">\\$(text)</option>",
      "]]></style>",
      "        ${6:[TAB6]}",
      "    </select>",
      "",
      "    <select ",
      "    label=\"${4:[QID2]}\"",
      "    grouping=\"rows\"",
      "    rightOf=\"${2:[QID1]}\">",
      "      <title><div class=\"q-name\">${4:[QID2]}</div> ${3:[step]}</title>",
      "      <style name=\"el.select.header\" copy=\"sbs_select_header\"/>",
      "      <style arg:stepName=\"${4:[QID2]}\" name=\"el.select.default\" copy=\"sbs_select_default\" arg:step=\"2\" arg:stepBase=\"1\" arg:stepKey=\"base\"/>",
      "      <style name=\"el.select.element\"><![CDATA[",
      "<option value=\"\\$(value)\" data-code=\"\\${choice.value//100}\" data-base=\"\\${choice.value}\" \\$(selected) class=\"\\${choice.styles.ss.choiceClassNames if ec.choice else \"\"}\" data-open=\"\\${1 if choice.open else 0}\">\\$(text)</option>",
      "]]></style>",
      "        ${7:[TAB7]}",
      "    </select>",
      "",
      "</block>",
      "<note>${1:[BLOCK_NAME]} END</note>",
      "",
      "<suspend/>"
    ],
    "description": "StepByStep/StepByStepQuestion"
  },

  "StepByStepQuestionNone_Snippet": {
    "prefix": "sbs.none",
    "body": [
      "<style name=\"question.left\" label=\"sbs_none\"><![CDATA[",
      "\\@if this.styles.ss.legendColWidth",
      "    <\\$(tag) scope=\"row\" class=\"cell nonempty legend row-legend row-legend-left \\${\"row-legend-both \" if ec.haveRightLegend and ec.haveLeftLegend else \"\"}row-legend-basic \\${\"mobile-left-row-legend \" if force else \"\"}\\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"row-legend-both-space \" if ec.haveRightLegend and ec.haveLeftLegend and (not row.group or not row.index==0) else \"border-collapse \"} \\$(row.styles.ss.rowClassNames)\" style=\"width:\\${this.styles.ss.legendColWidth}; min-width:\\${this.styles.ss.legendColWidth}\">",
      "        <div class=\"row-text\">\\$(text)<div class=\"none-\\$(row.index)-div\"></div></div>",
      "    </\\$(tag)>",
      "\\@else",
      "    <\\$(tag) scope=\"row\" class=\"cell nonempty legend row-legend row-legend-left \\${\"row-legend-both \" if ec.haveRightLegend and ec.haveLeftLegend else \"\"}row-legend-basic \\${\"mobile-left-row-legend \" if force else \"\"}\\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"row-legend-both-space \" if ec.haveRightLegend and ec.haveLeftLegend and (row.group or not row.index==0) else \"border-collapse \"} \\$(row.styles.ss.rowClassNames)\">",
      "        <div class=\"row-text\">\\$(text)<div class=\"none-\\$(row.index)-div\"></div></div>",
      "    </\\$(tag)>",
      "\\@endif",
      "]]></style>",
      "",
      "<checkbox ",
      "    label=\"${1:[QID]}none\"",
      "    ss:questionClassNames=\"hidden\">",
      "    <title>${1:[QID]} none checkbox question</title>",
      "<style arg:noneText=\"${2:[NONE_TEXT]}\" name=\"el.checkbox\" label=\"sbs_none_checkbox\"><![CDATA[",
      "<div class=\"none \\$(this.label)-\\$(row.label)\">",
      "\\$(noneText) <div class=\"none-input\"><input type=\"checkbox\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"1\" \\$(checked)/></div>",
      "</div>",
      "<script>",
      "document.querySelector(\".none-\\$(row.index)-div\").appendChild(document.querySelector(\".\\$(this.label)-\\$(row.label)\"));",
      "</script>",
      "]]></style>",
      "</checkbox>"
    ],
    "description": "StepByStep/StepByStepQuestionNone"
  },

  "StepByStepQuestionNoneCopy_Snippet": {
    "prefix": "sbs.none.copy",
    "body": [
      "${3:<style name=\"question.left\" copy=\"sbs_none\"/>}",
      "",
      "<checkbox ",
      "    label=\"${1:[QID1]}none\"",
      "    ss:questionClassNames=\"hidden\">",
      "    <title>${1:[QID1]} none checkbox question</title>",
      "<style arg:noneText=\"${2:[NONE_TEXT]}\" name=\"el.checkbox\" copy=\"sbs_none_checkbox\"/>",
      "</checkbox>"
    ],
    "description": "StepByStep/StepByStepQuestionNoneCopy"
  },

  "StepByStepQuestionOpen_Snippet": {
    "prefix": "sbs.oe",
    "body": [
      "<style name=\"el.select.footer\" arg:baseName=\"${1:[QID]}\" label=\"sbs_select_footer\"><![CDATA[",
      "</select>",
      "<div class=\"step-by-step-oe \\$(baseName)oe-\\$(row.label)\"></div>",
      "]]></style>",
      "",
      "<text ",
      "    label=\"${1:[QID]}oe\"",
      "    size=\"40\"",
      "    ss:questionClassNames=\"hidden\">",
      "    <title>${1:[QID]} open text question</title>",
      "    <style name=\"el.text\" label=\"sbs_open\"><![CDATA[",
      "<input type=\"text\" name=\"\\$(name)\" id=\"\\$(id)\" class=\"other-open \\${\"\" if value else \"input-disabled\"}\" value=\"\\$(value)\" size=\"\\$(size)\" \\${\"\" if value else \"disabled\"} placeholder=\"\\${this.styles.ss.postText or \"\"}\"/>",
      "<script>",
      "document.querySelector('.\\$(this.label)-\\$(row.label)').appendChild(document.querySelector(\"input[name='\\$(name)']\"));",
      "</script>",
      "]]></style>",
      "</text>"
    ],
    "description": "StepByStep/StepByStepQuestionOpen"
  },

  "StepByStepQuestionOpenCopy_Snippet": {
    "prefix": "sbs.oe.copy",
    "body": [
      "${2:<style name=\"el.select.footer\" arg:baseName=\"${1:[QID]}\" copy=\"sbs_select_footer\"/>}",
      "",
      "<text ",
      "    label=\"${1:[QID]}oe\"",
      "    size=\"40\"",
      "    ss:questionClassNames=\"hidden\">",
      "    <title>${1:[QID]} open text question</title>",
      "    <style name=\"el.text\" copy=\"sbs_open\"/>",
      "</text>"
    ],
    "description": "StepByStep/StepByStepQuestionOpenCopy"
  },

  "StepByStepQuestionValidation_Snippet": {
    "prefix": "sbs.vali.def",
    "body": [
      "def sbs_validation(qid_list, none_qid=None) :",
      "  # None validation",
      "  if none_qid :",
      "    for qid in qid_list :",
      "      for eachRow in qid.rows :",
      "        if none_qid.attr(eachRow.label) :",
      "          continue",
      "",
      "        if not eachRow.any :",
      "          error(this.lget('noAnswerSelected'))"
    ],
    "description": "StepByStep/StepByStepQuestionValidation"
  },

  "StepByStepQuestionValidationSet_Snippet": {
    "prefix": "sbs.vali",
    "body": [
      "sbs_validation([${1:[QID]}x1, ${1:[QID]}x2, ${1:[QID]}x3], ${1:[QID]}none)"
    ],
    "description": "StepByStep/StepByStepQuestionValidationSet"
  },

  "HeatClickVirtualAutoDef_Snippet": {
    "prefix": "heatmap.auto.def",
    "body": [
      "<exec when=\"virtualInit\">",
      "def set_virtual_pos(qid, rating, auto_id) :",
      "    try :",
      "        if not qid.val == None :",
      "            vals = eval(qid.unsafe_val)",
      "            pos = [each['position'] for each in vals if each['rating']==rating][0]",
      "            auto_id.X.val = pos['x']",
      "            auto_id.Y.val = pos['y']",
      "    except :",
      "        print('error')",
      "",
      "def set_virtual_reason(qid, rating, auto_id) :",
      "    try :",
      "        if not qid.val == None :",
      "            vals = eval(qid.unsafe_val)",
      "            expl = [each['explanation'] for each in vals if each['rating']==rating][0]",
      "            auto_qid.val = expl",
      "    except :",
      "        print('error')",
      "</exec>"
    ],
    "description": "Virtual/HeatClickVirtualAutoDef"
  },

  "HeatClickVirtualAutoQuestions_Snippet": {
    "prefix": "heatmap.auto.qus",
    "body": [
      "<float ",
      "  label=\"${1:[AUTO_QID]}_pos\"",
      "  optional=\"1\"",
      "  size=\"3\"",
      "  sst=\"0\"",
      "  where=\"execute\">",
      "    <title>Position data</title>",
      "    <virtual>",
      "set_virtual_pos(${2:[BASE_QID]}, 0, ${1:[AUTO_QID]}_pos)",
      "    </virtual>",
      "    <row label=\"X\">X</row>",
      "    <row label=\"Y\">Y</row>",
      "</float>",
      "",
      "<suspend/>",
      "",
      "<textarea",
      "  label=\"${1:[AUTO_QID]}_reason\"",
      "  optional=\"1\"",
      "  sst=\"0\"",
      "  where=\"execute\">",
      "    <title>Reason</title>",
      "    <comment></comment>",
      "    <virtual>",
      "set_virtual_reason(${2:[BASE_QID]}, 0, ${1:[AUTO_QID]}_reason)",
      "    </virtual>",
      "</textarea>",
      "",
      "<suspend/>"
    ],
    "description": "Virtual/HeatClickVirtualAutoQuestions"
  },

  "ElementCheckbox_Snippet": {
    "prefix": "el.checkbox",
    "body": [
      "<style name='el.checkbox'> <![CDATA[",
      "<input type=\"checkbox\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"1\" \\$(checked) class=\"\\${flags.CSS} input checkbox\" \\$(extra)/>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/ElementCheckbox"
  },

  "ElementImage_Snippet": {
    "prefix": "el.image",
    "body": [
      "<style name='el.image'> <![CDATA[",
      "\\@if data",
      "\\@if this.displayInline",
      "<img align='center' src='/survey/\\${gv.survey.path}/\\$(localFilename|q)'>",
      "\\@endif",
      "<input type=\"hidden\" name=\"old-\\$(name)\" value=\"\\$(data)\">",
      "<br/><br/>",
      "\\@endif",
      "<input type=\"file\" name=\"\\$(name)\" size=\"\\$(size)\">",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/ElementImage"
  },

  "ElementNoanswer_Snippet": {
    "prefix": "el.noanswer",
    "body": [
      "<style name='el.noanswer'> <![CDATA[",
      "\\@if ec.simpleList",
      "<div class=\"element\">",
      "\\@endif",
      "<span class=\"cell-sub-wrapper cell-legend-right\"><span class=\"cell-input cell-sub-column\">",
      "<input type=\"checkbox\" id=\"\\$(row.checkboxLabel)\" name=\"\\$(row.checkboxLabel)\" value=\"1\" class=\"input no-answer checkbox\" \\$(value|checkbox)/>",
      "</span><span class=\"cell-text cell-sub-column\"><label for=\"\\$(row.checkboxLabel)\">\\$(label)</label></span></span>",
      "\\@if ec.simpleList",
      "</div>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/ElementNoanswer"
  },

  "ElementOpen_Snippet": {
    "prefix": "el.open",
    "body": [
      "<style name='el.open'> <![CDATA[",
      "<input type=\"text\" name=\"\\$(name)\" id=\"\\$(name)\" value=\"\\$(value)\" data-cell=\"\\$(cell.parent.label)_\\$(cell.label)\" size=\"\\$(size)\" class=\"input text-input oe oe-\\$(align)\" \\$(extra)/>",
      "\\$(scripts)",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/ElementOpen"
  },

  "ElementRadio_Snippet": {
    "prefix": "el.radio",
    "body": [
      "<style name='el.radio'> <![CDATA[",
      "<input type=\"radio\" name=\"\\$(name)\" value=\"\\$(value)\" id=\\$(id) \\$(checked) class=\"input radio\" \\$(extra)/>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/ElementRadio"
  },

  "ElementSelect_Snippet": {
    "prefix": "el.select",
    "body": [
      "<style name='el.select.header'> <![CDATA[",
      "<select name=\"\\$(name)\" id=\"\\$(id)\" class=\"input dropdown\" \\$(extra)>",
      "]]></style>",
      "",
      "<style name='el.select.default'> <![CDATA[",
      "<option value=\"-1\" \\$(selected)>@(select)</option>",
      "]]></style>",
      "",
      "<style name='el.select.element'> <![CDATA[",
      "<option value=\"\\$(value)\" \\$(selected) class=\"\\${choice.styles.ss.choiceClassNames if ec.choice else \"\"}\">\\$(text)</option>",
      "]]></style>",
      "",
      "<style name='el.select.footer'> <![CDATA[",
      "</select>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/ElementSelect"
  },

  "ElementText_Snippet": {
    "prefix": "el.text",
    "body": [
      "<style name='el.text'> <![CDATA[",
      "\\@if row.styles.ss.preText or this.styles.ss.preText",
      "<span class=\"pre-text\">",
      "  \\${row.styles.ss.preText or this.styles.ss.preText or \"\"}&nbsp;",
      "</span>                 ",
      "\\@endif",
      "\\@if this.xmlTagName in ('number', 'float')",
      "<input type=\"number\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"\\$(value)\" size=\"\\$(size)\" class=\"input text-input\" \\$(extra)/>",
      "\\@else                  ",
      "<input type=\"text\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"\\$(value)\" size=\"\\$(size)\" class=\"input text-input\" \\$(extra)/>",
      "\\@endif",
      "\\@if row.styles.ss.postText or this.styles.ss.postText",
      "<span class=\"post-text\">",
      "  &nbsp;\\${row.styles.ss.postText or this.styles.ss.postText or \"\"}",
      "</span>",
      "\\@endif                               ",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/ElementText"
  },

  "ElementTextarea_Snippet": {
    "prefix": "el.textarea",
    "body": [
      "<style name='el.textarea'> <![CDATA[",
      "\\@if row.styles.ss.preText or this.styles.ss.preText",
      "    \\${row.styles.ss.preText or this.styles.ss.preText or \"\"}&nbsp;",
      "\\@endif",
      "<textarea name=\"\\$(name)\" id=\"\\$(id)\" rows=\"\\$(height)\" cols=\"\\$(width)\" wrap=\"virtual\" class=\"input textarea\" \\$(extra)>\\$(value)</textarea>",
      "\\@if row.styles.ss.postText or this.styles.ss.postText",
      "    &nbsp;\\${row.styles.ss.postText or this.styles.ss.postText or \"\"}",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/ElementTextarea"
  },

  "GlobalPageHead_Snippet": {
    "prefix": "global.page.head",
    "body": ["<style name=\"global.page.head\"> <![CDATA[", "", "]]></style>"],
    "description": "XmlStyleSystem/GlobalPageHead"
  },

  "PageHeadStyle_Snippet": {
    "prefix": "page.head",
    "body": [
      "<style name=\"page.head\"><![CDATA[",
      "<style>",
      "${0}",
      "</style>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/PageHeadStyle"
  },

  "Progressbar_Snippet": {
    "prefix": "progressbar",
    "body": [
      "<style name='survey.completion'> <![CDATA[",
      "\\@if not gv.survey.root.styles.ss.hideProgressBar",
      "    <div role=\"progressbar\" aria-valuenow=\"\\$(percent)\" aria-valuemin=\"0\" aria-valuemax=\"100\" class=\"progress-bar progress-\\${\"top\" if gv.survey.root.progressOnTop else \"bottom\"}\" title=\"@(progress-bar) - \\$(percent)% @(complete)\">",
      "      <div class=\"progress-box-outer\" aria-hidden=\"true\"><span class=\"progress-box-completed\" style=\"width: \\$(percent)%;\"></span></div>",
      "      <div class=\"progress-text\" aria-hidden=\"true\">\\$(percent)%</div>",
      "    </div>",
      "    <!-- /.progress-bar -->",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/Progressbar"
  },

  "QuestionAfterStyleTag_Snippet": {
    "prefix": "question.after",
    "body": [
      "<style name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "${0}",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionAfterStyleTag"
  },

  "QuestionAnswersEnd_Snippet": {
    "prefix": "question.answer.end",
    "body": [
      "<style name='survey.question.answers.end'> <![CDATA[",
      "\\@if not ec.simpleList",
      "\\@if not simple",
      "</tbody>",
      "\\@endif",
      "</\\$(tag)>",
      "\\@endif",
      "<!-- /.grid -->",
      "</div>",
      "<!-- /.answers -->]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionAnswersEnd"
  },

  "QuestionAnswerStart_Snippet": {
    "prefix": "question.answer.start",
    "body": [
      "<style name='survey.question.answers.start'> <![CDATA[",
      "<div class=\"answers \\$(answerClassNames)\">",
      "\\$(fir)",
      "\\@if not ec.simpleList",
      "<\\$(tag) class=\"grid \\$(gridClassNames)\" data-settings=\"\\$(gridOptions)\" data-height=\"\\${this.styles.ss.rowHeight if this.styles.ss.rowHeight else \"\"}\" summary=\"This table contains form elements to answer the survey question\">",
      "\\@if not simple",
      "<tbody>",
      "\\@endif",
      "\\@if not forceDesktop",
      "\\${v2_insertStyle('question.borderfix')}",
      "\\@endif",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionAnswerStart"
  },

  "QuestionBottomLegend_Snippet": {
    "prefix": "question.bot.legend",
    "body": [
      "<style name='question.bottom-legend'> <![CDATA[",
      "\\@if ec.simpleList",
      "    \\$(legends)",
      "\\@else",
      "\\@if not simple",
      "</tbody>",
      "<tbody>",
      "\\@endif",
      "\\@if this.styles.ss.colLegendHeight",
      "    <\\$(tag) class=\"row row-col-legends row-col-legends-bottom \\${\"GtTenColumns \" if ec.colCount > 10 else \"\"}colCount-\\$(colCount)\" style=\"height:\\${this.styles.ss.colLegendHeight};\">",
      "\\@else",
      "    <\\$(tag) class=\"row row-col-legends row-col-legends-bottom \\${\"GtTenColumns \" if ec.colCount > 10 else \"\"}colCount-\\$(colCount)\">",
      "\\@endif",
      "    \\$(left)",
      "    \\$(legends)",
      "    \\$(right)",
      "</\\$(tag)>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionBottomLegend"
  },

  "QuestionBottomLegendItem_Snippet": {
    "prefix": "question.bot.legend.item",
    "body": [
      "<style name='question.bottom-legend-item'> <![CDATA[",
      "\\@if ec.simpleList",
      "    <div id=\"\\$(this.label)_\\$(col.label)\" class=\"legend col-legend col-legend-bottom col-legend-basic \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(col.styles.ss.colClassNames) \\${col.group.styles.ss.groupClassNames if col.group else \"\"} \\$(colError)\">",
      "        \\$(text)",
      "    </div>",
      "\\@else",
      "\\@if this.styles.ss.colWidth",
      "    <\\$(tag) scope=\"col\" id=\"\\$(this.label)_\\$(col.label)\" class=\"cell nonempty legend col-legend col-legend-bottom col-legend-basic \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(col.styles.ss.colClassNames) \\${col.group.styles.ss.groupClassNames if col.group else \"\"} \\$(colError)\" style=\"width:\\${this.styles.ss.colWidth}; min-width:\\${this.styles.ss.colWidth}\">",
      "        \\$(text)",
      "    </\\$(tag)>",
      "\\@else",
      "    <\\$(tag) scope=\"col\" id=\"\\$(this.label)_\\$(col.label)\" class=\"cell nonempty legend col-legend col-legend-bottom col-legend-basic \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(col.styles.ss.colClassNames) \\${col.group.styles.ss.groupClassNames if col.group else \"\"} \\$(colError)\">",
      "        \\$(text)",
      "    </\\$(tag)>",
      "\\@endif",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionBottomLegendItem"
  },

  "QuestionColLegendRow_Snippet": {
    "prefix": "question.col.legend.row",
    "body": [
      "<style name='question.col-legend-row'> <![CDATA[",
      "\\@if ec.simpleList",
      "    \\$(legends)",
      "\\@else",
      "\\@if this.styles.ss.colLegendHeight",
      "    <\\$(tag) class=\"row row-col-legends row-col-legends-middle \\${\"GtTenColumns \" if ec.colCount > 10 else \"\"}colCount-\\$(colCount)\" style=\"height:\\${this.styles.ss.colLegendHeight};\">",
      "\\@else",
      "    <\\$(tag) class=\"row row-col-legends row-col-legends-middle \\${\"GtTenColumns \" if ec.colCount > 10 else \"\"}colCount-\\$(colCount)\">",
      "\\@endif",
      "    \\$(left)",
      "    \\$(legends)",
      "    \\$(right)",
      "</\\$(tag)>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionColLegendRow"
  },

  "QuestionColLegendRowItem_Snippet": {
    "prefix": "question.col.legend.row.item",
    "body": [
      "<style name='question.col-legend-row-item'> <![CDATA[",
      "\\@if ec.simpleList",
      "    <div class=\"legend col-legend col-legend-middle col-legend-basic \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse q-col-legend-row-item \\$(col.styles.ss.colClassNames) \\${col.group.styles.ss.groupClassNames if col.group else \"\"} \\$(colError)\">",
      "        \\$(text)",
      "    </div>",
      "\\@else",
      "\\@if this.styles.ss.colWidth",
      "    <\\$(tag) scope=\"col\" class=\"cell nonempty legend col-legend col-legend-middle col-legend-basic \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse q-col-legend-row-item \\$(col.styles.ss.colClassNames) \\${col.group.styles.ss.groupClassNames if col.group else \"\"} \\$(colError)\" style=\"width:\\${this.styles.ss.colWidth}; min-width:\\${this.styles.ss.colWidth}\">",
      "        \\$(text)",
      "    </\\$(tag)>",
      "\\@else",
      "    <\\$(tag) scope=\"col\" class=\"cell nonempty legend col-legend col-legend-middle col-legend-basic \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse q-col-legend-row-item \\$(col.styles.ss.colClassNames) \\${col.group.styles.ss.groupClassNames if col.group else \"\"} \\$(colError)\">",
      "        \\$(text)",
      "    </\\$(tag)>",
      "\\@endif",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionColLegendRowItem"
  },

  "QuestionComment_Snippet": {
    "prefix": "question.comment",
    "body": [
      "<style name='survey.question.instructions'> <![CDATA[",
      "<h2 title=\"@(instructions)\" class=\"instruction-text\">\\$(comment)</h2>",
      "<!-- /.instruction-text -->",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionComment"
  },

  "QuestionElement_Snippet": {
    "prefix": "question.element",
    "body": [
      "<style name='question.element'> <![CDATA[",
      "\\@if ec.simpleList",
      "<div class=\"element \\$(rowStyle) \\$(levels) \\$(extraClasses) \\${col.group.styles.ss.groupClassNames if col.group else (row.group.styles.ss.groupClassNames if row.group else \"\")} \\$(col.styles.ss.colClassNames) \\$(row.styles.ss.rowClassNames) \\${\"clickableCell\" if isClickable else \"\"}\"\\$(extra)>",
      "    \\${v2_insertStyle('el.label.start')}",
      "    \\$(text)",
      "    \\${v2_insertStyle('el.label.end')}",
      "</div>",
      "\\@else",
      "<\\$(tag) \\$(headers) class=\"cell nonempty element \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(extraClasses) \\${col.group.styles.ss.groupClassNames if col.group else (row.group.styles.ss.groupClassNames if row.group else \"\")} \\$(col.styles.ss.colClassNames) \\$(row.styles.ss.rowClassNames) \\${\"clickableCell\" if isClickable else \"\"}\"\\$(extra)>",
      "    \\${v2_insertStyle('el.label.start')}",
      "    \\$(text)",
      "    \\${v2_insertStyle('el.label.end')}",
      "</\\$(tag)>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionElement"
  },

  "QuestionFooter_Snippet": {
    "prefix": "question.footer",
    "body": [
      "<style name='question.footer'> <![CDATA[",
      "\\${v2_insertStyle('survey.question.answers.end')}",
      "</div>",
      "<!-- /.question -->]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionFooter"
  },

  "QuestionGroup1_Snippet": {
    "prefix": "question.group.1",
    "body": [
      "<style name='question.group'> <![CDATA[",
      "<\\$(tagRow) class=\"row row-group row-group-1 rowGroup group1\">",
      "    <\\$(tagCell) scope=\"rowgroup\" colspan=\"\\$(span)\" id=\"\\$(this.label)_\\$(group.label)\" class=\"cell nonempty legend row-legend row-legend-left row-legend-group \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"row-legend-group-space\" if row.index!=0 and ec.haveRightLegend and ec.haveLeftLegend else \"border-collapse\"} \\$(group.styles.ss.groupClassNames)\">",
      "        \\$(text)",
      "    </\\$(tagCell)>",
      "</\\$(tagRow)>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionGroup1"
  },

  "QuestionGroup2_Snippet": {
    "prefix": "question.group.2",
    "body": [
      "<style name='question.group-2'> <![CDATA[",
      "<\\$(tagRow) class=\"row row-group row-group-2 rowGroup group2\">",
      "    <\\$(tagCell) scope=\"rowgroup\" colspan=\"\\$(span)\" id=\"\\$(this.label)_\\$(group.label)\" class=\"cell nonempty legend row-legend row-legend-left row-legend-group \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(group.styles.ss.groupClassNames)\">",
      "        \\$(text)",
      "    </\\$(tagCell)>",
      "</\\$(tagRow)>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionGroup2"
  },

  "QuestionGroup3_Snippet": {
    "prefix": "question.group.3",
    "body": [
      "<style name='question.group-3'> <![CDATA[",
      "<\\$(tagRow) class=\"row row-group row-group-3 rowGroup group3\">",
      "    <\\$(tagCell) scope=\"rowgroup\" colspan=\"\\$(span)\" id=\"\\$(this.label)_\\$(group.label)\" class=\"cell nonempty legend row-legend row-legend-left row-legend-group \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(group.styles.ss.groupClassNames)\">",
      "        \\$(text)",
      "    </\\$(tagCell)>",
      "</\\$(tagRow)>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionGroup3"
  },

  "QuestionGroupColumn_Snippet": {
    "prefix": "question.group.col",
    "body": [
      "<style name='question.group-column'> <![CDATA[",
      "<\\$(tag) class=\"row row-col-legends row-col-legends-top colGroup\">",
      "    \\$(left)",
      "    \\$(elements)",
      "    \\$(right)",
      "</\\$(tag)>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionGroupColumn"
  },

  "QuestionGroupColumnCell_Snippet": {
    "prefix": "question.group.col.cell",
    "body": [
      "<style name='question.group-column-cell'> <![CDATA[",
      "<\\$(tag) scope=\"colgroup\" colspan=\"\\$(span)\" id=\"\\$(this.label)_\\$(group.label)\" class=\"cell nonempty legend col-legend col-legend-top col-legend-group \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"col-legend-space\" if this.grouping.cols and ec.haveLeftLegend and ec.haveRightLegend else \"border-collapse\"} \\$(group.styles.ss.groupClassNames)\">",
      "    \\$(text)",
      "</\\$(tag)>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionGroupColumnCell"
  },

  "QuestionHeader_Snippet": {
    "prefix": "question.start",
    "body": [
      "<style name='question.header'> <![CDATA[",
      "<div id=\"question_\\${this.label}\" class=\"question \\${'disabledElement ' if why and gv.debug.qa else ''}\\${this.getName().lower()} label_\\${this.label} \\$(this.styles.ss.questionClassNames) \\$(hasError)\"\\${' role=\"radiogroup\" aria-labelledby=\"' + (this.label + '_' + ec.enabledCols[0].label if ec.haveColLegend else 'question_text_' + this.label) + '\"' if ec.simpleList else ''}>",
      "\\${v2_insertStyle('survey.question')}",
      "\\$(error)",
      "\\${v2_insertStyle('survey.question.instructions')}",
      "\\${v2_insertStyle('survey.question.answers.start')}",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionHeader"
  },

  "QuestionLeft_Snippet": {
    "prefix": "question.left",
    "body": [
      "<style name='question.left'> <![CDATA[",
      "\\@if this.styles.ss.legendColWidth",
      "    <\\$(tag) scope=\"row\" class=\"cell nonempty legend row-legend row-legend-left \\${\"row-legend-both \" if ec.haveRightLegend and ec.haveLeftLegend else \"\"}row-legend-basic \\${\"mobile-left-row-legend \" if force else \"\"}\\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"row-legend-both-space \" if ec.haveRightLegend and ec.haveLeftLegend and (not row.group or not row.index==0) else \"border-collapse \"} \\$(row.styles.ss.rowClassNames)\" style=\"width:\\${this.styles.ss.legendColWidth}; min-width:\\${this.styles.ss.legendColWidth}\">",
      "        \\$(text)",
      "    </\\$(tag)>",
      "\\@else",
      "    <\\$(tag) scope=\"row\" class=\"cell nonempty legend row-legend row-legend-left \\${\"row-legend-both \" if ec.haveRightLegend and ec.haveLeftLegend else \"\"}row-legend-basic \\${\"mobile-left-row-legend \" if force else \"\"}\\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"row-legend-both-space \" if ec.haveRightLegend and ec.haveLeftLegend and (row.group or not row.index==0) else \"border-collapse \"} \\$(row.styles.ss.rowClassNames)\">",
      "        \\$(text)",
      "    </\\$(tag)>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionLeft"
  },

  "QuestionLeftBlank_Snippet": {
    "prefix": "question.left.blank",
    "body": [
      "<style name='question.left-blank-legend'> <![CDATA[",
      "<\\$(tag) class=\"cell empty empty-left empty-\\$(pos) unused \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse\"></\\$(tag)>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionLeftBlank"
  },

  "QuestionNaRow_Snippet": {
    "prefix": "question.na.row",
    "body": [
      "<style name='question.na.row'> <![CDATA[",
      "\\@if ec.simpleList",
      "\\$(naElement)",
      "\\@else",
      "<\\$(tagRow) class=\"row row-elements row-no-answer \\$(rowStyle)\">",
      "\\$(left)",
      "<\\$(tagCell) colspan=\"\\$(colCount)\" \\$(headers) class=\"cell nonempty element cell-no-answer \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(extraClasses) \\$(col.styles.ss.colClassNames) \\$(row.styles.ss.rowClassNames) clickableCell\" \\$(extra)>",
      "    \\$(naElement)",
      "</\\$(tagCell)>",
      "\\$(right)",
      "</\\$(tagRow)>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionNaRow"
  },

  "QuestionRight_Snippet": {
    "prefix": "question.right",
    "body": [
      "<style name='question.right'> <![CDATA[",
      "\\@if this.styles.ss.legendColWidth",
      "    <\\$(tag) scope=\"row\" class=\"cell nonempty legend row-legend row-legend-right \\${\"row-legend-both \" if ec.haveRightLegend and ec.haveLeftLegend else \"\"}row-legend-basic \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(row.styles.ss.rowClassNames)\" style=\"width:\\${this.styles.ss.legendColWidth}; min-width:\\${this.styles.ss.legendColWidth}\">",
      "        \\$(text)",
      "    </\\$(tag)>",
      "\\@else",
      "    <\\$(tag) scope=\"row\" class=\"cell nonempty legend row-legend row-legend-right \\${\"row-legend-both \" if ec.haveRightLegend and ec.haveLeftLegend else \"\"}row-legend-basic \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(row.styles.ss.rowClassNames)\">",
      "        \\$(text)",
      "    </\\$(tag)>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionRight"
  },

  "QuestionRightBlank_Snippet": {
    "prefix": "question.right.blank",
    "body": [
      "<style name='question.right-blank-legend'> <![CDATA[",
      "<\\$(tag) class=\"cell empty empty-right empty-\\$(pos) unused \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse\"></\\$(tag)>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionRightBlank"
  },

  "QuestionRow_Snippet": {
    "prefix": "question.row",
    "body": [
      "<style name='question.row'> <![CDATA[",
      "\\@if ec.simpleList",
      "\\$(elements)",
      "\\@else",
      "\\@if this.styles.ss.rowHeight",
      "    <\\$(tag) class=\"row row-elements \\$(style) colCount-\\$(colCount)\" style=\"height:\\${this.styles.ss.rowHeight};\">",
      "\\@else",
      "    <\\$(tag) class=\"row row-elements \\$(style) colCount-\\$(colCount)\">",
      "\\@endif",
      "\\$(left)",
      "\\$(elements)",
      "\\$(right)",
      "</\\$(tag)>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionRow"
  },

  "QuestionTitle_Snippet": {
    "prefix": "question.title",
    "body": [
      "<style name='survey.question'> <![CDATA[",
      "<h1 title=\"@(question)\" class=\"question-text\" id=\"question_text_\\${this.label}\">\\${this.styles.html.showNumber and (str(number) + '. ') or ''}\\$(title)</h1>",
      "<!-- /.question-text -->",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionTitle"
  },

  "QuestionTopLegend_Snippet": {
    "prefix": "question.top.legend",
    "body": [
      "<style name='question.top-legend'> <![CDATA[",
      "\\@if ec.simpleList",
      "    \\$(legends)",
      "\\@else",
      "\\@if this.styles.ss.colLegendHeight",
      "    <\\$(tag) class=\"row row-col-legends row-col-legends-top \\${\"mobile-top-row-legend \" if mobileOnly else \"\"}\\${\"GtTenColumns \" if ec.colCount > 10 else \"\"}colCount-\\$(colCount)\" style=\"height:\\${this.styles.ss.colLegendHeight};\">",
      "\\@else",
      "    <\\$(tag) class=\"row row-col-legends row-col-legends-top \\${\"mobile-top-row-legend \" if mobileOnly else \"\"}\\${\"GtTenColumns \" if ec.colCount > 10 else \"\"}colCount-\\$(colCount)\">",
      "\\@endif",
      "    \\$(left)",
      "    \\$(legends)",
      "    \\$(right)",
      "</\\$(tag)>",
      "\\@if not simple",
      "</tbody>",
      "<tbody>",
      "\\@endif",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionTopLegend"
  },

  "QuestionTopLegendItem_Snippet": {
    "prefix": "question.top.legend.item",
    "body": [
      "<style name='question.top-legend-item'> <![CDATA[",
      "\\@if ec.simpleList",
      "    <div id=\"\\$(this.label)_\\$(col.label)\" class=\"legend col-legend col-legend-top col-legend-basic \\$(levels) \\${\"col-legend-space\" if this.grouping.cols and (col.group or col.index!=0) and ec.haveLeftLegend and ec.haveRightLegend else \"border-collapse\"} \\$(col.styles.ss.colClassNames) \\${col.group.styles.ss.groupClassNames if col.group else \"\"} \\$(colError)\">",
      "        \\$(text)",
      "    </div>",
      "\\@else",
      "\\@if this.styles.ss.colWidth",
      "    <\\$(tag) scope=\"col\" id=\"\\$(this.label)_\\$(col.label)\" class=\"cell nonempty legend col-legend col-legend-top col-legend-basic \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"col-legend-space\" if this.grouping.cols and (col.group or col.index!=0) and ec.haveLeftLegend and ec.haveRightLegend else \"border-collapse\"} \\$(col.styles.ss.colClassNames) \\${col.group.styles.ss.groupClassNames if col.group else \"\"} \\$(colError)\" style=\"width:\\${this.styles.ss.colWidth}; min-width:\\${this.styles.ss.colWidth}\">",
      "        \\$(text)",
      "    </\\$(tag)>",
      "\\@else",
      "    <\\$(tag) scope=\"col\" id=\"\\$(this.label)_\\$(col.label)\" class=\"cell nonempty legend col-legend col-legend-top col-legend-basic \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"col-legend-space\" if this.grouping.cols and (col.group or col.index!=0) and ec.haveLeftLegend and ec.haveRightLegend else \"border-collapse\"} \\$(col.styles.ss.colClassNames) \\${col.group.styles.ss.groupClassNames if col.group else \"\"} \\$(colError)\">",
      "        \\$(text)",
      "    </\\$(tag)>",
      "\\@endif",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/QuestionTopLegendItem"
  },

  "RespviewClientCSS_Snippet": {
    "prefix": "resp.client.css",
    "body": [
      "<style name=\"respview.client.css\"> <![CDATA[",
      "<link rel=\"shortcut icon\" href=\"/survey/selfserve/NIQ_Favicon.ico\" type=\"image/x-icon\">",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/RespviewClientCSS"
  },

  "RespviewClientJS_Snippet": {
    "prefix": "resp.client.js",
    "body": [
      "<style name=\"respview.client.js\"> <![CDATA[",
      "<script type=\"text/javascript\" src=\"/survey/lib/local/nielsenisq/v10/timeme.min.js\"></script>",
      "<script type=\"text/javascript\" src=\"/survey/lib/local/nielsenisq/v10/loi.js\"></script>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/RespviewClientJS"
  },

  "RespviewClientMeta_Snippet": {
    "prefix": "resp.client.meta",
    "body": [
      "<style name=\"respview.client.meta\"> <![CDATA[",
      "",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/RespviewClientMeta"
  },

  "SurveyHeader_Snippet": {
    "prefix": "survey.head",
    "body": [
      "<style name='survey.header'> <![CDATA[",
      "<div class=\"page-header\"></div>",
      "<!-- /.page-header -->",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/SurveyHeader"
  },

  "SurveyLogo_Snippet": {
    "prefix": "survey.logo",
    "body": [
      "<style name='survey.logo'> <![CDATA[",
      "\\@if gv.inSurvey() and gv.survey.root.styles.ss.logoFile",
      "    <div class=\"logo logo-\\$(gv.survey.root.styles.ss.logoPosition)\">",
      "        <img src=\"/survey/\\$(gv.survey.root.styles.ss.logoFile)\" class=\"logo-image\" alt=\"Logo\" />",
      "    </div>",
      "    <!-- /.logo -->",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/SurveyLogo"
  },

  "SurveyRespviewFooter_Snippet": {
    "prefix": "survey.footer",
    "body": [
      "<style name='survey.respview.footer'> <![CDATA[",
      "<div class=\"footer\">\\${v2_insertStyle('survey.respview.footer.support')}</div>",
      "<!-- /.footer -->",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/SurveyRespviewFooter"
  },

  "SurveyRespviewFooterSupport_Snippet": {
    "prefix": "survey.footer.support",
    "body": [
      "<style cond=\"1\" name=\"survey.respview.footer.support\"><![CDATA[",
      "Copyright Ⓒ \\${time.strftime('%Y')} <span class=\"blue-n\" jstcache=\"0\"></span>NielsenIQ Consumer LLC. All Rights Reserved. <a href=\"@(PrivacyPolicyUrl)\" target=\"_blank\" rel=\"noopener\" jstcache=\"0\">@(PrivacyPolicy)</a>.&nbsp;|&nbsp;<a href=\"mailto: NielsenIQDecipherSupport@nielseniq.com;NielsenDecipherSupport@nielseniq.com\" target=\"_blank\" jstcache=\"0\"><i class=\"fa fa-icon-envelope-o\" aria-hidden=\"true\" jstcache=\"0\"></i></a>",
      "<!-- IE BLOCK -->",
      "<div class=\"block-ie hidden\" jstcache=\"0\">",
      "  <div jstcache=\"0\">\\${res.block_ie}</div>",
      "  <div jstcache=\"0\">",
      "    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" style=\"width:100px;\" jstcache=\"0\">    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" jstcache=\"0\"></path></svg>",
      "  </div>",
      "</div>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/SurveyRespviewFooterSupport"
  },

  "XmlBack_Snippet": {
    "prefix": "xml.back.btn",
    "body": [
      "<style name='button.goback'> <![CDATA[",
      "<input type=\"button\" id=\"btn_goback\" class=\"button back\" onClick=\"Survey.postControl('back2')\" value=\"&laquo; @(back)\" />",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/XmlBack"
  },

  "XmlButtons_Snippet": {
    "prefix": "xml.btn",
    "body": [
      "<style name='buttons'> <![CDATA[",
      "<div class=\"survey-buttons\">",
      "    \\$(left)",
      "    \\$(right)",
      "</div>",
      "<!-- #surveyButtons -->",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/XmlButtons"
  },

  "XmlCancel_Snippet": {
    "prefix": "xml.cancel",
    "body": ["<style name=\"button.cancel\"> <![CDATA[", "", "]]></style>"],
    "description": "XmlStyleSystem/XmlCancel"
  },

  "XmlContinue_Snippet": {
    "prefix": "xml.next.btn",
    "body": [
      "<style name='button.continue'> <![CDATA[",
      "<input type=\"submit\" name=\"continue\" id=\"btn_continue\" class=\"button continue\" value=\"@(continue) &raquo;\" onClick=\"var i = document.createElement('input');i.setAttribute('type', 'hidden');i.setAttribute('value', '1');i.setAttribute('name', '__has_javascript');document.forms.primary.appendChild(i);\"/>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/XmlContinue"
  },

  "XmlFinish_Snippet": {
    "prefix": "xml.finish",
    "body": [
      "<style name='button.finish'> <![CDATA[",
      "<input type=\"submit\" name=\"finish\" id=\"btn_finish\" class=\"button finish\" value=\"@(finish)\"  onClick=\"var i = document.createElement('input');i.setAttribute('type', 'hidden');i.setAttribute('value', '1');i.setAttribute('name', '__has_javascript');document.forms.primary.appendChild(i);\"/>",
      "]]></style>"
    ],
    "description": "XmlStyleSystem/XmlFinish"
  },

  "ChAccordion_Snippet": {
    "prefix": "ch.acco",
    "body": [
      "<style label=\"ch_accordion\" arg:accoOpen1=\"open\" name=\"question.header\"><![CDATA[",
      "<div class=\"ch-accordion\">",
      "  <div class=\"ch-accordion-item \\$(accoOpen1)\">",
      "    <div class=\"ch-accordion-button\">",
      "      <div class=\"ch-accordion-arrow\"></div>",
      "      <div>$1</div>",
      "    </div>",
      "    <div class=\"ch-accordion-content\">",
      "      <div style=\"padding: 10px;\">",
      "        $2",
      "      </div>",
      "    </div>",
      "  </div>",
      "</div>",
      "<div id=\"question_\\${this.label}\" class=\"question \\${'disabledElement ' if why and gv.debug.qa else ''}\\${this.getName().lower()} label_\\${this.label} \\$(this.styles.ss.questionClassNames) \\$(hasError)\"\\${' role=\"radiogroup\" aria-labelledby=\"' + (this.label + '_' + ec.enabledCols[0].label if ec.haveColLegend else 'question_text_' + this.label) + '\"' if ec.simpleList else ''}>",
      "\\${v2_insertStyle('survey.question')}",
      "\\$(error)",
      "\\${v2_insertStyle('survey.question.instructions')}",
      "\\${v2_insertStyle('survey.question.answers.start')}",
      "]]></style>",
      "<style label=\"ch_accordion_js\" name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "const accordionButtons = document.querySelectorAll('.ch-accordion-button');",
      "",
      "accordionButtons.forEach((button)=>{",
      "  const arrow = button.querySelector('.ch-accordion-arrow');",
      "  ",
      "  arrow.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M8.25 4.5l7.5 7.5-7.5 7.5\" /></svg>`;",
      "",
      "  const parentItem = button.parentElement;",
      "  if( parentItem.classList.contains('open') ){",
      "    openAccordion(parentItem);",
      "    arrow.style.transform = 'rotate(90deg)';",
      "  }",
      "",
      "  button.addEventListener('click', function () {",
      "    const accordionContent = this.nextElementSibling.querySelector('.ch-accordion-content');",
      "    const accordionItem = this.parentElement;",
      "    const openItem = document.querySelector('.ch-accordion-item.open');",
      "",
      "    if (openItem && openItem !== accordionItem) {",
      "      closeAccordion(openItem);",
      "    }",
      "",
      "    if (accordionItem.classList.contains('open')) {",
      "      closeAccordion(accordionItem);",
      "    } else {",
      "      openAccordion(accordionItem);",
      "    }",
      "  });",
      "});",
      "",
      "function openAccordion(accordionItem){",
      "  const content = accordionItem.querySelector('.ch-accordion-content');",
      "  accordionItem.classList.add('open');",
      "  content.style.maxHeight = '100%';",
      "",
      "  const arrow = accordionItem.querySelector('.ch-accordion-arrow');",
      "  arrow.style.transform = 'rotate(90deg)';",
      "}",
      "",
      "function closeAccordion(accordionItem){",
      "  const content = accordionItem.querySelector('.ch-accordion-content');",
      "  accordionItem.classList.remove('open');",
      "  content.style.maxHeight = null;",
      "",
      "  const arrow = accordionItem.querySelector('.ch-accordion-arrow');",
      "  arrow.style.transform = 'rotate(0deg)';",
      "}",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/ChAccordion"
  },

  "ChAccordionCopy_Snippet": {
    "prefix": "ch.acco.copy",
    "body": [
      "<style copy=\"ch_accordion\" arg:accoOpen1=\"open\" name=\"question.header\"/>",
      "<style copy=\"ch_accordion_js\" name=\"question.after\"/>"
    ],
    "description": "XmlStyleSystemCustom/ChAccordionCopy"
  },

  "CleanGroup_Snippet": {
    "prefix": "clean.group",
    "body": [
      "<style label=\"clean_group\" name=\"question.group\"><![CDATA[",
      "<\\$(tagRow) class=\"row row-group row-group-1 rowGroup group1\">",
      "    <\\$(tagCell) scope=\"rowgroup\" colspan=\"\\$(span)\" id=\"\\$(this.label)_\\$(group.label)\" class=\"cell nonempty legend row-legend row-legend-left row-legend-group \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"row-legend-group-space\" if row.index!=0 and ec.haveRightLegend and ec.haveLeftLegend else \"border-collapse\"} \\$(group.styles.ss.groupClassNames)\">",
      "      <div class=\"clean-group\">\\$(text)</div>",
      "    </\\$(tagCell)>",
      "</\\$(tagRow)>",
      "]]></style>",
      "<style label=\"clean_group_depth2\" name='question.group-2'> <![CDATA[",
      "<\\$(tagRow) class=\"row row-group row-group-2 rowGroup group2\">",
      "    <\\$(tagCell) scope=\"rowgroup\" colspan=\"\\$(span)\" id=\"\\$(this.label)_\\$(group.label)\" class=\"cell nonempty legend row-legend row-legend-left row-legend-group \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(group.styles.ss.groupClassNames)\">",
      "        <div class=\"clean-group-depth2\">\\$(text)</div>",
      "    </\\$(tagCell)>",
      "</\\$(tagRow)>",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/CleanGroup"
  },

  "CleanGroupCopy_Snippet": {
    "prefix": "clean.group.copy",
    "body": [
      "<style copy=\"clean_group\" name=\"question.group\"/>",
      "<style copy=\"clean_group_depth2\" name='question.group-2'/>"
    ],
    "description": "XmlStyleSystemCustom/CleanGroupCopy"
  },

  "CommentCallout_Snippet": {
    "prefix": "callout",
    "body": [
      "<style name='survey.question.instructions' label=\"comment_callout\" arg:calloutHeader=\"${1:[TAB1]}\"><![CDATA[",
      "<h2 title=\"@(instructions)\" class=\"instruction-text\">",
      "<div class=\"ch-callout\">\\$(calloutHeader)</div>",
      "<div class=\"ch-refer\">",
      "  <div class=\"ch-refer-content\">\\$(comment)</div>",
      "</div>",
      "<!-- /.instruction-text -->",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/CommentCallout"
  },

  "CommentCalloutCopy_Snippet": {
    "prefix": "callout.copy",
    "body": [
      "<style name='survey.question.instructions' copy=\"comment_callout\" arg:calloutHeader=\"${1:[TAB1]}\"/>"
    ],
    "description": "XmlStyleSystemCustom/CommentCalloutCopy"
  },

  "Detail_Snippet": {
    "prefix": "detail",
    "body": [
      "<style label=\"${1:[TAB1]}\" arg:detailsOpen=\"${2:open}\" arg:imgName=\"${3:[TAB3]}\" name=\"survey.question\"><![CDATA[",
      "<h1 title=\"@(question)\" class=\"question-text\" id=\"question_text_\\${this.label}\">",
      "  <div class=\"ch-showcard\">",
      "    <details \\$(detailsOpen)>",
      "      <summary>\\${res.detail_text}</summary>",
      "      <div class=\"img-div\">",
      "          <img src=\"\\${imgdr}/\\$(imgName)\" class=\"popup\"/>",
      "      </div>",
      "    </details>",
      "  </div>",
      "  \\${this.styles.html.showNumber and (str(number) + '. ') or ''}\\$(title)",
      "</h1>",
      "<!-- /.question-text -->",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/Detail"
  },

  "DetailOpenClose_Snippet": {
    "prefix": "detail.oc",
    "body": [
      "<res label=\"detail_open\">Open</res>",
      "<res label=\"detail_close\">Close</res>",
      "",
      "<style>",
      ".ch-showcard > summary {",
      "  list-style: none;",
      "}",
      "",
      ".ch-showcard > summary::-webkit-details-marker {",
      "  display: none;",
      "}",
      "",
      ".ch-showcard > summary::marker {",
      "  display: none;",
      "}",
      "",
      ".ch-showcard > details > summary {",
      "  list-style-type: none;",
      "}",
      "",
      "details > summary::-webkit-details-marker {",
      "  display: none;",
      "}",
      "",
      ".ch-showcard > details[open] summary::before {",
      "  content: \"▲ [\\${res.detail_close}]\";",
      "  margin-right: 20px;",
      "}",
      "",
      ".ch-showcard > details:not([open]) summary::before {",
      "  content: \"▼ [\\${res.detail_open}]\";",
      "  margin-right: 20px;",
      "}",
      "</style>"
    ],
    "description": "XmlStyleSystemCustom/DetailOpenClose"
  },

  "DetailRes_Snippet": {
    "prefix": "detail.res",
    "body": [
      "<res label=\"detail_text\">보기 카드 <span style=\"font-size: 1.1rem; font-weight: normal;\">(클릭하면 보이거나 숨겨집니다)</span></res>"
    ],
    "description": "XmlStyleSystemCustom/DetailRes"
  },

  "DoNotShowGroup_Snippet": {
    "prefix": "no.group",
    "body": ["<style name=\"question.group\"/>"],
    "description": "XmlStyleSystemCustom/DoNotShowGroup"
  },

  "DQQACodes_Snippet": {
    "prefix": "qacodes",
    "body": [
      "<style name='survey.question.answers.start' mode=\"before\"> <![CDATA[",
      "\\@if gv.hasQA(True) and gv.showCms()",
      "<div class=\"surveyWarning\">",
      "    <div class=\"info\">",
      "        <blockquote style=\"text-align: center;\">The below results will not show to respondents. It is shown only when \"QA Codes\" are turned on.</blockquote>",
      "    </div>",
      "</div>",
      "\\@else",
      "<style>",
      ".answers { display: none !important; }",
      "</style>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/DQQACodes"
  },

  "ElementTextSelectCustom_Snippet": {
    "prefix": "el.text.select.xml",
    "body": [
      "<style arg:optionItems=\"${1:range(2021, 2025)}\" name=\"el.text\"><![CDATA[",
      "\\@if row.styles.ss.preText or this.styles.ss.preText",
      "<span class=\"pre-text\">",
      "  \\${row.styles.ss.preText or this.styles.ss.preText or \"\"}&nbsp;",
      "</span>                 ",
      "\\@endif",
      "<select name=\"\\$(name)\" class=\"input dropdown\" style=\"min-width:70px;\">",
      "<option></option>",
      "\\@for item in eval(optionItems)",
      "<option value=\"\\$(item)\" \\${\"SELECTED\" if str(item)==ec.value else \"\"}>\\$(item)</option> ",
      "\\@end",
      "</select>",
      "\\@if row.styles.ss.postText or this.styles.ss.postText",
      "<span class=\"post-text\">",
      "  &nbsp;\\${row.styles.ss.postText or this.styles.ss.postText or \"\"}",
      "</span>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/ElementTextSelectCustom"
  },

  "ElementTextSelectCustomCopy_Snippet": {
    "prefix": "el.text.select",
    "body": [
      "<style copy=\"text_to_select\" arg:optionItems=\"${1:range(2021, 2025)}\" name=\"el.text\"/>"
    ],
    "description": "XmlStyleSystemCustom/ElementTextSelectCustomCopy"
  },

  "FlexMode_Snippet": {
    "prefix": "flex.mode",
    "body": [
      "<style name=\"question.left\"><![CDATA[",
      "  <div style=\"display: flex; margin-bottom: 10px; align-content: center; align-items: center;\">",
      "    <span class=\"hidden\">\\$(text)</span>",
      "]]></style>",
      "<style name=\"question.right\"><![CDATA[",
      "  </div>",
      "]]></style>",
      "<style name=\"question.element\"><![CDATA[",
      "  <span class=\"hidden\">",
      "  \\${v2_insertStyle('el.label.start')}",
      "  \\${v2_insertStyle('el.label.end')}",
      "  </span>",
      "  \\$(text)",
      "]]></style>",
      "<style name=\"question.top-legend\"/>"
    ],
    "description": "XmlStyleSystemCustom/FlexMode"
  },

  "Hangle_Snippet": {
    "prefix": "han",
    "body": [
      "<style name=\"page.head\" label=\"hangle_css\"><![CDATA[",
      "<style>",
      ".text-input {",
      "  text-align: right;",
      "  max-width: 100px !important;",
      "}",
      "",
      ".hangle-text {",
      "  height:25px;",
      "  text-align: right;",
      "}",
      "",
      ".hanchange {",
      "  width: fit-content;",
      "}",
      "",
      "\\@media (max-width: 768px) {",
      "  .text-input {",
      "    max-width: 100% !important;",
      "  }",
      "  ",
      "  .show-hangle {",
      "    text-align: center;",
      "  }",
      "",
      "  .hanchange {",
      "    width: 100%;",
      "  }",
      "}",
      "</style>",
      "]]></style>",
      "<style label=\"hangleConverter\" arg:hanPostText=\"${1:[TAB1]}\" name=\"question.after\" wrap=\"ready\"><![CDATA[",
      "han('', '\\$(hanPostText)');",
      "//han('0000', '\\$(hanPostText)'); //만원 단위",
      "]]></style>",
      "<style label=\"hangleClass\" name=\"el.text\"><![CDATA[",
      "<div class=\"hanchange\">",
      "  <div>\\${row.styles.ss.preText if not row.styles.ss.preText == None else ''}&nbsp;</div>",
      "  <div class=\"han-input-div\" style=\"gap: 0 !important;\">",
      "    <div style=\"display: flex; gap: 10px; align-items: center;\">",
      "      <input type=\"number\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"\\$(value)\" size=\"\\$(size)\" class=\"input text-input\" \\$(extra)/>",
      "      <span>\\${row.styles.ss.postText if not row.styles.ss.postText == None else ''}</span>",
      "    </div>",
      "  </div>",
      "\\@if True",
      "  <div class=\"hangle-text\">",
      "    <span class=\"hangle-span\"></span>",
      "  </div>",
      "\\@endif",
      "</div>",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/Hangle"
  },

  "HangleCopy_Snippet": {
    "prefix": "han.copy",
    "body": [
      "<style name=\"page.head\" copy=\"hangle_css\"/>",
      "<style name=\"question.after\" wrap=\"ready\" arg:hanPostText=\"${1:[TAB1]}\" copy=\"hangleConverter\"/>",
      "<style name=\"el.text\" copy=\"hangleClass\"/>"
    ],
    "description": "XmlStyleSystemCustom/HangleCopy"
  },

  "HideElements_Snippet": {
    "prefix": "hide.el",
    "body": [
      "<style label=\"hideElements\" name=\"question.element\"><![CDATA[",
      "\\@if ec.simpleList",
      "<div class=\"element \\$(rowStyle) \\$(levels) \\$(extraClasses) ",
      "\\${col.group.styles.ss.groupClassNames ",
      "if col.group ",
      "else",
      "  (row.group.styles.ss.groupClassNames if row.group else \"\")}",
      "  \\$(col.styles.ss.colClassNames) \\$(row.styles.ss.rowClassNames)",
      "\\${\"clickableCell\" if isClickable else \"\"}\"\\$(extra)>",
      "      \\${v2_insertStyle('el.label.start')}    ",
      "\\${v2_insertStyle('el.label.end')}",
      "</div>",
      "\\@else    ",
      "<\\$(tag) \\$(headers) class=\"cell nonempty element \\$(levels) ",
      "\\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(extraClasses) ",
      "\\${col.group.styles.ss.groupClassNames ",
      "if col.group ",
      "else",
      "  (row.group.styles.ss.groupClassNames if row.group else \"\")} ",
      "\\$(col.styles.ss.colClassNames) \\$(row.styles.ss.rowClassNames)",
      "  \\${\"clickableCell\" if isClickable else \"\"}\"\\$(extra)> ",
      "    \\${v2_insertStyle('el.label.start')}",
      "      \\${v2_insertStyle('el.label.end')}",
      "</\\$(tag)>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/HideElements"
  },

  "HideElementsCopy_Snippet": {
    "prefix": "hide.el.copy",
    "body": [
      "<style copy=\"hideElements\" name=\"question.element\" rows=\"${1:[TAB1]}\" cols=\"${2:[TAB2]}\" cond=\"${3:[TAB3]}\"/>"
    ],
    "description": "XmlStyleSystemCustom/HideElementsCopy"
  },

  "ImageUploadStyle_Snippet": {
    "prefix": "custom.image.upload",
    "body": [
      "<checkbox ",
      "  label=\"${1:[QID]}_title\"",
      "  atleast=\"0\"",
      "  ss:questionClassNames=\"sp-custom-btn btn-mw-500\">",
      "  <title><div class=\"q-name\">${1:[QID]}</div> ${2:[TITLE]}</title>",
      "  <validate>",
      "qid_number = range(1,5+1)",
      "if ${1:[QID]}_title.na :",
      "  for x in qid_number :",
      "    allQuestions['${1:[QID]}_%s'%(x)].val = None",
      "else :",
      "  if all(allQuestions['${1:[QID]}_%s'%(x)].val == None or allQuestions['${1:[QID]}_%s'%(x)].unsafe_val.strip() == '' for x in qid_number) :",
      "    error(\"Please check the image again.\")",
      "  </validate>",
      "",
      "  <row label=\"na\" ss:rowClassNames=\"no-upload\">Do not upload</row>",
      "  <style name=\"survey.question.answers.end\"><![CDATA[",
      "\\@if not ec.simpleList",
      "  \\@if not simple",
      "  </tbody>",
      "  \\@endif",
      "  </\\$(tag)>",
      "  \\@endif",
      "  <!-- /.grid -->",
      "<div class=\"upload-image-container\">",
      "\\@for x in [1, 2, 3, 4, 5]",
      "    <div class=\"upload-image-row image-row-\\${x}\">",
      "      <div class=\"upload-image-title\">Upload Image \\${x}</div>",
      "      <div class=\"upload-image-btn\"></div>",
      "    </div>",
      "\\@end",
      "</div>",
      "  </div>",
      "  <!-- /.answers -->",
      "]]></style>",
      "  <style name=\"question.after\"><![CDATA[",
      "<script>",
      "window.addEventListener(\"DOMContentLoaded\", ()=>{",
      "  const imageUpload = document.querySelectorAll('.dq-imgupload');",
      "  const btnDom = document.querySelectorAll('.upload-image-btn');",
      "",
      "  imageUpload.forEach((upload, index)=>{",
      "    const btn = upload.querySelector('.dq-imgupload-button');",
      "    const preview = upload.querySelector('.dq-imgupload-preview');",
      "    btnElement = btnDom[index];",
      "    btnElement.appendChild(btn);",
      "    btnElement.appendChild(preview);",
      "",
      "    btnElement.addEventListener('click', (event)=>{",
      "      if( preview.style.display !== 'block' ){",
      "        btn.click();",
      "      }",
      "    });",
      "  });",
      "",
      "  const dontUpload = document.querySelector('.no-upload');",
      "  const imageContainer = document.querySelector('.upload-image-container');",
      "",
      "  const containerHandler = ()=>{",
      "    const inputCheckBox = dontUpload.querySelector('input');",
      "    if( inputCheckBox.checked ){",
      "      imageContainer.style.display = \"none\";",
      "    }else{",
      "      imageContainer.style.display = \"\";",
      "    }",
      "  }",
      "",
      "",
      "  dontUpload.addEventListener('click', containerHandler);",
      "  containerHandler();",
      "});",
      "</script>",
      "<style>",
      ".upload-image-container {",
      "  max-width: 500px;",
      "  width: 100%;",
      "  display: flex;",
      "  flex-direction: column;",
      "  gap: 5px;",
      "}",
      "",
      ".upload-image-row {",
      "  border: 1px solid #ccc;",
      "  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);",
      "  padding: 5px;",
      "  border-radius: 7px;",
      "  cursor: pointer;",
      "  transition: background-color 0.5s;",
      "}",
      "",
      ".upload-image-row:hover {",
      "  background-color: #b7ceff;",
      "}",
      "",
      ".upload-image-title {",
      "  text-align: center;",
      "  font-size: 1.2rem;",
      "  font-weight: bold;",
      "  width: 100%;",
      "  padding: 5px;",
      "  display: flex;",
      "  align-items: center;",
      "  justify-content: center;",
      "}",
      "",
      "",
      "",
      ".dq-imgupload-button {",
      "  max-width: 40px;",
      "  max-height: 40px;",
      "  margin: 0 auto;",
      "  pointer-events: none;",
      "}",
      "",
      ".icon.fa-icon-camera {",
      "  margin: unset;",
      "  display: flex;",
      "  justify-content: center;",
      "  align-items: center;",
      "  height: 100%; ",
      "}",
      "",
      ".fa-icon-camera:before {",
      "  font-size: 15px;",
      "}",
      "",
      ".dq-imgupload-preview {",
      "  zoom: 0.7;",
      "}",
      "</style>",
      "]]></style>",
      "</checkbox>",
      "",
      "<image label=\"${1:[QID]}_1\" imgupload:providenoanswer=\"0\" optional=\"1\" ss:questionClassNames=\"hidden\" sst=\"0\" uses=\"imgupload.1\">",
      "  <title>Image1</title>",
      "</image>",
      "",
      "<image label=\"${1:[QID]}_2\" imgupload:providenoanswer=\"0\" optional=\"1\" ss:questionClassNames=\"hidden\" sst=\"0\" uses=\"imgupload.1\">",
      "  <title>Image2</title>",
      "</image>",
      "",
      "<image label=\"${1:[QID]}_3\" imgupload:providenoanswer=\"0\" optional=\"1\" ss:questionClassNames=\"hidden\" sst=\"0\" uses=\"imgupload.1\">",
      "  <title>Image3</title>",
      "</image>",
      "",
      "<image label=\"${1:[QID]}_4\" imgupload:providenoanswer=\"0\" optional=\"1\" ss:questionClassNames=\"hidden\" sst=\"0\" uses=\"imgupload.1\">",
      "  <title>Image4</title>",
      "</image>",
      "",
      "<image label=\"${1:[QID]}_5\" imgupload:providenoanswer=\"0\" optional=\"1\" ss:questionClassNames=\"hidden\" sst=\"0\" uses=\"imgupload.1\">",
      "  <title>Image5</title>",
      "</image>",
      "",
      "<suspend/>"
    ],
    "description": "XmlStyleSystemCustom/ImageUploadStyle"
  },

  "NoElementsInput_Snippet": {
    "prefix": "no.el.ip",
    "body": [
      "<style label=\"no_els_input\" arg:numberTitle=\"$0\" name=\"el.text\"><![CDATA[",
      "<div class=\"no-rows-input\">",
      "  <div class=\"number-header\">\\$(numberTitle)</div>",
      "  <div class=\"number-inputs\">",
      "    <span>\\${row.styles.ss.preText if not row.styles.ss.preText == None else ''}</span>",
      "    <div class=\"han-input-div\" style=\"gap: 0 !important;\">",
      "      <div style=\"display: flex; gap: 10px; align-items: center;\">",
      "        <input type=\"number\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"\\$(value)\" size=\"\\$(size)\" class=\"input text-input\" \\$(extra)/>",
      "        <span>\\${row.styles.ss.postText if not row.styles.ss.postText == None else ''}</span>",
      "      </div>",
      "    </div>",
      "  </div>",
      "</div>",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/NoElementsInput"
  },

  "NoElementText_Snippet": {
    "prefix": "no.el.text",
    "body": [
      "<style label=\"no_els_text\" arg:textTitle=\"$0\" name=\"el.text\"><![CDATA[",
      "<div class=\"no-rows-input\">",
      "  <div class=\"number-header\">\\$(textTitle)</div>",
      "  <div class=\"number-inputs\">",
      "    <div class=\"input-container\">",
      "      <span>\\${row.styles.ss.preText if not row.styles.ss.preText == None else ''}</span>",
      "      <input type=\"text\" name=\"\\$(name)\" id=\"\\$(id)\" value=\"\\$(value)\" size=\"\\$(size)\" class=\"input text-input\" \\$(extra)/>",
      "      <span>\\${row.styles.ss.postText if not row.styles.ss.postText == None else ''}</span>",
      "    </div>",
      "  </div>",
      "</div>",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/NoElementText"
  },

  "NoElementTextCopy_Snippet": {
    "prefix": "no.el.text.copy",
    "body": [
      "<style copy=\"no_els_text\" arg:textTitle=\"$0\" name=\"el.text\"/>"
    ],
    "description": "XmlStyleSystemCustom/NoElementTextCopy"
  },

  "NoRowsInputCopy_Snippet": {
    "prefix": "no.el.ip.copy",
    "body": [
      "<style copy=\"no_els_input\" arg:numberTitle=\"$0\" name=\"el.text\"/>"
    ],
    "description": "XmlStyleSystemCustom/NoRowsInputCopy"
  },

  "NumberTotalCustom_Snippet": {
    "prefix": "custom.sum",
    "body": [
      "<style name=\"page.head\" label=\"custom_sum_css\"><![CDATA[",
      "<style>",
      ".calc-result input {",
      "  pointer-events: none;",
      "  background-color: #cccccc52;",
      "  color: #e7046f;",
      "  font-style: italic;",
      "  font-weight: 2px;",
      "  text-align: center;",
      "}",
      "",
      ".calc-result {",
      "  border-top: 1px solid #ccc;",
      "  margin-top: 10px;",
      "}",
      "</style>",
      "]]></style>",
      "<style name=\"question.after\" label=\"custom_sum_js\"><![CDATA[",
      "<script>",
      "const parentElement = document.querySelector('.label_\\$(this.label)');",
      "const resultInput = parentElement.querySelector('.calc-result input');",
      "",
      "resultInput.readOnly = true;",
      "",
      "function calculateProduct(){",
      "  const inputs = parentElement.querySelectorAll('.calc-base input[type=\"number\"]');",
      "",
      "  let product = 1;",
      "",
      "  inputs.forEach(input => {",
      "    const value = parseFloat(input.value);",
      "    if (isNaN(value) || value === 0) {",
      "      product += 0;",
      "    } else {",
      "      product += value;",
      "    }",
      "  });",
      "",
      "  resultInput.value = product",
      "}",
      "",
      "calculateProduct();",
      "parentElement.querySelectorAll('.calc-base input[type=\"number\"]').forEach(input => {",
      "  input.onkeyup = calculateProduct;",
      "});",
      "</script>",
      "]]></style>",
      "<style name=\"survey.question.answers.end\" label=\"custom_sum_end\"><![CDATA[",
      "\\@if not ec.simpleList",
      "\\@if not simple",
      "</tbody>",
      "\\@endif",
      "</\\$(tag)>",
      "\\@endif",
      "<!-- /.grid -->",
      "<div class=\"element calc-result\">",
      "  <span class=\"cell-sub-wrapper cell-legend-above\">",
      "  <span class=\"cell-text cell-sub-column\">Total</span>",
      "  <span class=\"cell-input cell-sub-column\">",
      "    <input type=\"number\" class=\"input text-input\" readonly=\"\">",
      "    <span class=\"post-text\">&nbsp;\\${this.styles.ss.postText or \"\"}</span>",
      "  </span>",
      "  </span>",
      "</div>",
      "</div>",
      "<!-- /.answers -->",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/NumberTotalCustom"
  },

  "NumberTotalCustomCopy_Snippet": {
    "prefix": "custom.sum.copy",
    "body": [
      "<style name=\"page.head\" copy=\"custom_sum_css\"/>",
      "<style name=\"question.after\" copy=\"custom_sum_js\"/>",
      "<style name=\"survey.question.answers.end\" copy=\"custom_sum_end\"/>"
    ],
    "description": "XmlStyleSystemCustom/NumberTotalCustomCopy"
  },

  "ShowUID_Snippet": {
    "prefix": "show.uid",
    "body": [
      "<style name=\"survey.completion\"><![CDATA[",
      "\\@if not gv.survey.root.styles.ss.hideProgressBar",
      "    <div class=\"progress-bar progress-\\${\"top\" if gv.survey.root.progressOnTop else \"bottom\"}\" title=\"@(progress-bar) - \\$(percent)% @(complete)\">",
      "      <div class=\"progress-box-outer\"><span class=\"progress-box-completed\" style=\"width: \\$(percent)%;\"></span></div>",
      "      <div class=\"progress-text\"><span class=\"screen-readers-only\">@(progress-bar) </span>\\$(percent)%</div>",
      "    </div>",
      "    <div><b>USERID : \\${UID}</b></div>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/ShowUID"
  },

  "ShowUIDList_Snippet": {
    "prefix": "show.uid.list",
    "body": [
      "<style name=\"survey.completion\"><![CDATA[",
      "<style>",
      ".show-info {",
      "  display: flex;",
      "  flex-direction: column;",
      "  gap: 10px;",
      "  padding: 5px;",
      "}",
      "",
      ".info-guide {",
      "  font-size: 1.2rem;",
      "  font-weight: bold;",
      "  font-style: italic;",
      "    border-bottom: 1px solid #ccc;",
      "    padding: 5px;",
      "}",
      ".ans-info {",
      "  display: flex;",
      "  flex-direction: column;",
      "  gap: 5px;",
      "}",
      "",
      ".info-row {",
      "  display: grid;",
      "  grid-template-columns: 100px 300px;",
      "}",
      "",
      ".info-name {",
      "  font-weight: bold;",
      "    display: flex;",
      "    align-items: center;",
      "    justify-content: center;",
      "    padding: 5px;",
      "    border-right: 1px solid #ccc;",
      "}",
      "",
      ".info-value {",
      "    display: flex;",
      "    align-items: center;",
      "    padding: 5px;",
      "}",
      "</style>",
      "\\@if not gv.survey.root.styles.ss.hideProgressBar",
      "    <div class=\"progress-bar progress-\\${\"top\" if gv.survey.root.progressOnTop else \"bottom\"}\" title=\"@(progress-bar) - \\$(percent)% @(complete)\">",
      "      <div class=\"progress-box-outer\"><span class=\"progress-box-completed\" style=\"width: \\$(percent)%;\"></span></div>",
      "      <div class=\"progress-text\"><span class=\"screen-readers-only\">@(progress-bar) </span>\\$(percent)%</div>",
      "    </div>",
      "  <div class=\"ch-showcard\" style=\"width: fit-content;\">",
      "    <details>",
      "      <summary>응답자 정보</summary>",
      "      <div class=\"show-info\">",
      "        <div class=\"ans-info\">",
      "          <div class=\"info-row\"><div class=\"info-name\">UserID</div><div class=\"info-value\">\\${UID}</div></div>",
      "            <!-- EXAMPLE -->",
      "            \\${'''<div class=\"info-row\"><div class=\"info-name\">Gender</div><div class=\"info-value\">%s</div></div>'''%(SQ1.selected.text) if SQ1.any else ''}",
      "        </div>",
      "      </div>",
      "    </details>",
      "    </div>",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/ShowUIDList"
  },

  "SimpleFlex_Snippet": {
    "prefix": "flex",
    "body": [
      "<style name=\"question.element\"><![CDATA[",
      "<span class=\"hidden\">",
      "  \\${v2_insertStyle('el.label.start')}",
      "  \\${v2_insertStyle('el.label.end')}",
      "  </span>",
      "  \\$(text)",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/SimpleFlex"
  },

  "TextareaWithTitle_Snippet": {
    "prefix": "textarea.title",
    "body": [
      "<style label=\"textarea_title\" arg:subTitle=\"$0\" name=\"el.textarea\"><![CDATA[",
      "\\@if row.styles.ss.preText or this.styles.ss.preText",
      "    \\${row.styles.ss.preText or this.styles.ss.preText or \"\"}&nbsp;",
      "\\@endif",
      "<div class=\"textarea-with-title\">",
      "    <label for=\"\\$(id)\">\\$(subTitle)</label>",
      "    <textarea name=\"\\$(name)\" id=\"\\$(id)\" rows=\"\\$(height)\" cols=\"\\$(width)\" wrap=\"virtual\" class=\"input textarea\" \\$(extra)>\\$(value)</textarea>",
      "</div>",
      "\\@if row.styles.ss.postText or this.styles.ss.postText",
      "    &nbsp;\\${row.styles.ss.postText or this.styles.ss.postText or \"\"}",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/TextareaWithTitle"
  },

  "TextareaWithTitleCopy_Snippet": {
    "prefix": "textarea.title.copy",
    "body": [
      "<style copy=\"textarea_title\" arg:subTitle=\"$0\" name=\"el.textarea\"/>"
    ],
    "description": "XmlStyleSystemCustom/TextareaWithTitleCopy"
  },

  "ToggleGroup_Snippet": {
    "prefix": "tog.group",
    "body": [
      "<style name='question.group' label=\"tog_group\"><![CDATA[",
      "<\\$(tagRow) class=\"row row-group row-group-1 rowGroup group1\">",
      "    <\\$(tagCell) scope=\"rowgroup\" colspan=\"\\$(span)\" id=\"\\$(this.label)_\\$(group.label)\" class=\"cell nonempty legend row-legend row-legend-left row-legend-group \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} \\${\"row-legend-group-space\" if row.index!=0 and ec.haveRightLegend and ec.haveLeftLegend else \"border-collapse\"} \\$(group.styles.ss.groupClassNames)\">",
      "        <div class=\"ch-group-toggle\">",
      "          <div class=\"ch-group-name\"><div class=\"ch-group-text\">\\$(text)</div></div>",
      "          <div class=\"ch-group-rows\">",
      "    </\\$(tagCell)>",
      "</\\$(tagRow)>",
      "]]></style>",
      "<style name='question.element' label=\"tog_element\"><![CDATA[",
      "\\@if ec.simpleList",
      "<div class=\"element \\$(rowStyle) \\$(levels) \\$(extraClasses) \\${col.group.styles.ss.groupClassNames if col.group else (row.group.styles.ss.groupClassNames if row.group else \"\")} \\$(col.styles.ss.colClassNames) \\$(row.styles.ss.rowClassNames) \\${\"clickableCell\" if isClickable else \"\"}\"\\$(extra)>",
      "      \\${v2_insertStyle('el.label.start')}",
      "      \\$(text)",
      "      \\${v2_insertStyle('el.label.end')}",
      "</div>",
      "\\@else",
      "<\\$(tag) \\$(headers) class=\"cell nonempty element \\$(levels) \\${\"desktop\" if this.grouping.cols else \"mobile\"} border-collapse \\$(extraClasses) \\${col.group.styles.ss.groupClassNames if col.group else (row.group.styles.ss.groupClassNames if row.group else \"\")} \\$(col.styles.ss.colClassNames) \\$(row.styles.ss.rowClassNames) \\${\"clickableCell\" if isClickable else \"\"}\"\\$(extra)>",
      "      \\${v2_insertStyle('el.label.start')}",
      "      \\$(text)",
      "      \\${v2_insertStyle('el.label.end')}",
      "</\\$(tag)>",
      "\\@endif",
      "\\@if this.shuffle",
      "\\${'</div></div>' if row.label == [each.label for each in [r for r in \\$(this.label).rows.order if r.displayed] if each.group.label == row.group.label][-1] else ''}",
      "\\@else",
      "\\${'</div></div>' if row.label == [each.label for each in [r for r in \\$(this.label).rows if r.displayed] if each.group.label == row.group.label][-1] else ''}",
      "\\@endif",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/ToggleGroup"
  },

  "ToggleGroupColumnCSS_Snippet": {
    "prefix": "tog.group.cols",
    "body": [
      "<style name=\"page.head\" label=\"tog_group_cols\" arg:colCount=\"2\"><![CDATA[",
      "<style>",
      ".ch-group-rows {",
      "    display: grid;",
      "    grid-template-columns: repeat(\\$(colCount), 1fr);",
      "    align-items: center;",
      "}",
      "",
      "\\@media (max-width: 1000px) {",
      "    .ch-group-rows {",
      "        grid-template-columns: 50% 50%;",
      "    }  ",
      "}",
      "",
      "\\@media (max-width: 768px){",
      "    .ch-group-rows {",
      "        grid-template-columns: 100%;",
      "    }",
      "}",
      "</style>",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/ToggleGroupColumnCSS"
  },

  "ToggleGroupColumnCSSCopy_Snippet": {
    "prefix": "tog.group.cols.copy",
    "body": [
      "<style name=\"page.head\" copy=\"tog_group_cols\" arg:colCount=\"2\"/>"
    ],
    "description": "XmlStyleSystemCustom/ToggleGroupColumnCSSCopy"
  },

  "ToggleGroupCopy_Snippet": {
    "prefix": "tog.group.copy",
    "body": [
      "<style name='question.group' copy=\"tog_group\"/>",
      "<style name='question.element' copy=\"tog_element\"/>"
    ],
    "description": "XmlStyleSystemCustom/ToggleGroupCopy"
  },

  "ToggleGroupJS_Snippet": {
    "prefix": "tog.group.js",
    "body": [
      "<style name=\"question.after\"><![CDATA[",
      "<script>",
      "window.addEventListener('DOMContentLoaded', ()=>{",
      "  groupToggleSetting({",
      "    qid: '.label_\\$(this.label)'",
      "  })",
      "});",
      "</script>",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/ToggleGroupJS"
  },

  "ToggleGroupLeftCSS_Snippet": {
    "prefix": "tog.group.left",
    "body": [
      "<style label=\"tog_group_left\" name=\"page.head\"><![CDATA[",
      "<style>",
      ".answers {",
      "    display: grid;",
      "    grid-template-columns: 50% 50%;",
      "    gap: 10px;",
      "}",
      "",
      ".ch-group-toggle {",
      "    display: grid;",
      "    grid-template-columns: 25% 75%;",
      "    align-items: stretch;",
      "}",
      "",
      ".ch-group-toggle .ch-group-name {",
      "    display: flex;",
      "    align-items: center;",
      "    justify-content: center;",
      "    text-align: center;",
      "}",
      "",
      ".ch-group-rows {",
      "  display: flex;",
      "  flex-direction: column;",
      "  /* display: gird; */",
      "  /* grid-template-columns: 50% 50%; */",
      "}",
      "",
      "\\@media (max-width: 768px) {",
      "  .ch-group-toggle {",
      "    grid-template-columns: 100%;",
      "  }",
      "",
      "  .ch-group-rows {",
      "    /*  grid-template-columns: 100%; */",
      "  }  ",
      "",
      "  .answers {",
      "    grid-template-columns: 100%;",
      "    gap: 0px;",
      "  }",
      "",
      "  .ch-group-toggle .ch-group-name {",
      "    display: block;",
      "    text-align: left;",
      "  }",
      "}",
      "",
      ".question {",
      "  margin: 0 !important;",
      "}",
      "",
      ".element {",
      "  display: flex;",
      "  align-items: center;",
      "}",
      "</style>",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/ToggleGroupLeftCSS"
  },

  "ToggleGroupLeftCSSCopy_Snippet": {
    "prefix": "tog.group.left.copy",
    "body": ["<style copy=\"tog_group_left\" name=\"page.head\"/>"],
    "description": "XmlStyleSystemCustom/ToggleGroupLeftCSSCopy"
  },

  "ToggleGroupNone_Snippet": {
    "prefix": "tog.group.none",
    "body": [
      ".none-group {",
      "  border: unset !important;",
      "  box-shadow:  unset !important;",
      "}",
      "",
      ".none-group .ch-group-name {",
      "  display: none;",
      "}",
      "",
      ".none-group .ch-group-rows {",
      "  grid-template-columns: repeat(1, 1fr) !important;",
      "}"
    ],
    "description": "XmlStyleSystemCustom/ToggleGroupNone"
  },

  "TopText_Snippet": {
    "prefix": "top.text",
    "body": [
      "<style name='survey.question' arg:showText=\"$0\" label=\"top_text\"> <![CDATA[",
      "<h1 title=\"@(question)\" class=\"question-text\" id=\"question_text_\\${this.label}\">",
      "  <div class=\"emphasis-text\">\\$(showText)</div>",
      "  \\${this.styles.html.showNumber and (str(number) + '. ') or ''}\\$(title)",
      "</h1>",
      "<!-- /.question-text -->",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/TopText"
  },

  "TopTextCopy_Snippet": {
    "prefix": "top.text.copy",
    "body": [
      "<style name='survey.question' arg:showText=\"$0\" copy=\"top_text\"/>"
    ],
    "description": "XmlStyleSystemCustom/TopTextCopy"
  },

  "XMLCommentBox_Snippet": {
    "prefix": "comment.box",
    "body": [
      "<style label=\"comment_box\" name='survey.question.instructions'> <![CDATA[",
      "<h2 title=\"@(instructions)\" class=\"instruction-text\">",
      "  <div class=\"comment-box\">\\$(comment)</div>",
      "</h2>",
      "<!-- /.instruction-text -->",
      "]]></style>"
    ],
    "description": "XmlStyleSystemCustom/XMLCommentBox"
  },

  "XMLCommentBoxCopy_Snippet": {
    "prefix": "comment.box.copy",
    "body": [
      "<style copy=\"comment_box\" name='survey.question.instructions'/>"
    ],
    "description": "XmlStyleSystemCustom/XMLCommentBoxCopy"
  }
}
